var searchIndex = JSON.parse('{\
"adventofcode_rust_2015":{"doc":"Advent of Code 2015 Solutions in Rust","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,0,0,5,5,5,5,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,5,5,0,0,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,6,3,5,11,11,11,5,0,0,11,5,11,12,5,5,5,12,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,3,5,5,11,11,0,0,11,11,11,12,5,5,5,12,12,12,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,3,5,5,11,11,12,12,5,5,0,0,12,12,11,11,11,12,5,5,5,12,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,3,11,11,12,0,0,5,5,11,11,5,11,12,5,5,5,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,5,5,0,0,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,5,5,0,0,5,5,5,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,6,8,5,0,5,5,10,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,3,11,11,0,0,11,12,11,12,11,5,5,5,11,11,11,11,12,0,0,5,5,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,6,6,5,5,0,0,5,5,5,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,17,17,17,17,17,17,6,6,0,0,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,13,13,4,13,13,13,13,11,11,0,0,5,11,11,5,5,5,11,11,11,12,12,12,12,12,12,12,12,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,0,0,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,5,0,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11,6,0,0,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,0,0,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,0,0,5,5,5,5,5,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,3,8,11,11,5,10,11,11,12,0,0,5,11,11,11,5,5,5,5,11,11,5,5,5,5,11,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,13,13,13,4,4,13,13,13,13,13,11,11,11,11,11,11,11,11,0,0,11,5,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,5,5,5,0,0,5,5,5,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,6,0,0,5,5,5,5,3,11,11,11,11,11,12,11,12,11,11,11,11,11,3,11,11,11,11,11,12,11,12,11,11,11,11,11],"n":["aoc_factory","day1","day10","day11","day12","day13","day14","day15","day16","day17","day18","day19","day2","day20","day21","day22","day23","day24","day25","day3","day4","day5","day6","day7","day8","day9","day1_part1","day1_part1_alt1","day1_part2","part1","part1_alt1","part2","day10_part1","day10_part2","group_chars","lookandsay","part1","part2","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","day11_part1","day11_part2","has_no_confusing","has_straight","has_two_nonoverlapping_pair","is_valid","next","next_valid","part1","part2","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","count","count_no_red","day12_part1","day12_part2","parse_input","part1","part2","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","Rules","TableRuleset","add_yourself","best_happiness","borrow","borrow_mut","calc_happiness","day13_part1","day13_part2","from","get_delta","into","names","parse_input","part1","part2","rules","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","Reindeer","best_distance_after","best_points_after","borrow","borrow_mut","day14_part1","day14_part2","distance_after","from","into","name","parse_input","part1","part2","rest_duration","run_duration","speed","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","Ingredient","best_cookie_score1","best_cookie_score2","borrow","borrow_mut","calories","capacity","cookie_calories","cookie_score","day15_part1","day15_part2","durability","flavor","fmt","from","into","name","parse_input","part1","part2","texture","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","Sue","borrow","borrow_mut","data","day16_part1","day16_part2","find_sue1","find_sue2","fmt","from","get_search","into","nr","parse_input","part1","part2","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","build_combinations","build_count_map","day17_part1","day17_part2","get_min_count","parse_input","part1","part2","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","count_on","create_grid","day18_part1","day18_part2","evolve1","evolve2","execute_step","fill_corners","parse_input","part1","part2","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","Replacements","SingleReplacements","apply","day19_part1","parse_input","part1","single_replacements","variants","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","try_run","type_id","Present","borrow","borrow_mut","day2_part1","day2_part2","from","h","into","l","paper_required","parse_input","part1","part2","ribbon_required","try_from","try_into","type_id","w","day20_part1","day20_part2","divisors","parse_input","part1","part2","presents_at1","presents_at2","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","Item","Stats","armor_ring_combos","combine","day21_part1","day21_part2","is_player_win","max_shop_gold","min_shop_gold","parse_input","part1","part2","ring_combos","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","DRAIN","MISSILE","POISON","RECHARGE","SHIELD","SPELLS","Spell","Stats","day22_part1","day22_part2","parse_input","part1","part2","sim","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","Hlf","Inc","Instruction","Jie","Jio","Jmp","Tpl","borrow","borrow_mut","day23_part1","day23_part2","exec","from","into","parse_input","part1","part2","try_from","try_into","type_id","0","0","0","0","0","0","1","1","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","day24_part1","day24_part2","find_min_quantum","parse_input","part1","part2","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","code_at","day25_part1","parse_input","part1","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","Point","day3_part1","day3_part2","part1","part2","split_merge_steps","steps","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","day4_part1","day4_part2","md5_suffix_increment_until","part1","part2","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","day5_part1","day5_part2","has_double_letter","has_invalid","has_pair_twice_without_overlapping","has_repeat_with_gap","has_three_vowels","is_nice1","is_nice2","part1","part2","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","Grid","GridCount","borrow","borrow_mut","count","count","count","count","data","day6_part1","day6_part2","eat","from","into","operation","part1","part2","toggle1","toggle2","try_from","try_into","turn_off1","turn_off2","turn_on1","turn_on2","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","BinaryAnd","BinaryNot","BinaryOr","Expr","Gate","LeftShift","RightShift","Set","Value","Wire","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","day7_part1","day7_part2","eq","eval_wire","fmt","from","from","into","into","ne","parse_expr","parse_gate","parse_input","part1","part2","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","0","0","1","1","1","1","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","_hex_to_char","_parse_hex","count","day8_part1","day8_part2","encode","escaped_backslash","escaped_hex","escaped_quote","parse","part1","part2","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_into","type_id","RoutingMap","day9_part1","day9_part2","lengths","parse_input","part1","part2","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id","RunnerStruct","bench","borrow","borrow_mut","from","gen","input","into","output","run","try_from","try_gen","try_into","type_id"],"q":["adventofcode_rust_2015","","","","","","","","","","","","","","","","","","","","","","","","","","adventofcode_rust_2015::day1","","","","","","adventofcode_rust_2015::day10","","","","","","adventofcode_rust_2015::day10::day10_part1","","","","","","","","","","","","","adventofcode_rust_2015::day10::day10_part2","","","","","","","","","","","","","adventofcode_rust_2015::day11","","","","","","","","","","adventofcode_rust_2015::day11::day11_part1","","","","","","","","","","","","","adventofcode_rust_2015::day11::day11_part2","","","","","","","","","","","","","adventofcode_rust_2015::day12","","","","","","","adventofcode_rust_2015::day12::day12_part1","","","","","","","","","","","","","","adventofcode_rust_2015::day12::day12_part2","","","","","","","","","","","","","","adventofcode_rust_2015::day13","","","","","","","","","","","","","","","","","","","","adventofcode_rust_2015::day13::day13_part1","","","","","","","","","","","","","","adventofcode_rust_2015::day13::day13_part2","","","","","","","","","","","","","","adventofcode_rust_2015::day14","","","","","","","","","","","","","","","","","","","","adventofcode_rust_2015::day14::day14_part1","","","","","","","","","","","","","","adventofcode_rust_2015::day14::day14_part2","","","","","","","","","","","","","","adventofcode_rust_2015::day15","","","","","","","","","","","","","","","","","","","","","","","","adventofcode_rust_2015::day15::day15_part1","","","","","","","","","","","","","","adventofcode_rust_2015::day15::day15_part2","","","","","","","","","","","","","","adventofcode_rust_2015::day16","","","","","","","","","","","","","","","","","","","adventofcode_rust_2015::day16::day16_part1","","","","","","","","","","","","","","adventofcode_rust_2015::day16::day16_part2","","","","","","","","","","","","","","adventofcode_rust_2015::day17","","","","","","","","adventofcode_rust_2015::day17::day17_part1","","","","","","","","","","","","","adventofcode_rust_2015::day17::day17_part2","","","","","","","","","","","","","adventofcode_rust_2015::day18","","","","","","","","","","","adventofcode_rust_2015::day18::day18_part1","","","","","","","","","","","","","adventofcode_rust_2015::day18::day18_part2","","","","","","","","","","","","","adventofcode_rust_2015::day19","","","","","","","","adventofcode_rust_2015::day19::day19_part1","","","","","","","","","","","","","adventofcode_rust_2015::day1::day1_part1","","","","","","","","","","","","","adventofcode_rust_2015::day1::day1_part1_alt1","","","","","","","","","","","","","adventofcode_rust_2015::day1::day1_part2","","","","","","","","","","","","","","adventofcode_rust_2015::day2","","","","","","","","","","","","","","","","","","adventofcode_rust_2015::day20","","","","","","","","adventofcode_rust_2015::day20::day20_part1","","","","","","","","","","","","","adventofcode_rust_2015::day20::day20_part2","","","","","","","","","","","","","adventofcode_rust_2015::day21","","","","","","","","","","","","","adventofcode_rust_2015::day21::day21_part1","","","","","","","","","","","","","adventofcode_rust_2015::day21::day21_part2","","","","","","","","","","","","","adventofcode_rust_2015::day22","","","","","","","","","","","","","","adventofcode_rust_2015::day22::day22_part1","","","","","","","","","","","","","adventofcode_rust_2015::day22::day22_part2","","","","","","","","","","","","","adventofcode_rust_2015::day23","","","","","","","","","","","","","","","","","","","","adventofcode_rust_2015::day23::Instruction","","","","","","","","adventofcode_rust_2015::day23::day23_part1","","","","","","","","","","","","","adventofcode_rust_2015::day23::day23_part2","","","","","","","","","","","","","adventofcode_rust_2015::day24","","","","","","adventofcode_rust_2015::day24::day24_part1","","","","","","","","","","","","","adventofcode_rust_2015::day24::day24_part2","","","","","","","","","","","","","adventofcode_rust_2015::day25","","","","adventofcode_rust_2015::day25::day25_part1","","","","","","","","","","","","","adventofcode_rust_2015::day2::day2_part1","","","","","","","","","","","","","","adventofcode_rust_2015::day2::day2_part2","","","","","","","","","","","","","","adventofcode_rust_2015::day3","","","","","","","adventofcode_rust_2015::day3::day3_part1","","","","","","","","","","","","","adventofcode_rust_2015::day3::day3_part2","","","","","","","","","","","","","adventofcode_rust_2015::day4","","","","","adventofcode_rust_2015::day4::day4_part1","","","","","","","","","","","","","adventofcode_rust_2015::day4::day4_part2","","","","","","","","","","","","","adventofcode_rust_2015::day5","","","","","","","","","","","adventofcode_rust_2015::day5::day5_part1","","","","","","","","","","","","","adventofcode_rust_2015::day5::day5_part2","","","","","","","","","","","","","adventofcode_rust_2015::day6","","","","","","","","","","","","","","","","","","","","","","","","","","adventofcode_rust_2015::day6::day6_part1","","","","","","","","","","","","","adventofcode_rust_2015::day6::day6_part2","","","","","","","","","","","","","adventofcode_rust_2015::day7","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","adventofcode_rust_2015::day7::Expr","","adventofcode_rust_2015::day7::Gate","","","","","","","","","","adventofcode_rust_2015::day7::day7_part1","","","","","","","","","","","","","adventofcode_rust_2015::day7::day7_part2","","","","","","","","","","","","","adventofcode_rust_2015::day8","","","","","","","","","","","","adventofcode_rust_2015::day8::day8_part1","","","","","","","","","","","","","adventofcode_rust_2015::day8::day8_part2","","","","","","","","","","","","","adventofcode_rust_2015::day9","","","","","","","adventofcode_rust_2015::day9::day9_part1","","","","","","","","","","","","","","adventofcode_rust_2015::day9::day9_part2","","","","","","","","","","","","",""],"d":["","Day 1: Not Quite Lisp","Day 10: Elves Look, Elves Say","Day 11: Corporate Policy","Day 12: JSAbacusFramework.io","Day 13: Knights of the Dinner Table","Day 14: Reindeer Olympics","Day 15: Science for Hungry People","Day 16: Aunt Sue","Day 17: No Such Thing as Too Much","Day 18: Like a GIF For Your Yard","Day 19: Medicine for Rudolph","Day 2: I Was Told There Would Be No Math","Day 20: Infinite Elves and Infinite Houses","Day 21: RPG Simulator 20XX","Day 22: Wizard Simulator 20XX","Day 23: Opening the Turing Lock","Day 24: It Hangs in the Balance","Day 25: Let It Snow","Day 3: Perfectly Spherical Houses in a Vacuum","Day 4: The Ideal Stocking Stuffer","Day 5: Doesn’t He Have Intern-Elves For This?","Day 6: Probably a Fire Hazard","Day 7: Some Assembly Required","Day 8: Matchsticks","Day 9: All in a Single Night —","","","","Part 1: To what floor do the instructions take Santa? …","Part 1 (alt1): To what floor do the instructions take …","Part 2: What is the position of the character that causes …","","","","","Part 1: Starting with the digits in your puzzle input, …","Part 2: Now, starting again with the digits in your puzzle …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Part 1: Given Santa’s current password (your puzzle …","Part 2: Santa’s password expired again. What’s the …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Part 1: What is the sum of all numbers in the document?","Part 2: Ignore any object (and all of its children) which …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Part 1: What is the total change in happiness for the …","Part 2: What is the total change in happiness for the …","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Part 1: After exactly <code>2503</code> seconds, what distance has the …","Part 2: After exactly <code>2503</code> seconds, how many points does …","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Part 1: what is the total score of the highest-scoring …","Part 2: what is the total score of the highest-scoring …","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Part 1: What is the number of the Sue that got you the …","Part 2: What is the number of the real Aunt Sue?","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Part 1: Filling all containers entirely, how many …","Part 2: Find the minimum number of containers that can …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","implements “Four lights, one in each corner, are stuck …","","Part 1: In your grid of 100x100 lights, given your initial …","Part 2: In your grid of 100x100 lights, given your initial …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Part 2: How long will it take to make the medicine? Given …","","","","Part 1: How many distinct molecules can be created after …","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Part 1: How many total square feet of wrapping paper …","Part 2: How many total feet of ribbon should they order?","","","","","","","","","","Part 1: What is the lowest house number of the house to …","Part 2: what is the new lowest house number of the house …","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Part 1: What is the least amount of gold you can spend and …","Part 2: What is the most amount of gold you can spend and …","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Part 1: What is the least amount of mana you can spend and …","Part 2: What is the least amount of mana you can spend and …","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Part 1: What is the value in register <code>b</code> when the program …","Part 2: what is the value in register b after the program …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Part 1: What is the quantum entanglement of the first …","Part 2: what is the quantum entanglement of the first …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Part 1: What code do you give the machine?","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Part 1: How many houses receive at least one present?","Part 2: This year, how many houses receive at least one …","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","increments a counter starting at 0 which is appended to …","Part 1: lowest positive number (no leading zeroes: <code>1</code>, <code>2</code>, <code>3</code>…","Part 2: lowest positive number (no leading zeroes: <code>1</code>, <code>2</code>, <code>3</code>…","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Part 1: How many strings are nice?","Part 2: How many strings are nice under these new rules?","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Part 1: After following the instructions, how many lights …","Part 2: What is the total brightness of all lights …","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Part 1: what signal is ultimately provided to wire <code>a</code>?","Part 2: What new signal is ultimately provided to wire a?","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Part 1: what is the number of characters of code for …","Part 2: find the total number of characters to represent …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Part 1: What is the distance of the shortest route?","Part 2: What is the distance of the longest route?","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,7,7,7,0,0,0,7,0,7,7,0,0,0,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,10,10,0,0,10,10,10,10,0,0,0,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,13,13,13,13,0,0,0,0,13,13,13,13,13,13,0,0,0,13,13,13,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,16,16,0,0,0,0,16,16,0,16,16,0,0,0,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,0,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,23,0,0,24,24,24,24,24,24,24,24,24,24,24,24,0,25,25,25,25,25,25,25,25,25,25,25,25,0,26,26,26,26,26,26,26,26,26,26,26,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,0,28,28,0,0,28,28,28,28,28,0,0,0,28,28,28,28,28,0,0,0,0,0,0,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,0,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,0,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,0,34,34,34,34,34,34,34,34,34,34,34,34,35,35,0,35,35,35,35,35,35,0,0,0,35,35,0,0,0,35,35,35,36,37,38,39,40,41,40,41,0,42,42,42,42,42,42,42,42,42,42,42,42,0,43,43,43,43,43,43,43,43,43,43,43,43,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,0,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,0,47,47,47,47,47,47,47,47,47,47,47,47,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,50,50,50,50,50,0,0,0,0,0,0,51,51,51,51,51,51,51,51,51,51,51,51,0,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,54,54,54,54,54,0,0,55,55,0,56,55,55,55,0,0,0,55,55,55,0,0,0,0,55,55,0,0,0,0,55,0,57,57,57,57,57,57,57,57,57,57,57,57,0,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,0,0,59,59,59,60,60,60,59,60,59,60,59,60,59,0,0,60,0,60,60,59,60,59,60,0,0,0,0,0,60,59,60,59,60,59,60,59,61,62,63,64,65,66,67,68,65,66,67,68,0,69,69,69,69,69,69,69,69,69,69,69,69,0,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,0,0,0,0,0,0,0,0,0,0,71,71,71,71,71,71,71,71,71,71,71,71,0,72,72,72,72,72,72,72,72,72,72,72,72,0,0,0,0,0,0,0,0,73,73,73,73,73,73,73,73,73,73,73,73,73,0,74,74,74,74,74,74,74,74,74,74,74,74,74],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",0]],["i32",0]],[[["str",0]],["i32",0]],[[["str",0]],["option",4,[["usize",0]]]],null,null,[[["str",0]],["vec",3,[["string",3]]]],[[["str",0]],["string",3]],[[["str",0]],["usize",0]],[[["str",0]],["usize",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["str",0]],["bool",0]],[[["str",0]],["bool",0]],[[["str",0]],["bool",0]],[[["str",0]],["bool",0]],[[["str",0]],["string",3]],[[["str",0]],["string",3]],[[["str",0]],["string",3]],[[["str",0]],["string",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["value",4]],["i64",0]],[[["value",4]],["i64",0]],null,null,[[["str",0]],["result",6,[["value",4]]]],[[["value",4]],["i64",0]],[[["value",4]],["i64",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["tableruleset",3]],["tableruleset",3]],[[["",0]],["i64",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["vec",3],["hashmap",3]],["i64",0]],null,null,[[]],[[["hashmap",3],["str",0],["str",0]],["i64",0]],[[]],null,[[["str",0]],["result",6,[["tableruleset",3]]]],[[["tableruleset",3]],["i64",0]],[[["tableruleset",3]],["i64",0]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["u64",0]],["u64",0]],[[["u64",0]],["u64",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["",0],["u64",0]],["u64",0]],[[]],[[]],null,[[["str",0]],["result",6,[["vec",3,[["reindeer",3]]]]]],[[],["u64",0]],[[],["u64",0]],null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[],["u64",0]],[[],["u64",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[],["i64",0]],[[],["u64",0]],null,null,null,null,[[["",0],["formatter",3]],["result",6]],[[]],[[]],null,[[["str",0]],["result",6,[["vec",3,[["ingredient",3]]]]]],[[],["u64",0]],[[],["u64",0]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[["hashmap",3]],["option",4,[["u16",0]]]],[[["hashmap",3]],["option",4,[["u16",0]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[],["hashmap",3,[["string",3],["i32",0]]]],[[]],null,[[["str",0]],["result",6,[["vec",3,[["sue",3]]]]]],[[],["u16",0]],[[],["u16",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],[[["u64",0]],["vec",3,[["vec",3,[["u64",0]]]]]],[[["vec",3]],["hashmap",3,[["usize",0],["usize",0]]]],null,null,[[["u64",0]],["usize",0]],[[["str",0]],["vec",3,[["u64",0]]]],[[],["usize",0]],[[],["usize",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["usize",0]],[[["usize",0],["usize",0]],["vec",3,[["vec",3,[["bool",0]]]]]],null,null,[[["usize",0]],["vec",3,[["vec",3,[["bool",0]]]]]],[[["usize",0]],["vec",3,[["vec",3,[["bool",0]]]]]],[[],["vec",3,[["vec",3,[["bool",0]]]]]],[[]],[[["str",0]],["vec",3,[["vec",3,[["bool",0]]]]]],[[],["usize",0]],[[],["usize",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["vec",3],["str",0]],["hashset",3,[["string",3]]]],null,[[["str",0]]],[[],["usize",0]],[[["",0],["str",0],["str",0]],["vec",3,[["string",3]]]],[[["str",0],["str",0],["str",0]],["hashset",3,[["string",3]]]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["box",3,[["display",8]]],["box",3,[["error",8]]]]]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[]],null,[[]],null,[[["",0]],["u32",0]],[[["str",0]],["result",4,[["vec",3,[["present",3]]],["parseinterror",3]]]],[[],["u32",0]],[[],["u32",0]],[[["",0]],["u32",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["u64",0]],["vec",3,[["u64",0]]]],[[["str",0]],["u64",0]],[[["u64",0]],["u64",0]],[[["u64",0]],["u64",0]],[[["u64",0]],["u64",0]],[[["u64",0]],["u64",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[],["vec",3]],[[]],null,null,[[],["bool",0]],[[],["u64",0]],[[],["u64",0]],[[["str",0]]],[[],["u64",0]],[[],["u64",0]],[[],["vec",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["str",0]]],[[],["u64",0]],[[],["u64",0]],[[["arc",3,[["mutex",3,[["u64",0]]]]],["i64",0],["u64",0],["i64",0],["i64",0],["vec",3],["bool",0],["u64",0],["bool",0]],["bool",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["i64",0]],["hashmap",3,[["string",3],["i64",0]]]],[[]],[[]],[[["str",0]],["vec",3,[["instruction",4]]]],[[],["i64",0]],[[],["i64",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["u64",0]],["u64",0]],[[["str",0]],["vec",3,[["u64",0]]]],[[],["u64",0]],[[],["u64",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["u64",0]],null,[[["str",0]]],[[],["u64",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["str",0]],["usize",0]],[[["str",0]],["usize",0]],[[["str",0]],["usize",0]],[[["str",0]],["hashmap",3,[["u32",0]]]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["str",0]],["u64",0]],[[["str",0]],["u64",0]],[[["str",0]],["u64",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["str",0]],["bool",0]],[[["str",0]],["bool",0]],[[["str",0]],["bool",0]],[[["str",0]],["bool",0]],[[["str",0]],["bool",0]],[[["str",0]],["bool",0]],[[["str",0]],["bool",0]],[[["str",0]],["usize",0]],[[["str",0]],["usize",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["str",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],null,null,null,[[["str",0],["str",0]],["bool",0]],[[]],[[]],[[["",0],["usize",0],["usize",0],["usize",0],["usize",0],["fn",8]]],[[["str",0]],["usize",0]],[[["str",0]],["usize",0]],[[["bool",0]]],[[["u32",0]]],[[],["result",4]],[[],["result",4]],[[["bool",0]]],[[["u32",0]]],[[["bool",0]]],[[["u32",0]]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["expr",4]],[[["",0]],["gate",4]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["",0],["expr",4]],["bool",0]],[[["str",0],["hashmap",3],["hashmap",3]],["u16",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["",0],["expr",4]],["bool",0]],[[["str",0]],["iresult",6,[["str",0],["expr",4]]]],[[["str",0]],["iresult",6,[["str",0]]]],[[["str",0]],["hashmap",3,[["string",3],["gate",4]]]],[[["hashmap",3]],["u16",0]],[[["hashmap",3]],["u16",0]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["str",0]],["result",4,[["char",0],["parseinterror",3]]]],[[["str",0]],["iresult",6,[["str",0],["string",3]]]],[[["str",0]]],null,null,[[["str",0]],["string",3]],[[["str",0]],["iresult",6,[["str",0],["str",0]]]],[[["str",0]],["iresult",6,[["str",0],["str",0]]]],[[["str",0]],["iresult",6,[["str",0],["str",0]]]],[[["str",0]],["iresult",6,[["str",0],["string",3]]]],[[["str",0]],["usize",0]],[[["str",0]],["usize",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["hashmap",3]],["vec",3,[["u64",0]]]],[[["str",0]],["result",6,[["hashmap",3,[["string",3],["hashmap",3,[["string",3],["u64",0]]]]]]]],[[["hashmap",3]],["u64",0]],[[["hashmap",3]],["u64",0]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["arcstr",3]]],null,[[]],null,[[["",0]],["box",3,[["display",8]]]],[[],["result",4]],[[["arcstr",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"TableRuleset"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"Reindeer"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"Ingredient"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"Sue"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[8,"SingleReplacements"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"Present"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[4,"Instruction"],[13,"Hlf"],[13,"Tpl"],[13,"Inc"],[13,"Jmp"],[13,"Jie"],[13,"Jio"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"Grid"],[8,"GridCount"],[3,"RunnerStruct"],[3,"RunnerStruct"],[4,"Gate"],[4,"Expr"],[13,"Wire"],[13,"Value"],[13,"Set"],[13,"BinaryNot"],[13,"BinaryAnd"],[13,"BinaryOr"],[13,"LeftShift"],[13,"RightShift"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"],[3,"RunnerStruct"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};