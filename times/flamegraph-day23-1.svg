<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="517.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="517.00"> </text><svg id="frames" x="10" width="1180" total_samples="11339"><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.02%)</title><rect x="0.0265%" y="437" width="0.0176%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="2"/><text x="0.2765%" y="447.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.02%)</title><rect x="0.0265%" y="421" width="0.0176%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="2"/><text x="0.2765%" y="431.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (2 samples, 0.02%)</title><rect x="0.0265%" y="405" width="0.0176%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="2"/><text x="0.2765%" y="415.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.02%)</title><rect x="0.0265%" y="389" width="0.0176%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="2"/><text x="0.2765%" y="399.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2 samples, 0.02%)</title><rect x="0.0265%" y="373" width="0.0176%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="2"/><text x="0.2765%" y="383.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (45 samples, 0.40%)</title><rect x="0.0441%" y="277" width="0.3969%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="45"/><text x="0.2941%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (45 samples, 0.40%)</title><rect x="0.0441%" y="261" width="0.3969%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="45"/><text x="0.2941%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (45 samples, 0.40%)</title><rect x="0.0441%" y="245" width="0.3969%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="45"/><text x="0.2941%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="0.3439%" y="229" width="0.0970%" height="15" fill="rgb(218,30,26)" fg:x="39" fg:w="11"/><text x="0.5939%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (89 samples, 0.78%)</title><rect x="0.0441%" y="325" width="0.7849%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="89"/><text x="0.2941%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89 samples, 0.78%)</title><rect x="0.0441%" y="309" width="0.7849%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="89"/><text x="0.2941%" y="319.50"></text></g><g><title>criterion::analysis::estimates::stats (89 samples, 0.78%)</title><rect x="0.0441%" y="293" width="0.7849%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="89"/><text x="0.2941%" y="303.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (44 samples, 0.39%)</title><rect x="0.4410%" y="277" width="0.3880%" height="15" fill="rgb(216,20,37)" fg:x="50" fg:w="44"/><text x="0.6910%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (44 samples, 0.39%)</title><rect x="0.4410%" y="261" width="0.3880%" height="15" fill="rgb(206,188,39)" fg:x="50" fg:w="44"/><text x="0.6910%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (44 samples, 0.39%)</title><rect x="0.4410%" y="245" width="0.3880%" height="15" fill="rgb(217,207,13)" fg:x="50" fg:w="44"/><text x="0.6910%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="0.7584%" y="229" width="0.0706%" height="15" fill="rgb(231,73,38)" fg:x="86" fg:w="8"/><text x="1.0084%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (91 samples, 0.80%)</title><rect x="0.0441%" y="357" width="0.8025%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="91"/><text x="0.2941%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (91 samples, 0.80%)</title><rect x="0.0441%" y="341" width="0.8025%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="91"/><text x="0.2941%" y="351.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="0.8290%" y="325" width="0.0176%" height="15" fill="rgb(221,200,47)" fg:x="94" fg:w="2"/><text x="1.0790%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="0.8290%" y="309" width="0.0176%" height="15" fill="rgb(226,26,5)" fg:x="94" fg:w="2"/><text x="1.0790%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.02%)</title><rect x="0.8290%" y="293" width="0.0176%" height="15" fill="rgb(249,33,26)" fg:x="94" fg:w="2"/><text x="1.0790%" y="303.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceFolder&lt;R,T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (2 samples, 0.02%)</title><rect x="0.8290%" y="277" width="0.0176%" height="15" fill="rgb(235,183,28)" fg:x="94" fg:w="2"/><text x="1.0790%" y="287.50"></text></g><g><title>&lt;(alloc::vec::Vec&lt;A&gt;,alloc::vec::Vec&lt;B&gt;,alloc::vec::Vec&lt;C&gt;,alloc::vec::Vec&lt;D&gt;) as criterion::stats::tuple::TupledDistributionsBuilder&gt;::extend (2 samples, 0.02%)</title><rect x="0.8290%" y="261" width="0.0176%" height="15" fill="rgb(221,5,38)" fg:x="94" fg:w="2"/><text x="1.0790%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (50 samples, 0.44%)</title><rect x="0.8466%" y="277" width="0.4410%" height="15" fill="rgb(247,18,42)" fg:x="96" fg:w="50"/><text x="1.0966%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (50 samples, 0.44%)</title><rect x="0.8466%" y="261" width="0.4410%" height="15" fill="rgb(241,131,45)" fg:x="96" fg:w="50"/><text x="1.0966%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (50 samples, 0.44%)</title><rect x="0.8466%" y="245" width="0.4410%" height="15" fill="rgb(249,31,29)" fg:x="96" fg:w="50"/><text x="1.0966%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="1.2259%" y="229" width="0.0617%" height="15" fill="rgb(225,111,53)" fg:x="139" fg:w="7"/><text x="1.4759%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (184 samples, 1.62%)</title><rect x="0.0441%" y="405" width="1.6227%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="184"/><text x="0.2941%" y="415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (184 samples, 1.62%)</title><rect x="0.0441%" y="389" width="1.6227%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="184"/><text x="0.2941%" y="399.50"></text></g><g><title>rayon_core::registry::in_worker (184 samples, 1.62%)</title><rect x="0.0441%" y="373" width="1.6227%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="184"/><text x="0.2941%" y="383.50"></text></g><g><title>std::panicking::try (93 samples, 0.82%)</title><rect x="0.8466%" y="357" width="0.8202%" height="15" fill="rgb(209,103,24)" fg:x="96" fg:w="93"/><text x="1.0966%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (93 samples, 0.82%)</title><rect x="0.8466%" y="341" width="0.8202%" height="15" fill="rgb(229,88,8)" fg:x="96" fg:w="93"/><text x="1.0966%" y="351.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (93 samples, 0.82%)</title><rect x="0.8466%" y="325" width="0.8202%" height="15" fill="rgb(213,181,19)" fg:x="96" fg:w="93"/><text x="1.0966%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (93 samples, 0.82%)</title><rect x="0.8466%" y="309" width="0.8202%" height="15" fill="rgb(254,191,54)" fg:x="96" fg:w="93"/><text x="1.0966%" y="319.50"></text></g><g><title>criterion::analysis::estimates::stats (93 samples, 0.82%)</title><rect x="0.8466%" y="293" width="0.8202%" height="15" fill="rgb(241,83,37)" fg:x="96" fg:w="93"/><text x="1.0966%" y="303.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (43 samples, 0.38%)</title><rect x="1.2876%" y="277" width="0.3792%" height="15" fill="rgb(233,36,39)" fg:x="146" fg:w="43"/><text x="1.5376%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (43 samples, 0.38%)</title><rect x="1.2876%" y="261" width="0.3792%" height="15" fill="rgb(226,3,54)" fg:x="146" fg:w="43"/><text x="1.5376%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (43 samples, 0.38%)</title><rect x="1.2876%" y="245" width="0.3792%" height="15" fill="rgb(245,192,40)" fg:x="146" fg:w="43"/><text x="1.5376%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="1.5963%" y="229" width="0.0706%" height="15" fill="rgb(238,167,29)" fg:x="181" fg:w="8"/><text x="1.8463%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (31 samples, 0.27%)</title><rect x="1.6668%" y="277" width="0.2734%" height="15" fill="rgb(232,182,51)" fg:x="189" fg:w="31"/><text x="1.9168%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (31 samples, 0.27%)</title><rect x="1.6668%" y="261" width="0.2734%" height="15" fill="rgb(231,60,39)" fg:x="189" fg:w="31"/><text x="1.9168%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (31 samples, 0.27%)</title><rect x="1.6668%" y="245" width="0.2734%" height="15" fill="rgb(208,69,12)" fg:x="189" fg:w="31"/><text x="1.9168%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.04%)</title><rect x="1.8961%" y="229" width="0.0441%" height="15" fill="rgb(235,93,37)" fg:x="215" fg:w="5"/><text x="2.1461%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (68 samples, 0.60%)</title><rect x="1.6668%" y="357" width="0.5997%" height="15" fill="rgb(213,116,39)" fg:x="189" fg:w="68"/><text x="1.9168%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (68 samples, 0.60%)</title><rect x="1.6668%" y="341" width="0.5997%" height="15" fill="rgb(222,207,29)" fg:x="189" fg:w="68"/><text x="1.9168%" y="351.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (68 samples, 0.60%)</title><rect x="1.6668%" y="325" width="0.5997%" height="15" fill="rgb(206,96,30)" fg:x="189" fg:w="68"/><text x="1.9168%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 0.60%)</title><rect x="1.6668%" y="309" width="0.5997%" height="15" fill="rgb(218,138,4)" fg:x="189" fg:w="68"/><text x="1.9168%" y="319.50"></text></g><g><title>criterion::analysis::estimates::stats (68 samples, 0.60%)</title><rect x="1.6668%" y="293" width="0.5997%" height="15" fill="rgb(250,191,14)" fg:x="189" fg:w="68"/><text x="1.9168%" y="303.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (37 samples, 0.33%)</title><rect x="1.9402%" y="277" width="0.3263%" height="15" fill="rgb(239,60,40)" fg:x="220" fg:w="37"/><text x="2.1902%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (37 samples, 0.33%)</title><rect x="1.9402%" y="261" width="0.3263%" height="15" fill="rgb(206,27,48)" fg:x="220" fg:w="37"/><text x="2.1902%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (37 samples, 0.33%)</title><rect x="1.9402%" y="245" width="0.3263%" height="15" fill="rgb(225,35,8)" fg:x="220" fg:w="37"/><text x="2.1902%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="2.1695%" y="229" width="0.0970%" height="15" fill="rgb(250,213,24)" fg:x="246" fg:w="11"/><text x="2.4195%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (40 samples, 0.35%)</title><rect x="2.2665%" y="277" width="0.3528%" height="15" fill="rgb(247,123,22)" fg:x="257" fg:w="40"/><text x="2.5165%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (40 samples, 0.35%)</title><rect x="2.2665%" y="261" width="0.3528%" height="15" fill="rgb(231,138,38)" fg:x="257" fg:w="40"/><text x="2.5165%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (40 samples, 0.35%)</title><rect x="2.2665%" y="245" width="0.3528%" height="15" fill="rgb(231,145,46)" fg:x="257" fg:w="40"/><text x="2.5165%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="2.5311%" y="229" width="0.0882%" height="15" fill="rgb(251,118,11)" fg:x="287" fg:w="10"/><text x="2.7811%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (328 samples, 2.89%)</title><rect x="0.0441%" y="437" width="2.8927%" height="15" fill="rgb(217,147,25)" fg:x="5" fg:w="328"/><text x="0.2941%" y="447.50">ra..</text></g><g><title>rayon_core::registry::in_worker (328 samples, 2.89%)</title><rect x="0.0441%" y="421" width="2.8927%" height="15" fill="rgb(247,81,37)" fg:x="5" fg:w="328"/><text x="0.2941%" y="431.50">ra..</text></g><g><title>std::panicking::try (144 samples, 1.27%)</title><rect x="1.6668%" y="405" width="1.2700%" height="15" fill="rgb(209,12,38)" fg:x="189" fg:w="144"/><text x="1.9168%" y="415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (144 samples, 1.27%)</title><rect x="1.6668%" y="389" width="1.2700%" height="15" fill="rgb(227,1,9)" fg:x="189" fg:w="144"/><text x="1.9168%" y="399.50"></text></g><g><title>rayon_core::registry::in_worker (144 samples, 1.27%)</title><rect x="1.6668%" y="373" width="1.2700%" height="15" fill="rgb(248,47,43)" fg:x="189" fg:w="144"/><text x="1.9168%" y="383.50"></text></g><g><title>std::panicking::try (76 samples, 0.67%)</title><rect x="2.2665%" y="357" width="0.6703%" height="15" fill="rgb(221,10,30)" fg:x="257" fg:w="76"/><text x="2.5165%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (76 samples, 0.67%)</title><rect x="2.2665%" y="341" width="0.6703%" height="15" fill="rgb(210,229,1)" fg:x="257" fg:w="76"/><text x="2.5165%" y="351.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (76 samples, 0.67%)</title><rect x="2.2665%" y="325" width="0.6703%" height="15" fill="rgb(222,148,37)" fg:x="257" fg:w="76"/><text x="2.5165%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 0.67%)</title><rect x="2.2665%" y="309" width="0.6703%" height="15" fill="rgb(234,67,33)" fg:x="257" fg:w="76"/><text x="2.5165%" y="319.50"></text></g><g><title>criterion::analysis::estimates::stats (76 samples, 0.67%)</title><rect x="2.2665%" y="293" width="0.6703%" height="15" fill="rgb(247,98,35)" fg:x="257" fg:w="76"/><text x="2.5165%" y="303.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (36 samples, 0.32%)</title><rect x="2.6193%" y="277" width="0.3175%" height="15" fill="rgb(247,138,52)" fg:x="297" fg:w="36"/><text x="2.8693%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (36 samples, 0.32%)</title><rect x="2.6193%" y="261" width="0.3175%" height="15" fill="rgb(213,79,30)" fg:x="297" fg:w="36"/><text x="2.8693%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (36 samples, 0.32%)</title><rect x="2.6193%" y="245" width="0.3175%" height="15" fill="rgb(246,177,23)" fg:x="297" fg:w="36"/><text x="2.8693%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="2.8398%" y="229" width="0.0970%" height="15" fill="rgb(230,62,27)" fg:x="322" fg:w="11"/><text x="3.0898%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="2.9368%" y="245" width="0.0970%" height="15" fill="rgb(216,154,8)" fg:x="333" fg:w="11"/><text x="3.1868%" y="255.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="2.9368%" y="229" width="0.0970%" height="15" fill="rgb(244,35,45)" fg:x="333" fg:w="11"/><text x="3.1868%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="2.9368%" y="213" width="0.0970%" height="15" fill="rgb(251,115,12)" fg:x="333" fg:w="11"/><text x="3.1868%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="2.9368%" y="197" width="0.0970%" height="15" fill="rgb(240,54,50)" fg:x="333" fg:w="11"/><text x="3.1868%" y="207.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="2.9632%" y="181" width="0.0706%" height="15" fill="rgb(233,84,52)" fg:x="336" fg:w="8"/><text x="3.2132%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.19%)</title><rect x="2.9368%" y="277" width="0.1940%" height="15" fill="rgb(207,117,47)" fg:x="333" fg:w="22"/><text x="3.1868%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.19%)</title><rect x="2.9368%" y="261" width="0.1940%" height="15" fill="rgb(249,43,39)" fg:x="333" fg:w="22"/><text x="3.1868%" y="271.50"></text></g><g><title>std::panicking::try (11 samples, 0.10%)</title><rect x="3.0338%" y="245" width="0.0970%" height="15" fill="rgb(209,38,44)" fg:x="344" fg:w="11"/><text x="3.2838%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="3.0338%" y="229" width="0.0970%" height="15" fill="rgb(236,212,23)" fg:x="344" fg:w="11"/><text x="3.2838%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="3.0338%" y="213" width="0.0970%" height="15" fill="rgb(242,79,21)" fg:x="344" fg:w="11"/><text x="3.2838%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="3.0338%" y="197" width="0.0970%" height="15" fill="rgb(211,96,35)" fg:x="344" fg:w="11"/><text x="3.2838%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="3.0338%" y="181" width="0.0970%" height="15" fill="rgb(253,215,40)" fg:x="344" fg:w="11"/><text x="3.2838%" y="191.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="3.0426%" y="165" width="0.0882%" height="15" fill="rgb(211,81,21)" fg:x="345" fg:w="10"/><text x="3.2926%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="3.1308%" y="229" width="0.0970%" height="15" fill="rgb(208,190,38)" fg:x="355" fg:w="11"/><text x="3.3808%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="3.1308%" y="213" width="0.0970%" height="15" fill="rgb(235,213,38)" fg:x="355" fg:w="11"/><text x="3.3808%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="3.1308%" y="197" width="0.0970%" height="15" fill="rgb(237,122,38)" fg:x="355" fg:w="11"/><text x="3.3808%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="3.1308%" y="181" width="0.0970%" height="15" fill="rgb(244,218,35)" fg:x="355" fg:w="11"/><text x="3.3808%" y="191.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.06%)</title><rect x="3.1661%" y="165" width="0.0617%" height="15" fill="rgb(240,68,47)" fg:x="359" fg:w="7"/><text x="3.4161%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.39%)</title><rect x="2.9368%" y="309" width="0.3880%" height="15" fill="rgb(210,16,53)" fg:x="333" fg:w="44"/><text x="3.1868%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (44 samples, 0.39%)</title><rect x="2.9368%" y="293" width="0.3880%" height="15" fill="rgb(235,124,12)" fg:x="333" fg:w="44"/><text x="3.1868%" y="303.50"></text></g><g><title>std::panicking::try (22 samples, 0.19%)</title><rect x="3.1308%" y="277" width="0.1940%" height="15" fill="rgb(224,169,11)" fg:x="355" fg:w="22"/><text x="3.3808%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.19%)</title><rect x="3.1308%" y="261" width="0.1940%" height="15" fill="rgb(250,166,2)" fg:x="355" fg:w="22"/><text x="3.3808%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.19%)</title><rect x="3.1308%" y="245" width="0.1940%" height="15" fill="rgb(242,216,29)" fg:x="355" fg:w="22"/><text x="3.3808%" y="255.50"></text></g><g><title>std::panicking::try (11 samples, 0.10%)</title><rect x="3.2278%" y="229" width="0.0970%" height="15" fill="rgb(230,116,27)" fg:x="366" fg:w="11"/><text x="3.4778%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="3.2278%" y="213" width="0.0970%" height="15" fill="rgb(228,99,48)" fg:x="366" fg:w="11"/><text x="3.4778%" y="223.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="3.2278%" y="197" width="0.0970%" height="15" fill="rgb(253,11,6)" fg:x="366" fg:w="11"/><text x="3.4778%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="3.2278%" y="181" width="0.0970%" height="15" fill="rgb(247,143,39)" fg:x="366" fg:w="11"/><text x="3.4778%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="3.2278%" y="165" width="0.0970%" height="15" fill="rgb(236,97,10)" fg:x="366" fg:w="11"/><text x="3.4778%" y="175.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="3.2366%" y="149" width="0.0882%" height="15" fill="rgb(233,208,19)" fg:x="367" fg:w="10"/><text x="3.4866%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="3.3248%" y="229" width="0.0970%" height="15" fill="rgb(216,164,2)" fg:x="377" fg:w="11"/><text x="3.5748%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="3.3248%" y="213" width="0.0970%" height="15" fill="rgb(220,129,5)" fg:x="377" fg:w="11"/><text x="3.5748%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="3.3248%" y="197" width="0.0970%" height="15" fill="rgb(242,17,10)" fg:x="377" fg:w="11"/><text x="3.5748%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="3.3248%" y="181" width="0.0970%" height="15" fill="rgb(242,107,0)" fg:x="377" fg:w="11"/><text x="3.5748%" y="191.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.10%)</title><rect x="3.3248%" y="165" width="0.0970%" height="15" fill="rgb(251,28,31)" fg:x="377" fg:w="11"/><text x="3.5748%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.19%)</title><rect x="3.3248%" y="261" width="0.1852%" height="15" fill="rgb(233,223,10)" fg:x="377" fg:w="21"/><text x="3.5748%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.19%)</title><rect x="3.3248%" y="245" width="0.1852%" height="15" fill="rgb(215,21,27)" fg:x="377" fg:w="21"/><text x="3.5748%" y="255.50"></text></g><g><title>std::panicking::try (10 samples, 0.09%)</title><rect x="3.4218%" y="229" width="0.0882%" height="15" fill="rgb(232,23,21)" fg:x="388" fg:w="10"/><text x="3.6718%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.09%)</title><rect x="3.4218%" y="213" width="0.0882%" height="15" fill="rgb(244,5,23)" fg:x="388" fg:w="10"/><text x="3.6718%" y="223.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.09%)</title><rect x="3.4218%" y="197" width="0.0882%" height="15" fill="rgb(226,81,46)" fg:x="388" fg:w="10"/><text x="3.6718%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.09%)</title><rect x="3.4218%" y="181" width="0.0882%" height="15" fill="rgb(247,70,30)" fg:x="388" fg:w="10"/><text x="3.6718%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (10 samples, 0.09%)</title><rect x="3.4218%" y="165" width="0.0882%" height="15" fill="rgb(212,68,19)" fg:x="388" fg:w="10"/><text x="3.6718%" y="175.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="3.4218%" y="149" width="0.0882%" height="15" fill="rgb(240,187,13)" fg:x="388" fg:w="10"/><text x="3.6718%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.09%)</title><rect x="3.5100%" y="213" width="0.0882%" height="15" fill="rgb(223,113,26)" fg:x="398" fg:w="10"/><text x="3.7600%" y="223.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.09%)</title><rect x="3.5100%" y="197" width="0.0882%" height="15" fill="rgb(206,192,2)" fg:x="398" fg:w="10"/><text x="3.7600%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.09%)</title><rect x="3.5100%" y="181" width="0.0882%" height="15" fill="rgb(241,108,4)" fg:x="398" fg:w="10"/><text x="3.7600%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (10 samples, 0.09%)</title><rect x="3.5100%" y="165" width="0.0882%" height="15" fill="rgb(247,173,49)" fg:x="398" fg:w="10"/><text x="3.7600%" y="175.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="3.5188%" y="149" width="0.0794%" height="15" fill="rgb(224,114,35)" fg:x="399" fg:w="9"/><text x="3.7688%" y="159.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (86 samples, 0.76%)</title><rect x="2.9368%" y="437" width="0.7584%" height="15" fill="rgb(245,159,27)" fg:x="333" fg:w="86"/><text x="3.1868%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (86 samples, 0.76%)</title><rect x="2.9368%" y="421" width="0.7584%" height="15" fill="rgb(245,172,44)" fg:x="333" fg:w="86"/><text x="3.1868%" y="431.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (86 samples, 0.76%)</title><rect x="2.9368%" y="405" width="0.7584%" height="15" fill="rgb(236,23,11)" fg:x="333" fg:w="86"/><text x="3.1868%" y="415.50"></text></g><g><title>std::panicking::try (86 samples, 0.76%)</title><rect x="2.9368%" y="389" width="0.7584%" height="15" fill="rgb(205,117,38)" fg:x="333" fg:w="86"/><text x="3.1868%" y="399.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (86 samples, 0.76%)</title><rect x="2.9368%" y="373" width="0.7584%" height="15" fill="rgb(237,72,25)" fg:x="333" fg:w="86"/><text x="3.1868%" y="383.50"></text></g><g><title>std::panicking::try (86 samples, 0.76%)</title><rect x="2.9368%" y="357" width="0.7584%" height="15" fill="rgb(244,70,9)" fg:x="333" fg:w="86"/><text x="3.1868%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (86 samples, 0.76%)</title><rect x="2.9368%" y="341" width="0.7584%" height="15" fill="rgb(217,125,39)" fg:x="333" fg:w="86"/><text x="3.1868%" y="351.50"></text></g><g><title>rayon_core::registry::in_worker (86 samples, 0.76%)</title><rect x="2.9368%" y="325" width="0.7584%" height="15" fill="rgb(235,36,10)" fg:x="333" fg:w="86"/><text x="3.1868%" y="335.50"></text></g><g><title>std::panicking::try (42 samples, 0.37%)</title><rect x="3.3248%" y="309" width="0.3704%" height="15" fill="rgb(251,123,47)" fg:x="377" fg:w="42"/><text x="3.5748%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (42 samples, 0.37%)</title><rect x="3.3248%" y="293" width="0.3704%" height="15" fill="rgb(221,13,13)" fg:x="377" fg:w="42"/><text x="3.5748%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (42 samples, 0.37%)</title><rect x="3.3248%" y="277" width="0.3704%" height="15" fill="rgb(238,131,9)" fg:x="377" fg:w="42"/><text x="3.5748%" y="287.50"></text></g><g><title>std::panicking::try (21 samples, 0.19%)</title><rect x="3.5100%" y="261" width="0.1852%" height="15" fill="rgb(211,50,8)" fg:x="398" fg:w="21"/><text x="3.7600%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.19%)</title><rect x="3.5100%" y="245" width="0.1852%" height="15" fill="rgb(245,182,24)" fg:x="398" fg:w="21"/><text x="3.7600%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.19%)</title><rect x="3.5100%" y="229" width="0.1852%" height="15" fill="rgb(242,14,37)" fg:x="398" fg:w="21"/><text x="3.7600%" y="239.50"></text></g><g><title>std::panicking::try (11 samples, 0.10%)</title><rect x="3.5982%" y="213" width="0.0970%" height="15" fill="rgb(246,228,12)" fg:x="408" fg:w="11"/><text x="3.8482%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="3.5982%" y="197" width="0.0970%" height="15" fill="rgb(213,55,15)" fg:x="408" fg:w="11"/><text x="3.8482%" y="207.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="3.5982%" y="181" width="0.0970%" height="15" fill="rgb(209,9,3)" fg:x="408" fg:w="11"/><text x="3.8482%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="3.5982%" y="165" width="0.0970%" height="15" fill="rgb(230,59,30)" fg:x="408" fg:w="11"/><text x="3.8482%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="3.5982%" y="149" width="0.0970%" height="15" fill="rgb(209,121,21)" fg:x="408" fg:w="11"/><text x="3.8482%" y="159.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="3.6070%" y="133" width="0.0882%" height="15" fill="rgb(220,109,13)" fg:x="409" fg:w="10"/><text x="3.8570%" y="143.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (19 samples, 0.17%)</title><rect x="3.7481%" y="245" width="0.1676%" height="15" fill="rgb(232,18,1)" fg:x="425" fg:w="19"/><text x="3.9981%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="3.7746%" y="229" width="0.1411%" height="15" fill="rgb(215,41,42)" fg:x="428" fg:w="16"/><text x="4.0246%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (37 samples, 0.33%)</title><rect x="3.6952%" y="261" width="0.3263%" height="15" fill="rgb(224,123,36)" fg:x="419" fg:w="37"/><text x="3.9452%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (12 samples, 0.11%)</title><rect x="3.9157%" y="245" width="0.1058%" height="15" fill="rgb(240,125,3)" fg:x="444" fg:w="12"/><text x="4.1657%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="3.9157%" y="229" width="0.1058%" height="15" fill="rgb(205,98,50)" fg:x="444" fg:w="12"/><text x="4.1657%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (49 samples, 0.43%)</title><rect x="3.6952%" y="325" width="0.4321%" height="15" fill="rgb(205,185,37)" fg:x="419" fg:w="49"/><text x="3.9452%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.43%)</title><rect x="3.6952%" y="309" width="0.4321%" height="15" fill="rgb(238,207,15)" fg:x="419" fg:w="49"/><text x="3.9452%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (49 samples, 0.43%)</title><rect x="3.6952%" y="293" width="0.4321%" height="15" fill="rgb(213,199,42)" fg:x="419" fg:w="49"/><text x="3.9452%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (49 samples, 0.43%)</title><rect x="3.6952%" y="277" width="0.4321%" height="15" fill="rgb(235,201,11)" fg:x="419" fg:w="49"/><text x="3.9452%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (12 samples, 0.11%)</title><rect x="4.0215%" y="261" width="0.1058%" height="15" fill="rgb(207,46,11)" fg:x="456" fg:w="12"/><text x="4.2715%" y="271.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="4.1626%" y="229" width="0.0176%" height="15" fill="rgb(241,35,35)" fg:x="472" fg:w="2"/><text x="4.4126%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (12 samples, 0.11%)</title><rect x="4.1538%" y="245" width="0.1058%" height="15" fill="rgb(243,32,47)" fg:x="471" fg:w="12"/><text x="4.4038%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="4.1803%" y="229" width="0.0794%" height="15" fill="rgb(247,202,23)" fg:x="474" fg:w="9"/><text x="4.4303%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (31 samples, 0.27%)</title><rect x="4.1273%" y="261" width="0.2734%" height="15" fill="rgb(219,102,11)" fg:x="468" fg:w="31"/><text x="4.3773%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (16 samples, 0.14%)</title><rect x="4.2596%" y="245" width="0.1411%" height="15" fill="rgb(243,110,44)" fg:x="483" fg:w="16"/><text x="4.5096%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="4.2596%" y="229" width="0.1411%" height="15" fill="rgb(222,74,54)" fg:x="483" fg:w="16"/><text x="4.5096%" y="239.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="4.3831%" y="213" width="0.0176%" height="15" fill="rgb(216,99,12)" fg:x="497" fg:w="2"/><text x="4.6331%" y="223.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (92 samples, 0.81%)</title><rect x="3.6952%" y="373" width="0.8114%" height="15" fill="rgb(226,22,26)" fg:x="419" fg:w="92"/><text x="3.9452%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (92 samples, 0.81%)</title><rect x="3.6952%" y="357" width="0.8114%" height="15" fill="rgb(217,163,10)" fg:x="419" fg:w="92"/><text x="3.9452%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (92 samples, 0.81%)</title><rect x="3.6952%" y="341" width="0.8114%" height="15" fill="rgb(213,25,53)" fg:x="419" fg:w="92"/><text x="3.9452%" y="351.50"></text></g><g><title>std::panicking::try (43 samples, 0.38%)</title><rect x="4.1273%" y="325" width="0.3792%" height="15" fill="rgb(252,105,26)" fg:x="468" fg:w="43"/><text x="4.3773%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (43 samples, 0.38%)</title><rect x="4.1273%" y="309" width="0.3792%" height="15" fill="rgb(220,39,43)" fg:x="468" fg:w="43"/><text x="4.3773%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (43 samples, 0.38%)</title><rect x="4.1273%" y="293" width="0.3792%" height="15" fill="rgb(229,68,48)" fg:x="468" fg:w="43"/><text x="4.3773%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (43 samples, 0.38%)</title><rect x="4.1273%" y="277" width="0.3792%" height="15" fill="rgb(252,8,32)" fg:x="468" fg:w="43"/><text x="4.3773%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (12 samples, 0.11%)</title><rect x="4.4007%" y="261" width="0.1058%" height="15" fill="rgb(223,20,43)" fg:x="499" fg:w="12"/><text x="4.6507%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (22 samples, 0.19%)</title><rect x="4.5418%" y="245" width="0.1940%" height="15" fill="rgb(229,81,49)" fg:x="515" fg:w="22"/><text x="4.7918%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (22 samples, 0.19%)</title><rect x="4.5418%" y="229" width="0.1940%" height="15" fill="rgb(236,28,36)" fg:x="515" fg:w="22"/><text x="4.7918%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (41 samples, 0.36%)</title><rect x="4.5066%" y="261" width="0.3616%" height="15" fill="rgb(249,185,26)" fg:x="511" fg:w="41"/><text x="4.7566%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.13%)</title><rect x="4.7359%" y="245" width="0.1323%" height="15" fill="rgb(249,174,33)" fg:x="537" fg:w="15"/><text x="4.9859%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.13%)</title><rect x="4.7359%" y="229" width="0.1323%" height="15" fill="rgb(233,201,37)" fg:x="537" fg:w="15"/><text x="4.9859%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (56 samples, 0.49%)</title><rect x="4.5066%" y="325" width="0.4939%" height="15" fill="rgb(221,78,26)" fg:x="511" fg:w="56"/><text x="4.7566%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (56 samples, 0.49%)</title><rect x="4.5066%" y="309" width="0.4939%" height="15" fill="rgb(250,127,30)" fg:x="511" fg:w="56"/><text x="4.7566%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (56 samples, 0.49%)</title><rect x="4.5066%" y="293" width="0.4939%" height="15" fill="rgb(230,49,44)" fg:x="511" fg:w="56"/><text x="4.7566%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (56 samples, 0.49%)</title><rect x="4.5066%" y="277" width="0.4939%" height="15" fill="rgb(229,67,23)" fg:x="511" fg:w="56"/><text x="4.7566%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (15 samples, 0.13%)</title><rect x="4.8682%" y="261" width="0.1323%" height="15" fill="rgb(249,83,47)" fg:x="552" fg:w="15"/><text x="5.1182%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (14 samples, 0.12%)</title><rect x="5.0445%" y="245" width="0.1235%" height="15" fill="rgb(215,43,3)" fg:x="572" fg:w="14"/><text x="5.2945%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="5.0622%" y="229" width="0.1058%" height="15" fill="rgb(238,154,13)" fg:x="574" fg:w="12"/><text x="5.3122%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (32 samples, 0.28%)</title><rect x="5.0181%" y="261" width="0.2822%" height="15" fill="rgb(219,56,2)" fg:x="569" fg:w="32"/><text x="5.2681%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.13%)</title><rect x="5.1680%" y="245" width="0.1323%" height="15" fill="rgb(233,0,4)" fg:x="586" fg:w="15"/><text x="5.4180%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.13%)</title><rect x="5.1680%" y="229" width="0.1323%" height="15" fill="rgb(235,30,7)" fg:x="586" fg:w="15"/><text x="5.4180%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (200 samples, 1.76%)</title><rect x="3.6952%" y="421" width="1.7638%" height="15" fill="rgb(250,79,13)" fg:x="419" fg:w="200"/><text x="3.9452%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (200 samples, 1.76%)</title><rect x="3.6952%" y="405" width="1.7638%" height="15" fill="rgb(211,146,34)" fg:x="419" fg:w="200"/><text x="3.9452%" y="415.50"></text></g><g><title>rayon_core::registry::in_worker (200 samples, 1.76%)</title><rect x="3.6952%" y="389" width="1.7638%" height="15" fill="rgb(228,22,38)" fg:x="419" fg:w="200"/><text x="3.9452%" y="399.50"></text></g><g><title>std::panicking::try (108 samples, 0.95%)</title><rect x="4.5066%" y="373" width="0.9525%" height="15" fill="rgb(235,168,5)" fg:x="511" fg:w="108"/><text x="4.7566%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (108 samples, 0.95%)</title><rect x="4.5066%" y="357" width="0.9525%" height="15" fill="rgb(221,155,16)" fg:x="511" fg:w="108"/><text x="4.7566%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (108 samples, 0.95%)</title><rect x="4.5066%" y="341" width="0.9525%" height="15" fill="rgb(215,215,53)" fg:x="511" fg:w="108"/><text x="4.7566%" y="351.50"></text></g><g><title>std::panicking::try (52 samples, 0.46%)</title><rect x="5.0004%" y="325" width="0.4586%" height="15" fill="rgb(223,4,10)" fg:x="567" fg:w="52"/><text x="5.2504%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (52 samples, 0.46%)</title><rect x="5.0004%" y="309" width="0.4586%" height="15" fill="rgb(234,103,6)" fg:x="567" fg:w="52"/><text x="5.2504%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (52 samples, 0.46%)</title><rect x="5.0004%" y="293" width="0.4586%" height="15" fill="rgb(227,97,0)" fg:x="567" fg:w="52"/><text x="5.2504%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (52 samples, 0.46%)</title><rect x="5.0004%" y="277" width="0.4586%" height="15" fill="rgb(234,150,53)" fg:x="567" fg:w="52"/><text x="5.2504%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (18 samples, 0.16%)</title><rect x="5.3003%" y="261" width="0.1587%" height="15" fill="rgb(228,201,54)" fg:x="601" fg:w="18"/><text x="5.5503%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (14 samples, 0.12%)</title><rect x="5.4943%" y="245" width="0.1235%" height="15" fill="rgb(222,22,37)" fg:x="623" fg:w="14"/><text x="5.7443%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="5.5208%" y="229" width="0.0970%" height="15" fill="rgb(237,53,32)" fg:x="626" fg:w="11"/><text x="5.7708%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (32 samples, 0.28%)</title><rect x="5.4590%" y="261" width="0.2822%" height="15" fill="rgb(233,25,53)" fg:x="619" fg:w="32"/><text x="5.7090%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.12%)</title><rect x="5.6178%" y="245" width="0.1235%" height="15" fill="rgb(210,40,34)" fg:x="637" fg:w="14"/><text x="5.8678%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.12%)</title><rect x="5.6178%" y="229" width="0.1235%" height="15" fill="rgb(241,220,44)" fg:x="637" fg:w="14"/><text x="5.8678%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (44 samples, 0.39%)</title><rect x="5.4590%" y="325" width="0.3880%" height="15" fill="rgb(235,28,35)" fg:x="619" fg:w="44"/><text x="5.7090%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.39%)</title><rect x="5.4590%" y="309" width="0.3880%" height="15" fill="rgb(210,56,17)" fg:x="619" fg:w="44"/><text x="5.7090%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (44 samples, 0.39%)</title><rect x="5.4590%" y="293" width="0.3880%" height="15" fill="rgb(224,130,29)" fg:x="619" fg:w="44"/><text x="5.7090%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (44 samples, 0.39%)</title><rect x="5.4590%" y="277" width="0.3880%" height="15" fill="rgb(235,212,8)" fg:x="619" fg:w="44"/><text x="5.7090%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (12 samples, 0.11%)</title><rect x="5.7412%" y="261" width="0.1058%" height="15" fill="rgb(223,33,50)" fg:x="651" fg:w="12"/><text x="5.9912%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (18 samples, 0.16%)</title><rect x="5.8912%" y="245" width="0.1587%" height="15" fill="rgb(219,149,13)" fg:x="668" fg:w="18"/><text x="6.1412%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="5.9353%" y="229" width="0.1146%" height="15" fill="rgb(250,156,29)" fg:x="673" fg:w="13"/><text x="6.1853%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (36 samples, 0.32%)</title><rect x="5.8471%" y="261" width="0.3175%" height="15" fill="rgb(216,193,19)" fg:x="663" fg:w="36"/><text x="6.0971%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (13 samples, 0.11%)</title><rect x="6.0499%" y="245" width="0.1146%" height="15" fill="rgb(216,135,14)" fg:x="686" fg:w="13"/><text x="6.2999%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="6.0499%" y="229" width="0.1146%" height="15" fill="rgb(241,47,5)" fg:x="686" fg:w="13"/><text x="6.2999%" y="239.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="6.1469%" y="213" width="0.0176%" height="15" fill="rgb(233,42,35)" fg:x="697" fg:w="2"/><text x="6.3969%" y="223.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (93 samples, 0.82%)</title><rect x="5.4590%" y="373" width="0.8202%" height="15" fill="rgb(231,13,6)" fg:x="619" fg:w="93"/><text x="5.7090%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (93 samples, 0.82%)</title><rect x="5.4590%" y="357" width="0.8202%" height="15" fill="rgb(207,181,40)" fg:x="619" fg:w="93"/><text x="5.7090%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (93 samples, 0.82%)</title><rect x="5.4590%" y="341" width="0.8202%" height="15" fill="rgb(254,173,49)" fg:x="619" fg:w="93"/><text x="5.7090%" y="351.50"></text></g><g><title>std::panicking::try (49 samples, 0.43%)</title><rect x="5.8471%" y="325" width="0.4321%" height="15" fill="rgb(221,1,38)" fg:x="663" fg:w="49"/><text x="6.0971%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.43%)</title><rect x="5.8471%" y="309" width="0.4321%" height="15" fill="rgb(206,124,46)" fg:x="663" fg:w="49"/><text x="6.0971%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (49 samples, 0.43%)</title><rect x="5.8471%" y="293" width="0.4321%" height="15" fill="rgb(249,21,11)" fg:x="663" fg:w="49"/><text x="6.0971%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (49 samples, 0.43%)</title><rect x="5.8471%" y="277" width="0.4321%" height="15" fill="rgb(222,201,40)" fg:x="663" fg:w="49"/><text x="6.0971%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13 samples, 0.11%)</title><rect x="6.1646%" y="261" width="0.1146%" height="15" fill="rgb(235,61,29)" fg:x="699" fg:w="13"/><text x="6.4146%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (19 samples, 0.17%)</title><rect x="6.3586%" y="245" width="0.1676%" height="15" fill="rgb(219,207,3)" fg:x="721" fg:w="19"/><text x="6.6086%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="6.4115%" y="229" width="0.1146%" height="15" fill="rgb(222,56,46)" fg:x="727" fg:w="13"/><text x="6.6615%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (41 samples, 0.36%)</title><rect x="6.2792%" y="261" width="0.3616%" height="15" fill="rgb(239,76,54)" fg:x="712" fg:w="41"/><text x="6.5292%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (13 samples, 0.11%)</title><rect x="6.5261%" y="245" width="0.1146%" height="15" fill="rgb(231,124,27)" fg:x="740" fg:w="13"/><text x="6.7761%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="6.5261%" y="229" width="0.1146%" height="15" fill="rgb(249,195,6)" fg:x="740" fg:w="13"/><text x="6.7761%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (58 samples, 0.51%)</title><rect x="6.2792%" y="325" width="0.5115%" height="15" fill="rgb(237,174,47)" fg:x="712" fg:w="58"/><text x="6.5292%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (58 samples, 0.51%)</title><rect x="6.2792%" y="309" width="0.5115%" height="15" fill="rgb(206,201,31)" fg:x="712" fg:w="58"/><text x="6.5292%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (58 samples, 0.51%)</title><rect x="6.2792%" y="293" width="0.5115%" height="15" fill="rgb(231,57,52)" fg:x="712" fg:w="58"/><text x="6.5292%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (58 samples, 0.51%)</title><rect x="6.2792%" y="277" width="0.5115%" height="15" fill="rgb(248,177,22)" fg:x="712" fg:w="58"/><text x="6.5292%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (17 samples, 0.15%)</title><rect x="6.6408%" y="261" width="0.1499%" height="15" fill="rgb(215,211,37)" fg:x="753" fg:w="17"/><text x="6.8908%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (3 samples, 0.03%)</title><rect x="6.8260%" y="245" width="0.0265%" height="15" fill="rgb(241,128,51)" fg:x="774" fg:w="3"/><text x="7.0760%" y="255.50"></text></g><g><title>criterion::analysis::estimates::stats (26 samples, 0.23%)</title><rect x="6.7995%" y="261" width="0.2293%" height="15" fill="rgb(227,165,31)" fg:x="771" fg:w="26"/><text x="7.0495%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (20 samples, 0.18%)</title><rect x="6.8525%" y="245" width="0.1764%" height="15" fill="rgb(228,167,24)" fg:x="777" fg:w="20"/><text x="7.1025%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (20 samples, 0.18%)</title><rect x="6.8525%" y="229" width="0.1764%" height="15" fill="rgb(228,143,12)" fg:x="777" fg:w="20"/><text x="7.1025%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (393 samples, 3.47%)</title><rect x="3.6952%" y="437" width="3.4659%" height="15" fill="rgb(249,149,8)" fg:x="419" fg:w="393"/><text x="3.9452%" y="447.50">ray..</text></g><g><title>std::panicking::try (193 samples, 1.70%)</title><rect x="5.4590%" y="421" width="1.7021%" height="15" fill="rgb(243,35,44)" fg:x="619" fg:w="193"/><text x="5.7090%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (193 samples, 1.70%)</title><rect x="5.4590%" y="405" width="1.7021%" height="15" fill="rgb(246,89,9)" fg:x="619" fg:w="193"/><text x="5.7090%" y="415.50"></text></g><g><title>rayon_core::registry::in_worker (193 samples, 1.70%)</title><rect x="5.4590%" y="389" width="1.7021%" height="15" fill="rgb(233,213,13)" fg:x="619" fg:w="193"/><text x="5.7090%" y="399.50"></text></g><g><title>std::panicking::try (100 samples, 0.88%)</title><rect x="6.2792%" y="373" width="0.8819%" height="15" fill="rgb(233,141,41)" fg:x="712" fg:w="100"/><text x="6.5292%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (100 samples, 0.88%)</title><rect x="6.2792%" y="357" width="0.8819%" height="15" fill="rgb(239,167,4)" fg:x="712" fg:w="100"/><text x="6.5292%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (100 samples, 0.88%)</title><rect x="6.2792%" y="341" width="0.8819%" height="15" fill="rgb(209,217,16)" fg:x="712" fg:w="100"/><text x="6.5292%" y="351.50"></text></g><g><title>std::panicking::try (42 samples, 0.37%)</title><rect x="6.7907%" y="325" width="0.3704%" height="15" fill="rgb(219,88,35)" fg:x="770" fg:w="42"/><text x="7.0407%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (42 samples, 0.37%)</title><rect x="6.7907%" y="309" width="0.3704%" height="15" fill="rgb(220,193,23)" fg:x="770" fg:w="42"/><text x="7.0407%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (42 samples, 0.37%)</title><rect x="6.7907%" y="293" width="0.3704%" height="15" fill="rgb(230,90,52)" fg:x="770" fg:w="42"/><text x="7.0407%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (42 samples, 0.37%)</title><rect x="6.7907%" y="277" width="0.3704%" height="15" fill="rgb(252,106,19)" fg:x="770" fg:w="42"/><text x="7.0407%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (15 samples, 0.13%)</title><rect x="7.0288%" y="261" width="0.1323%" height="15" fill="rgb(206,74,20)" fg:x="797" fg:w="15"/><text x="7.2788%" y="271.50"></text></g><g><title>start_thread (9 samples, 0.08%)</title><rect x="7.1611%" y="437" width="0.0794%" height="15" fill="rgb(230,138,44)" fg:x="812" fg:w="9"/><text x="7.4111%" y="447.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9 samples, 0.08%)</title><rect x="7.1611%" y="421" width="0.0794%" height="15" fill="rgb(235,182,43)" fg:x="812" fg:w="9"/><text x="7.4111%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.08%)</title><rect x="7.1611%" y="405" width="0.0794%" height="15" fill="rgb(242,16,51)" fg:x="812" fg:w="9"/><text x="7.4111%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.08%)</title><rect x="7.1611%" y="389" width="0.0794%" height="15" fill="rgb(248,9,4)" fg:x="812" fg:w="9"/><text x="7.4111%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (9 samples, 0.08%)</title><rect x="7.1611%" y="373" width="0.0794%" height="15" fill="rgb(210,31,22)" fg:x="812" fg:w="9"/><text x="7.4111%" y="383.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.08%)</title><rect x="7.1611%" y="357" width="0.0794%" height="15" fill="rgb(239,54,39)" fg:x="812" fg:w="9"/><text x="7.4111%" y="367.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (9 samples, 0.08%)</title><rect x="7.1611%" y="341" width="0.0794%" height="15" fill="rgb(230,99,41)" fg:x="812" fg:w="9"/><text x="7.4111%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.08%)</title><rect x="7.1611%" y="325" width="0.0794%" height="15" fill="rgb(253,106,12)" fg:x="812" fg:w="9"/><text x="7.4111%" y="335.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.08%)</title><rect x="7.1611%" y="309" width="0.0794%" height="15" fill="rgb(213,46,41)" fg:x="812" fg:w="9"/><text x="7.4111%" y="319.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.1611%" y="293" width="0.0794%" height="15" fill="rgb(215,133,35)" fg:x="812" fg:w="9"/><text x="7.4111%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.1611%" y="277" width="0.0794%" height="15" fill="rgb(213,28,5)" fg:x="812" fg:w="9"/><text x="7.4111%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.08%)</title><rect x="7.1611%" y="261" width="0.0794%" height="15" fill="rgb(215,77,49)" fg:x="812" fg:w="9"/><text x="7.4111%" y="271.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.1611%" y="245" width="0.0794%" height="15" fill="rgb(248,100,22)" fg:x="812" fg:w="9"/><text x="7.4111%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.1611%" y="229" width="0.0794%" height="15" fill="rgb(208,67,9)" fg:x="812" fg:w="9"/><text x="7.4111%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.08%)</title><rect x="7.1611%" y="213" width="0.0794%" height="15" fill="rgb(219,133,21)" fg:x="812" fg:w="9"/><text x="7.4111%" y="223.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.1611%" y="197" width="0.0794%" height="15" fill="rgb(246,46,29)" fg:x="812" fg:w="9"/><text x="7.4111%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.1611%" y="181" width="0.0794%" height="15" fill="rgb(246,185,52)" fg:x="812" fg:w="9"/><text x="7.4111%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.08%)</title><rect x="7.1611%" y="165" width="0.0794%" height="15" fill="rgb(252,136,11)" fg:x="812" fg:w="9"/><text x="7.4111%" y="175.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.1611%" y="149" width="0.0794%" height="15" fill="rgb(219,138,53)" fg:x="812" fg:w="9"/><text x="7.4111%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.1611%" y="133" width="0.0794%" height="15" fill="rgb(211,51,23)" fg:x="812" fg:w="9"/><text x="7.4111%" y="143.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.08%)</title><rect x="7.1611%" y="117" width="0.0794%" height="15" fill="rgb(247,221,28)" fg:x="812" fg:w="9"/><text x="7.4111%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.08%)</title><rect x="7.1611%" y="101" width="0.0794%" height="15" fill="rgb(251,222,45)" fg:x="812" fg:w="9"/><text x="7.4111%" y="111.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (9 samples, 0.08%)</title><rect x="7.1611%" y="85" width="0.0794%" height="15" fill="rgb(217,162,53)" fg:x="812" fg:w="9"/><text x="7.4111%" y="95.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="7.1611%" y="69" width="0.0794%" height="15" fill="rgb(229,93,14)" fg:x="812" fg:w="9"/><text x="7.4111%" y="79.50"></text></g><g><title>[unknown] (829 samples, 7.31%)</title><rect x="0.0088%" y="453" width="7.3111%" height="15" fill="rgb(209,67,49)" fg:x="1" fg:w="829"/><text x="0.2588%" y="463.50">[unknown]</text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.2405%" y="437" width="0.0794%" height="15" fill="rgb(213,87,29)" fg:x="821" fg:w="9"/><text x="7.4905%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.2405%" y="421" width="0.0794%" height="15" fill="rgb(205,151,52)" fg:x="821" fg:w="9"/><text x="7.4905%" y="431.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.08%)</title><rect x="7.2405%" y="405" width="0.0794%" height="15" fill="rgb(253,215,39)" fg:x="821" fg:w="9"/><text x="7.4905%" y="415.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.2405%" y="389" width="0.0794%" height="15" fill="rgb(221,220,41)" fg:x="821" fg:w="9"/><text x="7.4905%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.2405%" y="373" width="0.0794%" height="15" fill="rgb(218,133,21)" fg:x="821" fg:w="9"/><text x="7.4905%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.08%)</title><rect x="7.2405%" y="357" width="0.0794%" height="15" fill="rgb(221,193,43)" fg:x="821" fg:w="9"/><text x="7.4905%" y="367.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.2405%" y="341" width="0.0794%" height="15" fill="rgb(240,128,52)" fg:x="821" fg:w="9"/><text x="7.4905%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.2405%" y="325" width="0.0794%" height="15" fill="rgb(253,114,12)" fg:x="821" fg:w="9"/><text x="7.4905%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.08%)</title><rect x="7.2405%" y="309" width="0.0794%" height="15" fill="rgb(215,223,47)" fg:x="821" fg:w="9"/><text x="7.4905%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.08%)</title><rect x="7.2405%" y="293" width="0.0794%" height="15" fill="rgb(248,225,23)" fg:x="821" fg:w="9"/><text x="7.4905%" y="303.50"></text></g><g><title>criterion::analysis::estimates::stats (9 samples, 0.08%)</title><rect x="7.2405%" y="277" width="0.0794%" height="15" fill="rgb(250,108,0)" fg:x="821" fg:w="9"/><text x="7.4905%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (9 samples, 0.08%)</title><rect x="7.2405%" y="261" width="0.0794%" height="15" fill="rgb(228,208,7)" fg:x="821" fg:w="9"/><text x="7.4905%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="7.2405%" y="245" width="0.0794%" height="15" fill="rgb(244,45,10)" fg:x="821" fg:w="9"/><text x="7.4905%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="7.3199%" y="165" width="0.0176%" height="15" fill="rgb(207,125,25)" fg:x="830" fg:w="2"/><text x="7.5699%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="7.3199%" y="149" width="0.0176%" height="15" fill="rgb(210,195,18)" fg:x="830" fg:w="2"/><text x="7.5699%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="7.3199%" y="133" width="0.0176%" height="15" fill="rgb(249,80,12)" fg:x="830" fg:w="2"/><text x="7.5699%" y="143.50"></text></g><g><title>criterion::analysis::estimates (3 samples, 0.03%)</title><rect x="7.3199%" y="181" width="0.0265%" height="15" fill="rgb(221,65,9)" fg:x="830" fg:w="3"/><text x="7.5699%" y="191.50"></text></g><g><title>criterion::analysis::regression (3 samples, 0.03%)</title><rect x="7.3463%" y="181" width="0.0265%" height="15" fill="rgb(235,49,36)" fg:x="833" fg:w="3"/><text x="7.5963%" y="191.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="7.4081%" y="101" width="0.0265%" height="15" fill="rgb(225,32,20)" fg:x="840" fg:w="3"/><text x="7.6581%" y="111.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="7.3904%" y="117" width="0.0529%" height="15" fill="rgb(215,141,46)" fg:x="838" fg:w="6"/><text x="7.6404%" y="127.50"></text></g><g><title>[libc-2.31.so] (253 samples, 2.23%)</title><rect x="24.3496%" y="101" width="2.2312%" height="15" fill="rgb(250,160,47)" fg:x="2761" fg:w="253"/><text x="24.5996%" y="111.50">[..</text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="26.5808%" y="101" width="0.0176%" height="15" fill="rgb(216,222,40)" fg:x="3014" fg:w="2"/><text x="26.8308%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,770 samples, 24.43%)</title><rect x="26.5985%" y="101" width="24.4290%" height="15" fill="rgb(234,217,39)" fg:x="3016" fg:w="2770"/><text x="26.8485%" y="111.50">core::hash::BuildHasher::hash_one</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,161 samples, 10.24%)</title><rect x="40.7884%" y="85" width="10.2390%" height="15" fill="rgb(207,178,40)" fg:x="4625" fg:w="1161"/><text x="41.0384%" y="95.50">&lt;std::collectio..</text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.09%)</title><rect x="51.0362%" y="85" width="0.0882%" height="15" fill="rgb(221,136,13)" fg:x="5787" fg:w="10"/><text x="51.2862%" y="95.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.04%)</title><rect x="51.0803%" y="69" width="0.0441%" height="15" fill="rgb(249,199,10)" fg:x="5792" fg:w="5"/><text x="51.3303%" y="79.50"></text></g><g><title>adventofcode_rust_2015::day23::exec (4,963 samples, 43.77%)</title><rect x="7.4522%" y="117" width="43.7693%" height="15" fill="rgb(249,222,13)" fg:x="845" fg:w="4963"/><text x="7.7022%" y="127.50">adventofcode_rust_2015::day23::exec</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.19%)</title><rect x="51.0274%" y="101" width="0.1940%" height="15" fill="rgb(244,185,38)" fg:x="5786" fg:w="22"/><text x="51.2774%" y="111.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.10%)</title><rect x="51.1244%" y="85" width="0.0970%" height="15" fill="rgb(236,202,9)" fg:x="5797" fg:w="11"/><text x="51.3744%" y="95.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.04%)</title><rect x="51.1774%" y="69" width="0.0441%" height="15" fill="rgb(250,229,37)" fg:x="5803" fg:w="5"/><text x="51.4274%" y="79.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="51.1862%" y="53" width="0.0353%" height="15" fill="rgb(206,174,23)" fg:x="5804" fg:w="4"/><text x="51.4362%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,972 samples, 43.85%)</title><rect x="7.3816%" y="165" width="43.8487%" height="15" fill="rgb(211,33,43)" fg:x="837" fg:w="4972"/><text x="7.6316%" y="175.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::f..</text></g><g><title>criterion::Bencher::iter (4,972 samples, 43.85%)</title><rect x="7.3816%" y="149" width="43.8487%" height="15" fill="rgb(245,58,50)" fg:x="837" fg:w="4972"/><text x="7.6316%" y="159.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2015::day23::day23_part1::RunnerStruct as aoc_runner::Runner&gt;::bench (4,972 samples, 43.85%)</title><rect x="7.3816%" y="133" width="43.8487%" height="15" fill="rgb(244,68,36)" fg:x="837" fg:w="4972"/><text x="7.6316%" y="143.50">&lt;adventofcode_rust_2015::day23::day23_part1::RunnerStruct as aoc_runner:..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="51.2567%" y="117" width="0.0176%" height="15" fill="rgb(232,229,15)" fg:x="5812" fg:w="2"/><text x="51.5067%" y="127.50"></text></g><g><title>[libc-2.31.so] (255 samples, 2.25%)</title><rect x="69.7504%" y="101" width="2.2489%" height="15" fill="rgb(254,30,23)" fg:x="7909" fg:w="255"/><text x="70.0004%" y="111.50">[..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,265 samples, 11.16%)</title><rect x="87.6973%" y="85" width="11.1562%" height="15" fill="rgb(235,160,14)" fg:x="9944" fg:w="1265"/><text x="87.9473%" y="95.50">&lt;std::collection..</text></g><g><title>core::hash::BuildHasher::hash_one (3,045 samples, 26.85%)</title><rect x="72.0169%" y="101" width="26.8542%" height="15" fill="rgb(212,155,44)" fg:x="8166" fg:w="3045"/><text x="72.2669%" y="111.50">core::hash::BuildHasher::hash_one</text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.8535%" y="85" width="0.0176%" height="15" fill="rgb(226,2,50)" fg:x="11209" fg:w="2"/><text x="99.1035%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.8535%" y="69" width="0.0176%" height="15" fill="rgb(234,177,6)" fg:x="11209" fg:w="2"/><text x="99.1035%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.8535%" y="53" width="0.0176%" height="15" fill="rgb(217,24,9)" fg:x="11209" fg:w="2"/><text x="99.1035%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.8535%" y="37" width="0.0176%" height="15" fill="rgb(220,13,46)" fg:x="11209" fg:w="2"/><text x="99.1035%" y="47.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.04%)</title><rect x="98.8800%" y="85" width="0.0353%" height="15" fill="rgb(239,221,27)" fg:x="11212" fg:w="4"/><text x="99.1300%" y="95.50"></text></g><g><title>adventofcode_rust_2015::day23::exec (5,411 samples, 47.72%)</title><rect x="51.2832%" y="117" width="47.7203%" height="15" fill="rgb(222,198,25)" fg:x="5815" fg:w="5411"/><text x="51.5332%" y="127.50">adventofcode_rust_2015::day23::exec</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.13%)</title><rect x="98.8712%" y="101" width="0.1323%" height="15" fill="rgb(211,99,13)" fg:x="11211" fg:w="15"/><text x="99.1212%" y="111.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 0.09%)</title><rect x="98.9152%" y="85" width="0.0882%" height="15" fill="rgb(232,111,31)" fg:x="11216" fg:w="10"/><text x="99.1652%" y="95.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.07%)</title><rect x="98.9329%" y="69" width="0.0706%" height="15" fill="rgb(245,82,37)" fg:x="11218" fg:w="8"/><text x="99.1829%" y="79.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="98.9858%" y="53" width="0.0176%" height="15" fill="rgb(227,149,46)" fg:x="11224" fg:w="2"/><text x="99.2358%" y="63.50"></text></g><g><title>&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run (10,403 samples, 91.75%)</title><rect x="7.3199%" y="213" width="91.7453%" height="15" fill="rgb(218,36,50)" fg:x="830" fg:w="10403"/><text x="7.5699%" y="223.50">&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run</text></g><g><title>criterion::analysis::common (10,403 samples, 91.75%)</title><rect x="7.3199%" y="197" width="91.7453%" height="15" fill="rgb(226,80,48)" fg:x="830" fg:w="10403"/><text x="7.5699%" y="207.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (10,396 samples, 91.68%)</title><rect x="7.3816%" y="181" width="91.6836%" height="15" fill="rgb(238,224,15)" fg:x="837" fg:w="10396"/><text x="7.6316%" y="191.50">criterion::routine::Routine::sample</text></g><g><title>&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm_up (5,424 samples, 47.83%)</title><rect x="51.2303%" y="165" width="47.8349%" height="15" fill="rgb(241,136,10)" fg:x="5809" fg:w="5424"/><text x="51.4803%" y="175.50">&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm_up</text></g><g><title>criterion::Bencher::iter (5,424 samples, 47.83%)</title><rect x="51.2303%" y="149" width="47.8349%" height="15" fill="rgb(208,32,45)" fg:x="5809" fg:w="5424"/><text x="51.4803%" y="159.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2015::day23::day23_part1::RunnerStruct as aoc_runner::Runner&gt;::bench (5,424 samples, 47.83%)</title><rect x="51.2303%" y="133" width="47.8349%" height="15" fill="rgb(207,135,9)" fg:x="5809" fg:w="5424"/><text x="51.4803%" y="143.50">&lt;adventofcode_rust_2015::day23::day23_part1::RunnerStruct as aoc_runner::Runner..</text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.05%)</title><rect x="99.0123%" y="117" width="0.0529%" height="15" fill="rgb(206,86,44)" fg:x="11227" fg:w="6"/><text x="99.2623%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="99.0387%" y="101" width="0.0265%" height="15" fill="rgb(245,177,15)" fg:x="11230" fg:w="3"/><text x="99.2887%" y="111.50"></text></g><g><title>_start (10,404 samples, 91.75%)</title><rect x="7.3199%" y="453" width="91.7541%" height="15" fill="rgb(206,64,50)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="463.50">_start</text></g><g><title>__libc_start_main (10,404 samples, 91.75%)</title><rect x="7.3199%" y="437" width="91.7541%" height="15" fill="rgb(234,36,40)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="447.50">__libc_start_main</text></g><g><title>main (10,404 samples, 91.75%)</title><rect x="7.3199%" y="421" width="91.7541%" height="15" fill="rgb(213,64,8)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="431.50">main</text></g><g><title>std::rt::lang_start_internal (10,404 samples, 91.75%)</title><rect x="7.3199%" y="405" width="91.7541%" height="15" fill="rgb(210,75,36)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="415.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (10,404 samples, 91.75%)</title><rect x="7.3199%" y="389" width="91.7541%" height="15" fill="rgb(229,88,21)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="399.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,404 samples, 91.75%)</title><rect x="7.3199%" y="373" width="91.7541%" height="15" fill="rgb(252,204,47)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="383.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,404 samples, 91.75%)</title><rect x="7.3199%" y="357" width="91.7541%" height="15" fill="rgb(208,77,27)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="367.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (10,404 samples, 91.75%)</title><rect x="7.3199%" y="341" width="91.7541%" height="15" fill="rgb(221,76,26)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="351.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (10,404 samples, 91.75%)</title><rect x="7.3199%" y="325" width="91.7541%" height="15" fill="rgb(225,139,18)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="335.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,404 samples, 91.75%)</title><rect x="7.3199%" y="309" width="91.7541%" height="15" fill="rgb(230,137,11)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="319.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,404 samples, 91.75%)</title><rect x="7.3199%" y="293" width="91.7541%" height="15" fill="rgb(212,28,1)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="303.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10,404 samples, 91.75%)</title><rect x="7.3199%" y="277" width="91.7541%" height="15" fill="rgb(248,164,17)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="287.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (10,404 samples, 91.75%)</title><rect x="7.3199%" y="261" width="91.7541%" height="15" fill="rgb(222,171,42)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="271.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10,404 samples, 91.75%)</title><rect x="7.3199%" y="245" width="91.7541%" height="15" fill="rgb(243,84,45)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="255.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>aoc_benchmark::main (10,404 samples, 91.75%)</title><rect x="7.3199%" y="229" width="91.7541%" height="15" fill="rgb(252,49,23)" fg:x="830" fg:w="10404"/><text x="7.5699%" y="239.50">aoc_benchmark::main</text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.0740%" y="245" width="0.0176%" height="15" fill="rgb(215,19,7)" fg:x="11234" fg:w="2"/><text x="99.3240%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.0740%" y="229" width="0.0176%" height="15" fill="rgb(238,81,41)" fg:x="11234" fg:w="2"/><text x="99.3240%" y="239.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.0916%" y="197" width="0.0176%" height="15" fill="rgb(210,199,37)" fg:x="11236" fg:w="2"/><text x="99.3416%" y="207.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.0916%" y="181" width="0.0176%" height="15" fill="rgb(244,192,49)" fg:x="11236" fg:w="2"/><text x="99.3416%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.05%)</title><rect x="99.0740%" y="277" width="0.0529%" height="15" fill="rgb(226,211,11)" fg:x="11234" fg:w="6"/><text x="99.3240%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.05%)</title><rect x="99.0740%" y="261" width="0.0529%" height="15" fill="rgb(236,162,54)" fg:x="11234" fg:w="6"/><text x="99.3240%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.04%)</title><rect x="99.0916%" y="245" width="0.0353%" height="15" fill="rgb(220,229,9)" fg:x="11236" fg:w="4"/><text x="99.3416%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.04%)</title><rect x="99.0916%" y="229" width="0.0353%" height="15" fill="rgb(250,87,22)" fg:x="11236" fg:w="4"/><text x="99.3416%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.04%)</title><rect x="99.0916%" y="213" width="0.0353%" height="15" fill="rgb(239,43,17)" fg:x="11236" fg:w="4"/><text x="99.3416%" y="223.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.07%)</title><rect x="99.0740%" y="293" width="0.0706%" height="15" fill="rgb(231,177,25)" fg:x="11234" fg:w="8"/><text x="99.3240%" y="303.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.02%)</title><rect x="99.1269%" y="277" width="0.0176%" height="15" fill="rgb(219,179,1)" fg:x="11240" fg:w="2"/><text x="99.3769%" y="287.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2 samples, 0.02%)</title><rect x="99.1269%" y="261" width="0.0176%" height="15" fill="rgb(238,219,53)" fg:x="11240" fg:w="2"/><text x="99.3769%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1269%" y="245" width="0.0176%" height="15" fill="rgb(232,167,36)" fg:x="11240" fg:w="2"/><text x="99.3769%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1269%" y="229" width="0.0176%" height="15" fill="rgb(244,19,51)" fg:x="11240" fg:w="2"/><text x="99.3769%" y="239.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1269%" y="213" width="0.0176%" height="15" fill="rgb(224,6,22)" fg:x="11240" fg:w="2"/><text x="99.3769%" y="223.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1269%" y="197" width="0.0176%" height="15" fill="rgb(224,145,5)" fg:x="11240" fg:w="2"/><text x="99.3769%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1534%" y="229" width="0.0176%" height="15" fill="rgb(234,130,49)" fg:x="11243" fg:w="2"/><text x="99.4034%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1534%" y="213" width="0.0176%" height="15" fill="rgb(254,6,2)" fg:x="11243" fg:w="2"/><text x="99.4034%" y="223.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="99.1534%" y="261" width="0.0265%" height="15" fill="rgb(208,96,46)" fg:x="11243" fg:w="3"/><text x="99.4034%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.1534%" y="245" width="0.0265%" height="15" fill="rgb(239,3,39)" fg:x="11243" fg:w="3"/><text x="99.4034%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.03%)</title><rect x="99.1798%" y="261" width="0.0265%" height="15" fill="rgb(233,210,1)" fg:x="11246" fg:w="3"/><text x="99.4298%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="99.1798%" y="245" width="0.0265%" height="15" fill="rgb(244,137,37)" fg:x="11246" fg:w="3"/><text x="99.4298%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.1798%" y="229" width="0.0265%" height="15" fill="rgb(240,136,2)" fg:x="11246" fg:w="3"/><text x="99.4298%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.1886%" y="213" width="0.0176%" height="15" fill="rgb(239,18,37)" fg:x="11247" fg:w="2"/><text x="99.4386%" y="223.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1886%" y="197" width="0.0176%" height="15" fill="rgb(218,185,22)" fg:x="11247" fg:w="2"/><text x="99.4386%" y="207.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1886%" y="181" width="0.0176%" height="15" fill="rgb(225,218,4)" fg:x="11247" fg:w="2"/><text x="99.4386%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="99.1445%" y="293" width="0.0706%" height="15" fill="rgb(230,182,32)" fg:x="11242" fg:w="8"/><text x="99.3945%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.06%)</title><rect x="99.1534%" y="277" width="0.0617%" height="15" fill="rgb(242,56,43)" fg:x="11243" fg:w="7"/><text x="99.4034%" y="287.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.04%)</title><rect x="99.2151%" y="277" width="0.0353%" height="15" fill="rgb(233,99,24)" fg:x="11250" fg:w="4"/><text x="99.4651%" y="287.50"></text></g><g><title>std::panicking::try (4 samples, 0.04%)</title><rect x="99.2151%" y="261" width="0.0353%" height="15" fill="rgb(234,209,42)" fg:x="11250" fg:w="4"/><text x="99.4651%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.04%)</title><rect x="99.2151%" y="245" width="0.0353%" height="15" fill="rgb(227,7,12)" fg:x="11250" fg:w="4"/><text x="99.4651%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.2239%" y="229" width="0.0265%" height="15" fill="rgb(245,203,43)" fg:x="11251" fg:w="3"/><text x="99.4739%" y="239.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="99.2327%" y="213" width="0.0176%" height="15" fill="rgb(238,205,33)" fg:x="11252" fg:w="2"/><text x="99.4827%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.02%)</title><rect x="99.2327%" y="197" width="0.0176%" height="15" fill="rgb(231,56,7)" fg:x="11252" fg:w="2"/><text x="99.4827%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="99.2680%" y="181" width="0.0970%" height="15" fill="rgb(244,186,29)" fg:x="11256" fg:w="11"/><text x="99.5180%" y="191.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="99.2680%" y="165" width="0.0970%" height="15" fill="rgb(234,111,31)" fg:x="11256" fg:w="11"/><text x="99.5180%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="99.2680%" y="149" width="0.0970%" height="15" fill="rgb(241,149,10)" fg:x="11256" fg:w="11"/><text x="99.5180%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="99.2680%" y="133" width="0.0970%" height="15" fill="rgb(249,206,44)" fg:x="11256" fg:w="11"/><text x="99.5180%" y="143.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="99.2857%" y="117" width="0.0794%" height="15" fill="rgb(251,153,30)" fg:x="11258" fg:w="9"/><text x="99.5357%" y="127.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.20%)</title><rect x="99.2592%" y="213" width="0.2028%" height="15" fill="rgb(239,152,38)" fg:x="11255" fg:w="23"/><text x="99.5092%" y="223.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.19%)</title><rect x="99.2680%" y="197" width="0.1940%" height="15" fill="rgb(249,139,47)" fg:x="11256" fg:w="22"/><text x="99.5180%" y="207.50"></text></g><g><title>std::panicking::try (11 samples, 0.10%)</title><rect x="99.3650%" y="181" width="0.0970%" height="15" fill="rgb(244,64,35)" fg:x="11267" fg:w="11"/><text x="99.6150%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="99.3650%" y="165" width="0.0970%" height="15" fill="rgb(216,46,15)" fg:x="11267" fg:w="11"/><text x="99.6150%" y="175.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="99.3650%" y="149" width="0.0970%" height="15" fill="rgb(250,74,19)" fg:x="11267" fg:w="11"/><text x="99.6150%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="99.3650%" y="133" width="0.0970%" height="15" fill="rgb(249,42,33)" fg:x="11267" fg:w="11"/><text x="99.6150%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="99.3650%" y="117" width="0.0970%" height="15" fill="rgb(242,149,17)" fg:x="11267" fg:w="11"/><text x="99.6150%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="99.3827%" y="101" width="0.0794%" height="15" fill="rgb(244,29,21)" fg:x="11269" fg:w="9"/><text x="99.6327%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.11%)</title><rect x="99.4620%" y="165" width="0.1058%" height="15" fill="rgb(220,130,37)" fg:x="11278" fg:w="12"/><text x="99.7120%" y="175.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.11%)</title><rect x="99.4620%" y="149" width="0.1058%" height="15" fill="rgb(211,67,2)" fg:x="11278" fg:w="12"/><text x="99.7120%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.11%)</title><rect x="99.4620%" y="133" width="0.1058%" height="15" fill="rgb(235,68,52)" fg:x="11278" fg:w="12"/><text x="99.7120%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.11%)</title><rect x="99.4620%" y="117" width="0.1058%" height="15" fill="rgb(246,142,3)" fg:x="11278" fg:w="12"/><text x="99.7120%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="99.4885%" y="101" width="0.0794%" height="15" fill="rgb(241,25,7)" fg:x="11281" fg:w="9"/><text x="99.7385%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.41%)</title><rect x="99.2592%" y="245" width="0.4145%" height="15" fill="rgb(242,119,39)" fg:x="11255" fg:w="47"/><text x="99.5092%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (47 samples, 0.41%)</title><rect x="99.2592%" y="229" width="0.4145%" height="15" fill="rgb(241,98,45)" fg:x="11255" fg:w="47"/><text x="99.5092%" y="239.50"></text></g><g><title>std::panicking::try (24 samples, 0.21%)</title><rect x="99.4620%" y="213" width="0.2117%" height="15" fill="rgb(254,28,30)" fg:x="11278" fg:w="24"/><text x="99.7120%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.21%)</title><rect x="99.4620%" y="197" width="0.2117%" height="15" fill="rgb(241,142,54)" fg:x="11278" fg:w="24"/><text x="99.7120%" y="207.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 0.21%)</title><rect x="99.4620%" y="181" width="0.2117%" height="15" fill="rgb(222,85,15)" fg:x="11278" fg:w="24"/><text x="99.7120%" y="191.50"></text></g><g><title>std::panicking::try (12 samples, 0.11%)</title><rect x="99.5679%" y="165" width="0.1058%" height="15" fill="rgb(210,85,47)" fg:x="11290" fg:w="12"/><text x="99.8179%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.11%)</title><rect x="99.5679%" y="149" width="0.1058%" height="15" fill="rgb(224,206,25)" fg:x="11290" fg:w="12"/><text x="99.8179%" y="159.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.11%)</title><rect x="99.5679%" y="133" width="0.1058%" height="15" fill="rgb(243,201,19)" fg:x="11290" fg:w="12"/><text x="99.8179%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.11%)</title><rect x="99.5679%" y="117" width="0.1058%" height="15" fill="rgb(236,59,4)" fg:x="11290" fg:w="12"/><text x="99.8179%" y="127.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.11%)</title><rect x="99.5679%" y="101" width="0.1058%" height="15" fill="rgb(254,179,45)" fg:x="11290" fg:w="12"/><text x="99.8179%" y="111.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (12 samples, 0.11%)</title><rect x="99.5679%" y="85" width="0.1058%" height="15" fill="rgb(226,14,10)" fg:x="11290" fg:w="12"/><text x="99.8179%" y="95.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.11%)</title><rect x="99.6825%" y="165" width="0.1058%" height="15" fill="rgb(244,27,41)" fg:x="11303" fg:w="12"/><text x="99.9325%" y="175.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.11%)</title><rect x="99.6825%" y="149" width="0.1058%" height="15" fill="rgb(235,35,32)" fg:x="11303" fg:w="12"/><text x="99.9325%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.11%)</title><rect x="99.6825%" y="133" width="0.1058%" height="15" fill="rgb(218,68,31)" fg:x="11303" fg:w="12"/><text x="99.9325%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.11%)</title><rect x="99.6825%" y="117" width="0.1058%" height="15" fill="rgb(207,120,37)" fg:x="11303" fg:w="12"/><text x="99.9325%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="99.7001%" y="101" width="0.0882%" height="15" fill="rgb(227,98,0)" fg:x="11305" fg:w="10"/><text x="99.9501%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.20%)</title><rect x="99.6825%" y="197" width="0.2028%" height="15" fill="rgb(207,7,3)" fg:x="11303" fg:w="23"/><text x="99.9325%" y="207.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.20%)</title><rect x="99.6825%" y="181" width="0.2028%" height="15" fill="rgb(206,98,19)" fg:x="11303" fg:w="23"/><text x="99.9325%" y="191.50"></text></g><g><title>std::panicking::try (11 samples, 0.10%)</title><rect x="99.7883%" y="165" width="0.0970%" height="15" fill="rgb(217,5,26)" fg:x="11315" fg:w="11"/><text x="100.0383%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="99.7883%" y="149" width="0.0970%" height="15" fill="rgb(235,190,38)" fg:x="11315" fg:w="11"/><text x="100.0383%" y="159.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="99.7883%" y="133" width="0.0970%" height="15" fill="rgb(247,86,24)" fg:x="11315" fg:w="11"/><text x="100.0383%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="99.7883%" y="117" width="0.0970%" height="15" fill="rgb(205,101,16)" fg:x="11315" fg:w="11"/><text x="100.0383%" y="127.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="99.7883%" y="101" width="0.0970%" height="15" fill="rgb(246,168,33)" fg:x="11315" fg:w="11"/><text x="100.0383%" y="111.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="99.8060%" y="85" width="0.0794%" height="15" fill="rgb(231,114,1)" fg:x="11317" fg:w="9"/><text x="100.0560%" y="95.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="99.8854%" y="149" width="0.0970%" height="15" fill="rgb(207,184,53)" fg:x="11326" fg:w="11"/><text x="100.1354%" y="159.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="99.8854%" y="133" width="0.0970%" height="15" fill="rgb(224,95,51)" fg:x="11326" fg:w="11"/><text x="100.1354%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="99.8854%" y="117" width="0.0970%" height="15" fill="rgb(212,188,45)" fg:x="11326" fg:w="11"/><text x="100.1354%" y="127.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="99.8854%" y="101" width="0.0970%" height="15" fill="rgb(223,154,38)" fg:x="11326" fg:w="11"/><text x="100.1354%" y="111.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="99.8942%" y="85" width="0.0882%" height="15" fill="rgb(251,22,52)" fg:x="11327" fg:w="10"/><text x="100.1442%" y="95.50"></text></g><g><title>all (11,339 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(229,209,22)" fg:x="0" fg:w="11339"/><text x="0.2500%" y="495.50"></text></g><g><title>aoc_benchmark-4 (11,339 samples, 100.00%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(234,138,34)" fg:x="0" fg:w="11339"/><text x="0.2500%" y="479.50">aoc_benchmark-4</text></g><g><title>clone (105 samples, 0.93%)</title><rect x="99.0740%" y="453" width="0.9260%" height="15" fill="rgb(212,95,11)" fg:x="11234" fg:w="105"/><text x="99.3240%" y="463.50"></text></g><g><title>start_thread (105 samples, 0.93%)</title><rect x="99.0740%" y="437" width="0.9260%" height="15" fill="rgb(240,179,47)" fg:x="11234" fg:w="105"/><text x="99.3240%" y="447.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (105 samples, 0.93%)</title><rect x="99.0740%" y="421" width="0.9260%" height="15" fill="rgb(240,163,11)" fg:x="11234" fg:w="105"/><text x="99.3240%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (105 samples, 0.93%)</title><rect x="99.0740%" y="405" width="0.9260%" height="15" fill="rgb(236,37,12)" fg:x="11234" fg:w="105"/><text x="99.3240%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (105 samples, 0.93%)</title><rect x="99.0740%" y="389" width="0.9260%" height="15" fill="rgb(232,164,16)" fg:x="11234" fg:w="105"/><text x="99.3240%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (105 samples, 0.93%)</title><rect x="99.0740%" y="373" width="0.9260%" height="15" fill="rgb(244,205,15)" fg:x="11234" fg:w="105"/><text x="99.3240%" y="383.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (105 samples, 0.93%)</title><rect x="99.0740%" y="357" width="0.9260%" height="15" fill="rgb(223,117,47)" fg:x="11234" fg:w="105"/><text x="99.3240%" y="367.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (105 samples, 0.93%)</title><rect x="99.0740%" y="341" width="0.9260%" height="15" fill="rgb(244,107,35)" fg:x="11234" fg:w="105"/><text x="99.3240%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (105 samples, 0.93%)</title><rect x="99.0740%" y="325" width="0.9260%" height="15" fill="rgb(205,140,8)" fg:x="11234" fg:w="105"/><text x="99.3240%" y="335.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (105 samples, 0.93%)</title><rect x="99.0740%" y="309" width="0.9260%" height="15" fill="rgb(228,84,46)" fg:x="11234" fg:w="105"/><text x="99.3240%" y="319.50"></text></g><g><title>std::panicking::try (89 samples, 0.78%)</title><rect x="99.2151%" y="293" width="0.7849%" height="15" fill="rgb(254,188,9)" fg:x="11250" fg:w="89"/><text x="99.4651%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (85 samples, 0.75%)</title><rect x="99.2504%" y="277" width="0.7496%" height="15" fill="rgb(206,112,54)" fg:x="11254" fg:w="85"/><text x="99.5004%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (84 samples, 0.74%)</title><rect x="99.2592%" y="261" width="0.7408%" height="15" fill="rgb(216,84,49)" fg:x="11255" fg:w="84"/><text x="99.5092%" y="271.50"></text></g><g><title>std::panicking::try (37 samples, 0.33%)</title><rect x="99.6737%" y="245" width="0.3263%" height="15" fill="rgb(214,194,35)" fg:x="11302" fg:w="37"/><text x="99.9237%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.33%)</title><rect x="99.6737%" y="229" width="0.3263%" height="15" fill="rgb(249,28,3)" fg:x="11302" fg:w="37"/><text x="99.9237%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (36 samples, 0.32%)</title><rect x="99.6825%" y="213" width="0.3175%" height="15" fill="rgb(222,56,52)" fg:x="11303" fg:w="36"/><text x="99.9325%" y="223.50"></text></g><g><title>std::panicking::try (13 samples, 0.11%)</title><rect x="99.8854%" y="197" width="0.1146%" height="15" fill="rgb(245,217,50)" fg:x="11326" fg:w="13"/><text x="100.1354%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.11%)</title><rect x="99.8854%" y="181" width="0.1146%" height="15" fill="rgb(213,201,24)" fg:x="11326" fg:w="13"/><text x="100.1354%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.11%)</title><rect x="99.8854%" y="165" width="0.1146%" height="15" fill="rgb(248,116,28)" fg:x="11326" fg:w="13"/><text x="100.1354%" y="175.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="99.9824%" y="149" width="0.0176%" height="15" fill="rgb(219,72,43)" fg:x="11337" fg:w="2"/><text x="100.2324%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.02%)</title><rect x="99.9824%" y="133" width="0.0176%" height="15" fill="rgb(209,138,14)" fg:x="11337" fg:w="2"/><text x="100.2324%" y="143.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.02%)</title><rect x="99.9824%" y="117" width="0.0176%" height="15" fill="rgb(222,18,33)" fg:x="11337" fg:w="2"/><text x="100.2324%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="99.9824%" y="101" width="0.0176%" height="15" fill="rgb(213,199,7)" fg:x="11337" fg:w="2"/><text x="100.2324%" y="111.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (2 samples, 0.02%)</title><rect x="99.9824%" y="85" width="0.0176%" height="15" fill="rgb(250,110,10)" fg:x="11337" fg:w="2"/><text x="100.2324%" y="95.50"></text></g></svg></svg>