<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="517.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="517.00"> </text><svg id="frames" x="10" width="1180" total_samples="11727"><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (42 samples, 0.36%)</title><rect x="0.0171%" y="277" width="0.3581%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="42"/><text x="0.2671%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (42 samples, 0.36%)</title><rect x="0.0171%" y="261" width="0.3581%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="42"/><text x="0.2671%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (42 samples, 0.36%)</title><rect x="0.0171%" y="245" width="0.3581%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="42"/><text x="0.2671%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="0.2985%" y="229" width="0.0767%" height="15" fill="rgb(248,212,6)" fg:x="35" fg:w="9"/><text x="0.5485%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (89 samples, 0.76%)</title><rect x="0.0171%" y="357" width="0.7589%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="89"/><text x="0.2671%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (89 samples, 0.76%)</title><rect x="0.0171%" y="341" width="0.7589%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="89"/><text x="0.2671%" y="351.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (89 samples, 0.76%)</title><rect x="0.0171%" y="325" width="0.7589%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="89"/><text x="0.2671%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89 samples, 0.76%)</title><rect x="0.0171%" y="309" width="0.7589%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="89"/><text x="0.2671%" y="319.50"></text></g><g><title>criterion::analysis::estimates::stats (89 samples, 0.76%)</title><rect x="0.0171%" y="293" width="0.7589%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="89"/><text x="0.2671%" y="303.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (47 samples, 0.40%)</title><rect x="0.3752%" y="277" width="0.4008%" height="15" fill="rgb(220,122,19)" fg:x="44" fg:w="47"/><text x="0.6252%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (47 samples, 0.40%)</title><rect x="0.3752%" y="261" width="0.4008%" height="15" fill="rgb(250,228,42)" fg:x="44" fg:w="47"/><text x="0.6252%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (47 samples, 0.40%)</title><rect x="0.3752%" y="245" width="0.4008%" height="15" fill="rgb(240,193,28)" fg:x="44" fg:w="47"/><text x="0.6252%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="0.6395%" y="229" width="0.1364%" height="15" fill="rgb(216,20,37)" fg:x="75" fg:w="16"/><text x="0.8895%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (36 samples, 0.31%)</title><rect x="0.7760%" y="277" width="0.3070%" height="15" fill="rgb(206,188,39)" fg:x="91" fg:w="36"/><text x="1.0260%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (36 samples, 0.31%)</title><rect x="0.7760%" y="261" width="0.3070%" height="15" fill="rgb(217,207,13)" fg:x="91" fg:w="36"/><text x="1.0260%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (36 samples, 0.31%)</title><rect x="0.7760%" y="245" width="0.3070%" height="15" fill="rgb(231,73,38)" fg:x="91" fg:w="36"/><text x="1.0260%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="1.0148%" y="229" width="0.0682%" height="15" fill="rgb(225,20,46)" fg:x="119" fg:w="8"/><text x="1.2648%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (179 samples, 1.53%)</title><rect x="0.0171%" y="405" width="1.5264%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="179"/><text x="0.2671%" y="415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (179 samples, 1.53%)</title><rect x="0.0171%" y="389" width="1.5264%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="179"/><text x="0.2671%" y="399.50"></text></g><g><title>rayon_core::registry::in_worker (179 samples, 1.53%)</title><rect x="0.0171%" y="373" width="1.5264%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="179"/><text x="0.2671%" y="383.50"></text></g><g><title>std::panicking::try (90 samples, 0.77%)</title><rect x="0.7760%" y="357" width="0.7675%" height="15" fill="rgb(249,33,26)" fg:x="91" fg:w="90"/><text x="1.0260%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (90 samples, 0.77%)</title><rect x="0.7760%" y="341" width="0.7675%" height="15" fill="rgb(235,183,28)" fg:x="91" fg:w="90"/><text x="1.0260%" y="351.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (90 samples, 0.77%)</title><rect x="0.7760%" y="325" width="0.7675%" height="15" fill="rgb(221,5,38)" fg:x="91" fg:w="90"/><text x="1.0260%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (90 samples, 0.77%)</title><rect x="0.7760%" y="309" width="0.7675%" height="15" fill="rgb(247,18,42)" fg:x="91" fg:w="90"/><text x="1.0260%" y="319.50"></text></g><g><title>criterion::analysis::estimates::stats (90 samples, 0.77%)</title><rect x="0.7760%" y="293" width="0.7675%" height="15" fill="rgb(241,131,45)" fg:x="91" fg:w="90"/><text x="1.0260%" y="303.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (54 samples, 0.46%)</title><rect x="1.0830%" y="277" width="0.4605%" height="15" fill="rgb(249,31,29)" fg:x="127" fg:w="54"/><text x="1.3330%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (54 samples, 0.46%)</title><rect x="1.0830%" y="261" width="0.4605%" height="15" fill="rgb(225,111,53)" fg:x="127" fg:w="54"/><text x="1.3330%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (54 samples, 0.46%)</title><rect x="1.0830%" y="245" width="0.4605%" height="15" fill="rgb(238,160,17)" fg:x="127" fg:w="54"/><text x="1.3330%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="1.4326%" y="229" width="0.1109%" height="15" fill="rgb(214,148,48)" fg:x="168" fg:w="13"/><text x="1.6826%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (36 samples, 0.31%)</title><rect x="1.5434%" y="277" width="0.3070%" height="15" fill="rgb(232,36,49)" fg:x="181" fg:w="36"/><text x="1.7934%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (36 samples, 0.31%)</title><rect x="1.5434%" y="261" width="0.3070%" height="15" fill="rgb(209,103,24)" fg:x="181" fg:w="36"/><text x="1.7934%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (36 samples, 0.31%)</title><rect x="1.5434%" y="245" width="0.3070%" height="15" fill="rgb(229,88,8)" fg:x="181" fg:w="36"/><text x="1.7934%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="1.7907%" y="229" width="0.0597%" height="15" fill="rgb(213,181,19)" fg:x="210" fg:w="7"/><text x="2.0407%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (84 samples, 0.72%)</title><rect x="1.5434%" y="325" width="0.7163%" height="15" fill="rgb(254,191,54)" fg:x="181" fg:w="84"/><text x="1.7934%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (84 samples, 0.72%)</title><rect x="1.5434%" y="309" width="0.7163%" height="15" fill="rgb(241,83,37)" fg:x="181" fg:w="84"/><text x="1.7934%" y="319.50"></text></g><g><title>criterion::analysis::estimates::stats (84 samples, 0.72%)</title><rect x="1.5434%" y="293" width="0.7163%" height="15" fill="rgb(233,36,39)" fg:x="181" fg:w="84"/><text x="1.7934%" y="303.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (48 samples, 0.41%)</title><rect x="1.8504%" y="277" width="0.4093%" height="15" fill="rgb(226,3,54)" fg:x="217" fg:w="48"/><text x="2.1004%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (48 samples, 0.41%)</title><rect x="1.8504%" y="261" width="0.4093%" height="15" fill="rgb(245,192,40)" fg:x="217" fg:w="48"/><text x="2.1004%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (48 samples, 0.41%)</title><rect x="1.8504%" y="245" width="0.4093%" height="15" fill="rgb(238,167,29)" fg:x="217" fg:w="48"/><text x="2.1004%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.09%)</title><rect x="2.1659%" y="229" width="0.0938%" height="15" fill="rgb(232,182,51)" fg:x="254" fg:w="11"/><text x="2.4159%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (85 samples, 0.72%)</title><rect x="1.5434%" y="357" width="0.7248%" height="15" fill="rgb(231,60,39)" fg:x="181" fg:w="85"/><text x="1.7934%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (85 samples, 0.72%)</title><rect x="1.5434%" y="341" width="0.7248%" height="15" fill="rgb(208,69,12)" fg:x="181" fg:w="85"/><text x="1.7934%" y="351.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (39 samples, 0.33%)</title><rect x="2.2683%" y="277" width="0.3326%" height="15" fill="rgb(235,93,37)" fg:x="266" fg:w="39"/><text x="2.5183%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (39 samples, 0.33%)</title><rect x="2.2683%" y="261" width="0.3326%" height="15" fill="rgb(213,116,39)" fg:x="266" fg:w="39"/><text x="2.5183%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (39 samples, 0.33%)</title><rect x="2.2683%" y="245" width="0.3326%" height="15" fill="rgb(222,207,29)" fg:x="266" fg:w="39"/><text x="2.5183%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="2.5326%" y="229" width="0.0682%" height="15" fill="rgb(206,96,30)" fg:x="297" fg:w="8"/><text x="2.7826%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (353 samples, 3.01%)</title><rect x="0.0171%" y="437" width="3.0101%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="353"/><text x="0.2671%" y="447.50">ray..</text></g><g><title>rayon_core::registry::in_worker (353 samples, 3.01%)</title><rect x="0.0171%" y="421" width="3.0101%" height="15" fill="rgb(250,191,14)" fg:x="2" fg:w="353"/><text x="0.2671%" y="431.50">ray..</text></g><g><title>std::panicking::try (174 samples, 1.48%)</title><rect x="1.5434%" y="405" width="1.4838%" height="15" fill="rgb(239,60,40)" fg:x="181" fg:w="174"/><text x="1.7934%" y="415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (174 samples, 1.48%)</title><rect x="1.5434%" y="389" width="1.4838%" height="15" fill="rgb(206,27,48)" fg:x="181" fg:w="174"/><text x="1.7934%" y="399.50"></text></g><g><title>rayon_core::registry::in_worker (174 samples, 1.48%)</title><rect x="1.5434%" y="373" width="1.4838%" height="15" fill="rgb(225,35,8)" fg:x="181" fg:w="174"/><text x="1.7934%" y="383.50"></text></g><g><title>std::panicking::try (89 samples, 0.76%)</title><rect x="2.2683%" y="357" width="0.7589%" height="15" fill="rgb(250,213,24)" fg:x="266" fg:w="89"/><text x="2.5183%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (89 samples, 0.76%)</title><rect x="2.2683%" y="341" width="0.7589%" height="15" fill="rgb(247,123,22)" fg:x="266" fg:w="89"/><text x="2.5183%" y="351.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (89 samples, 0.76%)</title><rect x="2.2683%" y="325" width="0.7589%" height="15" fill="rgb(231,138,38)" fg:x="266" fg:w="89"/><text x="2.5183%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89 samples, 0.76%)</title><rect x="2.2683%" y="309" width="0.7589%" height="15" fill="rgb(231,145,46)" fg:x="266" fg:w="89"/><text x="2.5183%" y="319.50"></text></g><g><title>criterion::analysis::estimates::stats (89 samples, 0.76%)</title><rect x="2.2683%" y="293" width="0.7589%" height="15" fill="rgb(251,118,11)" fg:x="266" fg:w="89"/><text x="2.5183%" y="303.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (50 samples, 0.43%)</title><rect x="2.6008%" y="277" width="0.4264%" height="15" fill="rgb(217,147,25)" fg:x="305" fg:w="50"/><text x="2.8508%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (50 samples, 0.43%)</title><rect x="2.6008%" y="261" width="0.4264%" height="15" fill="rgb(247,81,37)" fg:x="305" fg:w="50"/><text x="2.8508%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (50 samples, 0.43%)</title><rect x="2.6008%" y="245" width="0.4264%" height="15" fill="rgb(209,12,38)" fg:x="305" fg:w="50"/><text x="2.8508%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.10%)</title><rect x="2.9249%" y="229" width="0.1023%" height="15" fill="rgb(227,1,9)" fg:x="343" fg:w="12"/><text x="3.1749%" y="239.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="3.0272%" y="389" width="0.0171%" height="15" fill="rgb(248,47,43)" fg:x="355" fg:w="2"/><text x="3.2772%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="3.0443%" y="245" width="0.0938%" height="15" fill="rgb(221,10,30)" fg:x="357" fg:w="11"/><text x="3.2943%" y="255.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="3.0443%" y="229" width="0.0938%" height="15" fill="rgb(210,229,1)" fg:x="357" fg:w="11"/><text x="3.2943%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="3.0443%" y="213" width="0.0938%" height="15" fill="rgb(222,148,37)" fg:x="357" fg:w="11"/><text x="3.2943%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="3.0443%" y="197" width="0.0938%" height="15" fill="rgb(234,67,33)" fg:x="357" fg:w="11"/><text x="3.2943%" y="207.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="3.0528%" y="181" width="0.0853%" height="15" fill="rgb(247,98,35)" fg:x="358" fg:w="10"/><text x="3.3028%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.19%)</title><rect x="3.0443%" y="277" width="0.1876%" height="15" fill="rgb(247,138,52)" fg:x="357" fg:w="22"/><text x="3.2943%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.19%)</title><rect x="3.0443%" y="261" width="0.1876%" height="15" fill="rgb(213,79,30)" fg:x="357" fg:w="22"/><text x="3.2943%" y="271.50"></text></g><g><title>std::panicking::try (11 samples, 0.09%)</title><rect x="3.1381%" y="245" width="0.0938%" height="15" fill="rgb(246,177,23)" fg:x="368" fg:w="11"/><text x="3.3881%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="3.1381%" y="229" width="0.0938%" height="15" fill="rgb(230,62,27)" fg:x="368" fg:w="11"/><text x="3.3881%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="3.1381%" y="213" width="0.0938%" height="15" fill="rgb(216,154,8)" fg:x="368" fg:w="11"/><text x="3.3881%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="3.1381%" y="197" width="0.0938%" height="15" fill="rgb(244,35,45)" fg:x="368" fg:w="11"/><text x="3.3881%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="3.1381%" y="181" width="0.0938%" height="15" fill="rgb(251,115,12)" fg:x="368" fg:w="11"/><text x="3.3881%" y="191.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.06%)</title><rect x="3.1722%" y="165" width="0.0597%" height="15" fill="rgb(240,54,50)" fg:x="372" fg:w="7"/><text x="3.4222%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="3.2319%" y="229" width="0.0938%" height="15" fill="rgb(233,84,52)" fg:x="379" fg:w="11"/><text x="3.4819%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="3.2319%" y="213" width="0.0938%" height="15" fill="rgb(207,117,47)" fg:x="379" fg:w="11"/><text x="3.4819%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="3.2319%" y="197" width="0.0938%" height="15" fill="rgb(249,43,39)" fg:x="379" fg:w="11"/><text x="3.4819%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="3.2319%" y="181" width="0.0938%" height="15" fill="rgb(209,38,44)" fg:x="379" fg:w="11"/><text x="3.4819%" y="191.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="3.2489%" y="165" width="0.0767%" height="15" fill="rgb(236,212,23)" fg:x="381" fg:w="9"/><text x="3.4989%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.38%)</title><rect x="3.0443%" y="309" width="0.3752%" height="15" fill="rgb(242,79,21)" fg:x="357" fg:w="44"/><text x="3.2943%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (44 samples, 0.38%)</title><rect x="3.0443%" y="293" width="0.3752%" height="15" fill="rgb(211,96,35)" fg:x="357" fg:w="44"/><text x="3.2943%" y="303.50"></text></g><g><title>std::panicking::try (22 samples, 0.19%)</title><rect x="3.2319%" y="277" width="0.1876%" height="15" fill="rgb(253,215,40)" fg:x="379" fg:w="22"/><text x="3.4819%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.19%)</title><rect x="3.2319%" y="261" width="0.1876%" height="15" fill="rgb(211,81,21)" fg:x="379" fg:w="22"/><text x="3.4819%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.19%)</title><rect x="3.2319%" y="245" width="0.1876%" height="15" fill="rgb(208,190,38)" fg:x="379" fg:w="22"/><text x="3.4819%" y="255.50"></text></g><g><title>std::panicking::try (11 samples, 0.09%)</title><rect x="3.3257%" y="229" width="0.0938%" height="15" fill="rgb(235,213,38)" fg:x="390" fg:w="11"/><text x="3.5757%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="3.3257%" y="213" width="0.0938%" height="15" fill="rgb(237,122,38)" fg:x="390" fg:w="11"/><text x="3.5757%" y="223.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="3.3257%" y="197" width="0.0938%" height="15" fill="rgb(244,218,35)" fg:x="390" fg:w="11"/><text x="3.5757%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="3.3257%" y="181" width="0.0938%" height="15" fill="rgb(240,68,47)" fg:x="390" fg:w="11"/><text x="3.5757%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="3.3257%" y="165" width="0.0938%" height="15" fill="rgb(210,16,53)" fg:x="390" fg:w="11"/><text x="3.5757%" y="175.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="3.3342%" y="149" width="0.0853%" height="15" fill="rgb(235,124,12)" fg:x="391" fg:w="10"/><text x="3.5842%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="3.4195%" y="229" width="0.0938%" height="15" fill="rgb(224,169,11)" fg:x="401" fg:w="11"/><text x="3.6695%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="3.4195%" y="213" width="0.0938%" height="15" fill="rgb(250,166,2)" fg:x="401" fg:w="11"/><text x="3.6695%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="3.4195%" y="197" width="0.0938%" height="15" fill="rgb(242,216,29)" fg:x="401" fg:w="11"/><text x="3.6695%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="3.4195%" y="181" width="0.0938%" height="15" fill="rgb(230,116,27)" fg:x="401" fg:w="11"/><text x="3.6695%" y="191.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="3.4365%" y="165" width="0.0767%" height="15" fill="rgb(228,99,48)" fg:x="403" fg:w="9"/><text x="3.6865%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.19%)</title><rect x="3.4195%" y="261" width="0.1876%" height="15" fill="rgb(253,11,6)" fg:x="401" fg:w="22"/><text x="3.6695%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.19%)</title><rect x="3.4195%" y="245" width="0.1876%" height="15" fill="rgb(247,143,39)" fg:x="401" fg:w="22"/><text x="3.6695%" y="255.50"></text></g><g><title>std::panicking::try (11 samples, 0.09%)</title><rect x="3.5133%" y="229" width="0.0938%" height="15" fill="rgb(236,97,10)" fg:x="412" fg:w="11"/><text x="3.7633%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="3.5133%" y="213" width="0.0938%" height="15" fill="rgb(233,208,19)" fg:x="412" fg:w="11"/><text x="3.7633%" y="223.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="3.5133%" y="197" width="0.0938%" height="15" fill="rgb(216,164,2)" fg:x="412" fg:w="11"/><text x="3.7633%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="3.5133%" y="181" width="0.0938%" height="15" fill="rgb(220,129,5)" fg:x="412" fg:w="11"/><text x="3.7633%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="3.5133%" y="165" width="0.0938%" height="15" fill="rgb(242,17,10)" fg:x="412" fg:w="11"/><text x="3.7633%" y="175.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.06%)</title><rect x="3.5474%" y="149" width="0.0597%" height="15" fill="rgb(242,107,0)" fg:x="416" fg:w="7"/><text x="3.7974%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="3.6071%" y="213" width="0.0938%" height="15" fill="rgb(251,28,31)" fg:x="423" fg:w="11"/><text x="3.8571%" y="223.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="3.6071%" y="197" width="0.0938%" height="15" fill="rgb(233,223,10)" fg:x="423" fg:w="11"/><text x="3.8571%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="3.6071%" y="181" width="0.0938%" height="15" fill="rgb(215,21,27)" fg:x="423" fg:w="11"/><text x="3.8571%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="3.6071%" y="165" width="0.0938%" height="15" fill="rgb(232,23,21)" fg:x="423" fg:w="11"/><text x="3.8571%" y="175.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="3.6156%" y="149" width="0.0853%" height="15" fill="rgb(244,5,23)" fg:x="424" fg:w="10"/><text x="3.8656%" y="159.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (91 samples, 0.78%)</title><rect x="3.0272%" y="437" width="0.7760%" height="15" fill="rgb(226,81,46)" fg:x="355" fg:w="91"/><text x="3.2772%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (91 samples, 0.78%)</title><rect x="3.0272%" y="421" width="0.7760%" height="15" fill="rgb(247,70,30)" fg:x="355" fg:w="91"/><text x="3.2772%" y="431.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (91 samples, 0.78%)</title><rect x="3.0272%" y="405" width="0.7760%" height="15" fill="rgb(212,68,19)" fg:x="355" fg:w="91"/><text x="3.2772%" y="415.50"></text></g><g><title>std::panicking::try (89 samples, 0.76%)</title><rect x="3.0443%" y="389" width="0.7589%" height="15" fill="rgb(240,187,13)" fg:x="357" fg:w="89"/><text x="3.2943%" y="399.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (89 samples, 0.76%)</title><rect x="3.0443%" y="373" width="0.7589%" height="15" fill="rgb(223,113,26)" fg:x="357" fg:w="89"/><text x="3.2943%" y="383.50"></text></g><g><title>std::panicking::try (89 samples, 0.76%)</title><rect x="3.0443%" y="357" width="0.7589%" height="15" fill="rgb(206,192,2)" fg:x="357" fg:w="89"/><text x="3.2943%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (89 samples, 0.76%)</title><rect x="3.0443%" y="341" width="0.7589%" height="15" fill="rgb(241,108,4)" fg:x="357" fg:w="89"/><text x="3.2943%" y="351.50"></text></g><g><title>rayon_core::registry::in_worker (89 samples, 0.76%)</title><rect x="3.0443%" y="325" width="0.7589%" height="15" fill="rgb(247,173,49)" fg:x="357" fg:w="89"/><text x="3.2943%" y="335.50"></text></g><g><title>std::panicking::try (45 samples, 0.38%)</title><rect x="3.4195%" y="309" width="0.3837%" height="15" fill="rgb(224,114,35)" fg:x="401" fg:w="45"/><text x="3.6695%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (45 samples, 0.38%)</title><rect x="3.4195%" y="293" width="0.3837%" height="15" fill="rgb(245,159,27)" fg:x="401" fg:w="45"/><text x="3.6695%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (45 samples, 0.38%)</title><rect x="3.4195%" y="277" width="0.3837%" height="15" fill="rgb(245,172,44)" fg:x="401" fg:w="45"/><text x="3.6695%" y="287.50"></text></g><g><title>std::panicking::try (23 samples, 0.20%)</title><rect x="3.6071%" y="261" width="0.1961%" height="15" fill="rgb(236,23,11)" fg:x="423" fg:w="23"/><text x="3.8571%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.20%)</title><rect x="3.6071%" y="245" width="0.1961%" height="15" fill="rgb(205,117,38)" fg:x="423" fg:w="23"/><text x="3.8571%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.20%)</title><rect x="3.6071%" y="229" width="0.1961%" height="15" fill="rgb(237,72,25)" fg:x="423" fg:w="23"/><text x="3.8571%" y="239.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="3.7009%" y="213" width="0.1023%" height="15" fill="rgb(244,70,9)" fg:x="434" fg:w="12"/><text x="3.9509%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="3.7009%" y="197" width="0.1023%" height="15" fill="rgb(217,125,39)" fg:x="434" fg:w="12"/><text x="3.9509%" y="207.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="3.7009%" y="181" width="0.1023%" height="15" fill="rgb(235,36,10)" fg:x="434" fg:w="12"/><text x="3.9509%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="3.7009%" y="165" width="0.1023%" height="15" fill="rgb(251,123,47)" fg:x="434" fg:w="12"/><text x="3.9509%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.10%)</title><rect x="3.7009%" y="149" width="0.1023%" height="15" fill="rgb(221,13,13)" fg:x="434" fg:w="12"/><text x="3.9509%" y="159.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="3.7350%" y="133" width="0.0682%" height="15" fill="rgb(238,131,9)" fg:x="438" fg:w="8"/><text x="3.9850%" y="143.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="3.8714%" y="229" width="0.0171%" height="15" fill="rgb(211,50,8)" fg:x="454" fg:w="2"/><text x="4.1214%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (16 samples, 0.14%)</title><rect x="3.8714%" y="245" width="0.1364%" height="15" fill="rgb(245,182,24)" fg:x="454" fg:w="16"/><text x="4.1214%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.12%)</title><rect x="3.8885%" y="229" width="0.1194%" height="15" fill="rgb(242,14,37)" fg:x="456" fg:w="14"/><text x="4.1385%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (38 samples, 0.32%)</title><rect x="3.8032%" y="261" width="0.3240%" height="15" fill="rgb(246,228,12)" fg:x="446" fg:w="38"/><text x="4.0532%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.12%)</title><rect x="4.0078%" y="245" width="0.1194%" height="15" fill="rgb(213,55,15)" fg:x="470" fg:w="14"/><text x="4.2578%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.12%)</title><rect x="4.0078%" y="229" width="0.1194%" height="15" fill="rgb(209,9,3)" fg:x="470" fg:w="14"/><text x="4.2578%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (52 samples, 0.44%)</title><rect x="3.8032%" y="325" width="0.4434%" height="15" fill="rgb(230,59,30)" fg:x="446" fg:w="52"/><text x="4.0532%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (52 samples, 0.44%)</title><rect x="3.8032%" y="309" width="0.4434%" height="15" fill="rgb(209,121,21)" fg:x="446" fg:w="52"/><text x="4.0532%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (52 samples, 0.44%)</title><rect x="3.8032%" y="293" width="0.4434%" height="15" fill="rgb(220,109,13)" fg:x="446" fg:w="52"/><text x="4.0532%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (52 samples, 0.44%)</title><rect x="3.8032%" y="277" width="0.4434%" height="15" fill="rgb(232,18,1)" fg:x="446" fg:w="52"/><text x="4.0532%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (14 samples, 0.12%)</title><rect x="4.1272%" y="261" width="0.1194%" height="15" fill="rgb(215,41,42)" fg:x="484" fg:w="14"/><text x="4.3772%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (17 samples, 0.14%)</title><rect x="4.2807%" y="245" width="0.1450%" height="15" fill="rgb(224,123,36)" fg:x="502" fg:w="17"/><text x="4.5307%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="4.2892%" y="229" width="0.1364%" height="15" fill="rgb(240,125,3)" fg:x="503" fg:w="16"/><text x="4.5392%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (38 samples, 0.32%)</title><rect x="4.2466%" y="261" width="0.3240%" height="15" fill="rgb(205,98,50)" fg:x="498" fg:w="38"/><text x="4.4966%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.14%)</title><rect x="4.4257%" y="245" width="0.1450%" height="15" fill="rgb(205,185,37)" fg:x="519" fg:w="17"/><text x="4.6757%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.14%)</title><rect x="4.4257%" y="229" width="0.1450%" height="15" fill="rgb(238,207,15)" fg:x="519" fg:w="17"/><text x="4.6757%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (100 samples, 0.85%)</title><rect x="3.8032%" y="373" width="0.8527%" height="15" fill="rgb(213,199,42)" fg:x="446" fg:w="100"/><text x="4.0532%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (100 samples, 0.85%)</title><rect x="3.8032%" y="357" width="0.8527%" height="15" fill="rgb(235,201,11)" fg:x="446" fg:w="100"/><text x="4.0532%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (100 samples, 0.85%)</title><rect x="3.8032%" y="341" width="0.8527%" height="15" fill="rgb(207,46,11)" fg:x="446" fg:w="100"/><text x="4.0532%" y="351.50"></text></g><g><title>std::panicking::try (48 samples, 0.41%)</title><rect x="4.2466%" y="325" width="0.4093%" height="15" fill="rgb(241,35,35)" fg:x="498" fg:w="48"/><text x="4.4966%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.41%)</title><rect x="4.2466%" y="309" width="0.4093%" height="15" fill="rgb(243,32,47)" fg:x="498" fg:w="48"/><text x="4.4966%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.41%)</title><rect x="4.2466%" y="293" width="0.4093%" height="15" fill="rgb(247,202,23)" fg:x="498" fg:w="48"/><text x="4.4966%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.41%)</title><rect x="4.2466%" y="277" width="0.4093%" height="15" fill="rgb(219,102,11)" fg:x="498" fg:w="48"/><text x="4.4966%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (10 samples, 0.09%)</title><rect x="4.5706%" y="261" width="0.0853%" height="15" fill="rgb(243,110,44)" fg:x="536" fg:w="10"/><text x="4.8206%" y="271.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="4.6815%" y="229" width="0.0256%" height="15" fill="rgb(222,74,54)" fg:x="549" fg:w="3"/><text x="4.9315%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (18 samples, 0.15%)</title><rect x="4.6644%" y="245" width="0.1535%" height="15" fill="rgb(216,99,12)" fg:x="547" fg:w="18"/><text x="4.9144%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="4.7071%" y="229" width="0.1109%" height="15" fill="rgb(226,22,26)" fg:x="552" fg:w="13"/><text x="4.9571%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (39 samples, 0.33%)</title><rect x="4.6559%" y="261" width="0.3326%" height="15" fill="rgb(217,163,10)" fg:x="546" fg:w="39"/><text x="4.9059%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (20 samples, 0.17%)</title><rect x="4.8179%" y="245" width="0.1705%" height="15" fill="rgb(213,25,53)" fg:x="565" fg:w="20"/><text x="5.0679%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.16%)</title><rect x="4.8265%" y="229" width="0.1620%" height="15" fill="rgb(252,105,26)" fg:x="566" fg:w="19"/><text x="5.0765%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (52 samples, 0.44%)</title><rect x="4.6559%" y="325" width="0.4434%" height="15" fill="rgb(220,39,43)" fg:x="546" fg:w="52"/><text x="4.9059%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (52 samples, 0.44%)</title><rect x="4.6559%" y="309" width="0.4434%" height="15" fill="rgb(229,68,48)" fg:x="546" fg:w="52"/><text x="4.9059%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (52 samples, 0.44%)</title><rect x="4.6559%" y="293" width="0.4434%" height="15" fill="rgb(252,8,32)" fg:x="546" fg:w="52"/><text x="4.9059%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (52 samples, 0.44%)</title><rect x="4.6559%" y="277" width="0.4434%" height="15" fill="rgb(223,20,43)" fg:x="546" fg:w="52"/><text x="4.9059%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13 samples, 0.11%)</title><rect x="4.9885%" y="261" width="0.1109%" height="15" fill="rgb(229,81,49)" fg:x="585" fg:w="13"/><text x="5.2385%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (19 samples, 0.16%)</title><rect x="5.1676%" y="245" width="0.1620%" height="15" fill="rgb(236,28,36)" fg:x="606" fg:w="19"/><text x="5.4176%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="5.1931%" y="229" width="0.1364%" height="15" fill="rgb(249,185,26)" fg:x="609" fg:w="16"/><text x="5.4431%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (40 samples, 0.34%)</title><rect x="5.0993%" y="261" width="0.3411%" height="15" fill="rgb(249,174,33)" fg:x="598" fg:w="40"/><text x="5.3493%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (13 samples, 0.11%)</title><rect x="5.3296%" y="245" width="0.1109%" height="15" fill="rgb(233,201,37)" fg:x="625" fg:w="13"/><text x="5.5796%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="5.3296%" y="229" width="0.1109%" height="15" fill="rgb(221,78,26)" fg:x="625" fg:w="13"/><text x="5.5796%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (204 samples, 1.74%)</title><rect x="3.8032%" y="421" width="1.7396%" height="15" fill="rgb(250,127,30)" fg:x="446" fg:w="204"/><text x="4.0532%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (204 samples, 1.74%)</title><rect x="3.8032%" y="405" width="1.7396%" height="15" fill="rgb(230,49,44)" fg:x="446" fg:w="204"/><text x="4.0532%" y="415.50"></text></g><g><title>rayon_core::registry::in_worker (204 samples, 1.74%)</title><rect x="3.8032%" y="389" width="1.7396%" height="15" fill="rgb(229,67,23)" fg:x="446" fg:w="204"/><text x="4.0532%" y="399.50"></text></g><g><title>std::panicking::try (104 samples, 0.89%)</title><rect x="4.6559%" y="373" width="0.8868%" height="15" fill="rgb(249,83,47)" fg:x="546" fg:w="104"/><text x="4.9059%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (104 samples, 0.89%)</title><rect x="4.6559%" y="357" width="0.8868%" height="15" fill="rgb(215,43,3)" fg:x="546" fg:w="104"/><text x="4.9059%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (104 samples, 0.89%)</title><rect x="4.6559%" y="341" width="0.8868%" height="15" fill="rgb(238,154,13)" fg:x="546" fg:w="104"/><text x="4.9059%" y="351.50"></text></g><g><title>std::panicking::try (52 samples, 0.44%)</title><rect x="5.0993%" y="325" width="0.4434%" height="15" fill="rgb(219,56,2)" fg:x="598" fg:w="52"/><text x="5.3493%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (52 samples, 0.44%)</title><rect x="5.0993%" y="309" width="0.4434%" height="15" fill="rgb(233,0,4)" fg:x="598" fg:w="52"/><text x="5.3493%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (52 samples, 0.44%)</title><rect x="5.0993%" y="293" width="0.4434%" height="15" fill="rgb(235,30,7)" fg:x="598" fg:w="52"/><text x="5.3493%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (52 samples, 0.44%)</title><rect x="5.0993%" y="277" width="0.4434%" height="15" fill="rgb(250,79,13)" fg:x="598" fg:w="52"/><text x="5.3493%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (12 samples, 0.10%)</title><rect x="5.4404%" y="261" width="0.1023%" height="15" fill="rgb(211,146,34)" fg:x="638" fg:w="12"/><text x="5.6904%" y="271.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="5.6025%" y="229" width="0.0171%" height="15" fill="rgb(228,22,38)" fg:x="657" fg:w="2"/><text x="5.8525%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (21 samples, 0.18%)</title><rect x="5.5854%" y="245" width="0.1791%" height="15" fill="rgb(235,168,5)" fg:x="655" fg:w="21"/><text x="5.8354%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.14%)</title><rect x="5.6195%" y="229" width="0.1450%" height="15" fill="rgb(221,155,16)" fg:x="659" fg:w="17"/><text x="5.8695%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (42 samples, 0.36%)</title><rect x="5.5513%" y="261" width="0.3581%" height="15" fill="rgb(215,215,53)" fg:x="651" fg:w="42"/><text x="5.8013%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.14%)</title><rect x="5.7645%" y="245" width="0.1450%" height="15" fill="rgb(223,4,10)" fg:x="676" fg:w="17"/><text x="6.0145%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.14%)</title><rect x="5.7645%" y="229" width="0.1450%" height="15" fill="rgb(234,103,6)" fg:x="676" fg:w="17"/><text x="6.0145%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (57 samples, 0.49%)</title><rect x="5.5428%" y="325" width="0.4861%" height="15" fill="rgb(227,97,0)" fg:x="650" fg:w="57"/><text x="5.7928%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (57 samples, 0.49%)</title><rect x="5.5428%" y="309" width="0.4861%" height="15" fill="rgb(234,150,53)" fg:x="650" fg:w="57"/><text x="5.7928%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (57 samples, 0.49%)</title><rect x="5.5428%" y="293" width="0.4861%" height="15" fill="rgb(228,201,54)" fg:x="650" fg:w="57"/><text x="5.7928%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.49%)</title><rect x="5.5428%" y="277" width="0.4861%" height="15" fill="rgb(222,22,37)" fg:x="650" fg:w="57"/><text x="5.7928%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (14 samples, 0.12%)</title><rect x="5.9094%" y="261" width="0.1194%" height="15" fill="rgb(237,53,32)" fg:x="693" fg:w="14"/><text x="6.1594%" y="271.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="6.0970%" y="229" width="0.0256%" height="15" fill="rgb(233,25,53)" fg:x="715" fg:w="3"/><text x="6.3470%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (16 samples, 0.14%)</title><rect x="6.0715%" y="245" width="0.1364%" height="15" fill="rgb(210,40,34)" fg:x="712" fg:w="16"/><text x="6.3215%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="6.1226%" y="229" width="0.0853%" height="15" fill="rgb(241,220,44)" fg:x="718" fg:w="10"/><text x="6.3726%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (40 samples, 0.34%)</title><rect x="6.0288%" y="261" width="0.3411%" height="15" fill="rgb(235,28,35)" fg:x="707" fg:w="40"/><text x="6.2788%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (19 samples, 0.16%)</title><rect x="6.2079%" y="245" width="0.1620%" height="15" fill="rgb(210,56,17)" fg:x="728" fg:w="19"/><text x="6.4579%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.16%)</title><rect x="6.2079%" y="229" width="0.1620%" height="15" fill="rgb(224,130,29)" fg:x="728" fg:w="19"/><text x="6.4579%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (108 samples, 0.92%)</title><rect x="5.5428%" y="373" width="0.9210%" height="15" fill="rgb(235,212,8)" fg:x="650" fg:w="108"/><text x="5.7928%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (108 samples, 0.92%)</title><rect x="5.5428%" y="357" width="0.9210%" height="15" fill="rgb(223,33,50)" fg:x="650" fg:w="108"/><text x="5.7928%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (108 samples, 0.92%)</title><rect x="5.5428%" y="341" width="0.9210%" height="15" fill="rgb(219,149,13)" fg:x="650" fg:w="108"/><text x="5.7928%" y="351.50"></text></g><g><title>std::panicking::try (51 samples, 0.43%)</title><rect x="6.0288%" y="325" width="0.4349%" height="15" fill="rgb(250,156,29)" fg:x="707" fg:w="51"/><text x="6.2788%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (51 samples, 0.43%)</title><rect x="6.0288%" y="309" width="0.4349%" height="15" fill="rgb(216,193,19)" fg:x="707" fg:w="51"/><text x="6.2788%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (51 samples, 0.43%)</title><rect x="6.0288%" y="293" width="0.4349%" height="15" fill="rgb(216,135,14)" fg:x="707" fg:w="51"/><text x="6.2788%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 0.43%)</title><rect x="6.0288%" y="277" width="0.4349%" height="15" fill="rgb(241,47,5)" fg:x="707" fg:w="51"/><text x="6.2788%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (11 samples, 0.09%)</title><rect x="6.3699%" y="261" width="0.0938%" height="15" fill="rgb(233,42,35)" fg:x="747" fg:w="11"/><text x="6.6199%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (21 samples, 0.18%)</title><rect x="6.4893%" y="245" width="0.1791%" height="15" fill="rgb(231,13,6)" fg:x="761" fg:w="21"/><text x="6.7393%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="6.5319%" y="229" width="0.1364%" height="15" fill="rgb(207,181,40)" fg:x="766" fg:w="16"/><text x="6.7819%" y="239.50"></text></g><g><title>criterion::analysis::estimates::stats (39 samples, 0.33%)</title><rect x="6.4722%" y="261" width="0.3326%" height="15" fill="rgb(254,173,49)" fg:x="759" fg:w="39"/><text x="6.7222%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (16 samples, 0.14%)</title><rect x="6.6684%" y="245" width="0.1364%" height="15" fill="rgb(221,1,38)" fg:x="782" fg:w="16"/><text x="6.9184%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.14%)</title><rect x="6.6684%" y="229" width="0.1364%" height="15" fill="rgb(206,124,46)" fg:x="782" fg:w="16"/><text x="6.9184%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (53 samples, 0.45%)</title><rect x="6.4637%" y="325" width="0.4519%" height="15" fill="rgb(249,21,11)" fg:x="758" fg:w="53"/><text x="6.7137%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (53 samples, 0.45%)</title><rect x="6.4637%" y="309" width="0.4519%" height="15" fill="rgb(222,201,40)" fg:x="758" fg:w="53"/><text x="6.7137%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (53 samples, 0.45%)</title><rect x="6.4637%" y="293" width="0.4519%" height="15" fill="rgb(235,61,29)" fg:x="758" fg:w="53"/><text x="6.7137%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.45%)</title><rect x="6.4637%" y="277" width="0.4519%" height="15" fill="rgb(219,207,3)" fg:x="758" fg:w="53"/><text x="6.7137%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13 samples, 0.11%)</title><rect x="6.8048%" y="261" width="0.1109%" height="15" fill="rgb(222,56,46)" fg:x="798" fg:w="13"/><text x="7.0548%" y="271.50"></text></g><g><title>criterion::analysis::estimates::stats (24 samples, 0.20%)</title><rect x="6.9157%" y="261" width="0.2047%" height="15" fill="rgb(239,76,54)" fg:x="811" fg:w="24"/><text x="7.1657%" y="271.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.14%)</title><rect x="6.9754%" y="245" width="0.1450%" height="15" fill="rgb(231,124,27)" fg:x="818" fg:w="17"/><text x="7.2254%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.14%)</title><rect x="6.9754%" y="229" width="0.1450%" height="15" fill="rgb(249,195,6)" fg:x="818" fg:w="17"/><text x="7.2254%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (40 samples, 0.34%)</title><rect x="6.9157%" y="293" width="0.3411%" height="15" fill="rgb(237,174,47)" fg:x="811" fg:w="40"/><text x="7.1657%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.34%)</title><rect x="6.9157%" y="277" width="0.3411%" height="15" fill="rgb(206,201,31)" fg:x="811" fg:w="40"/><text x="7.1657%" y="287.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (16 samples, 0.14%)</title><rect x="7.1203%" y="261" width="0.1364%" height="15" fill="rgb(231,57,52)" fg:x="835" fg:w="16"/><text x="7.3703%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (406 samples, 3.46%)</title><rect x="3.8032%" y="437" width="3.4621%" height="15" fill="rgb(248,177,22)" fg:x="446" fg:w="406"/><text x="4.0532%" y="447.50">ray..</text></g><g><title>std::panicking::try (202 samples, 1.72%)</title><rect x="5.5428%" y="421" width="1.7225%" height="15" fill="rgb(215,211,37)" fg:x="650" fg:w="202"/><text x="5.7928%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (202 samples, 1.72%)</title><rect x="5.5428%" y="405" width="1.7225%" height="15" fill="rgb(241,128,51)" fg:x="650" fg:w="202"/><text x="5.7928%" y="415.50"></text></g><g><title>rayon_core::registry::in_worker (202 samples, 1.72%)</title><rect x="5.5428%" y="389" width="1.7225%" height="15" fill="rgb(227,165,31)" fg:x="650" fg:w="202"/><text x="5.7928%" y="399.50"></text></g><g><title>std::panicking::try (94 samples, 0.80%)</title><rect x="6.4637%" y="373" width="0.8016%" height="15" fill="rgb(228,167,24)" fg:x="758" fg:w="94"/><text x="6.7137%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (94 samples, 0.80%)</title><rect x="6.4637%" y="357" width="0.8016%" height="15" fill="rgb(228,143,12)" fg:x="758" fg:w="94"/><text x="6.7137%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (94 samples, 0.80%)</title><rect x="6.4637%" y="341" width="0.8016%" height="15" fill="rgb(249,149,8)" fg:x="758" fg:w="94"/><text x="6.7137%" y="351.50"></text></g><g><title>std::panicking::try (41 samples, 0.35%)</title><rect x="6.9157%" y="325" width="0.3496%" height="15" fill="rgb(243,35,44)" fg:x="811" fg:w="41"/><text x="7.1657%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 0.35%)</title><rect x="6.9157%" y="309" width="0.3496%" height="15" fill="rgb(246,89,9)" fg:x="811" fg:w="41"/><text x="7.1657%" y="319.50"></text></g><g><title>start_thread (10 samples, 0.09%)</title><rect x="7.2653%" y="437" width="0.0853%" height="15" fill="rgb(233,213,13)" fg:x="852" fg:w="10"/><text x="7.5153%" y="447.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 0.09%)</title><rect x="7.2653%" y="421" width="0.0853%" height="15" fill="rgb(233,141,41)" fg:x="852" fg:w="10"/><text x="7.5153%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.09%)</title><rect x="7.2653%" y="405" width="0.0853%" height="15" fill="rgb(239,167,4)" fg:x="852" fg:w="10"/><text x="7.5153%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.09%)</title><rect x="7.2653%" y="389" width="0.0853%" height="15" fill="rgb(209,217,16)" fg:x="852" fg:w="10"/><text x="7.5153%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (10 samples, 0.09%)</title><rect x="7.2653%" y="373" width="0.0853%" height="15" fill="rgb(219,88,35)" fg:x="852" fg:w="10"/><text x="7.5153%" y="383.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.09%)</title><rect x="7.2653%" y="357" width="0.0853%" height="15" fill="rgb(220,193,23)" fg:x="852" fg:w="10"/><text x="7.5153%" y="367.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (10 samples, 0.09%)</title><rect x="7.2653%" y="341" width="0.0853%" height="15" fill="rgb(230,90,52)" fg:x="852" fg:w="10"/><text x="7.5153%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.09%)</title><rect x="7.2653%" y="325" width="0.0853%" height="15" fill="rgb(252,106,19)" fg:x="852" fg:w="10"/><text x="7.5153%" y="335.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.09%)</title><rect x="7.2653%" y="309" width="0.0853%" height="15" fill="rgb(206,74,20)" fg:x="852" fg:w="10"/><text x="7.5153%" y="319.50"></text></g><g><title>std::panicking::try (10 samples, 0.09%)</title><rect x="7.2653%" y="293" width="0.0853%" height="15" fill="rgb(230,138,44)" fg:x="852" fg:w="10"/><text x="7.5153%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.09%)</title><rect x="7.2653%" y="277" width="0.0853%" height="15" fill="rgb(235,182,43)" fg:x="852" fg:w="10"/><text x="7.5153%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.09%)</title><rect x="7.2653%" y="261" width="0.0853%" height="15" fill="rgb(242,16,51)" fg:x="852" fg:w="10"/><text x="7.5153%" y="271.50"></text></g><g><title>std::panicking::try (10 samples, 0.09%)</title><rect x="7.2653%" y="245" width="0.0853%" height="15" fill="rgb(248,9,4)" fg:x="852" fg:w="10"/><text x="7.5153%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.09%)</title><rect x="7.2653%" y="229" width="0.0853%" height="15" fill="rgb(210,31,22)" fg:x="852" fg:w="10"/><text x="7.5153%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.09%)</title><rect x="7.2653%" y="213" width="0.0853%" height="15" fill="rgb(239,54,39)" fg:x="852" fg:w="10"/><text x="7.5153%" y="223.50"></text></g><g><title>std::panicking::try (10 samples, 0.09%)</title><rect x="7.2653%" y="197" width="0.0853%" height="15" fill="rgb(230,99,41)" fg:x="852" fg:w="10"/><text x="7.5153%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.09%)</title><rect x="7.2653%" y="181" width="0.0853%" height="15" fill="rgb(253,106,12)" fg:x="852" fg:w="10"/><text x="7.5153%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.09%)</title><rect x="7.2653%" y="165" width="0.0853%" height="15" fill="rgb(213,46,41)" fg:x="852" fg:w="10"/><text x="7.5153%" y="175.50"></text></g><g><title>std::panicking::try (10 samples, 0.09%)</title><rect x="7.2653%" y="149" width="0.0853%" height="15" fill="rgb(215,133,35)" fg:x="852" fg:w="10"/><text x="7.5153%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.09%)</title><rect x="7.2653%" y="133" width="0.0853%" height="15" fill="rgb(213,28,5)" fg:x="852" fg:w="10"/><text x="7.5153%" y="143.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.09%)</title><rect x="7.2653%" y="117" width="0.0853%" height="15" fill="rgb(215,77,49)" fg:x="852" fg:w="10"/><text x="7.5153%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.09%)</title><rect x="7.2653%" y="101" width="0.0853%" height="15" fill="rgb(248,100,22)" fg:x="852" fg:w="10"/><text x="7.5153%" y="111.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (10 samples, 0.09%)</title><rect x="7.2653%" y="85" width="0.0853%" height="15" fill="rgb(208,67,9)" fg:x="852" fg:w="10"/><text x="7.5153%" y="95.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="7.2653%" y="69" width="0.0853%" height="15" fill="rgb(219,133,21)" fg:x="852" fg:w="10"/><text x="7.5153%" y="79.50"></text></g><g><title>[unknown] (870 samples, 7.42%)</title><rect x="0.0085%" y="453" width="7.4188%" height="15" fill="rgb(246,46,29)" fg:x="1" fg:w="870"/><text x="0.2585%" y="463.50">[unknown]</text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.3506%" y="437" width="0.0767%" height="15" fill="rgb(246,185,52)" fg:x="862" fg:w="9"/><text x="7.6006%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.3506%" y="421" width="0.0767%" height="15" fill="rgb(252,136,11)" fg:x="862" fg:w="9"/><text x="7.6006%" y="431.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.08%)</title><rect x="7.3506%" y="405" width="0.0767%" height="15" fill="rgb(219,138,53)" fg:x="862" fg:w="9"/><text x="7.6006%" y="415.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.3506%" y="389" width="0.0767%" height="15" fill="rgb(211,51,23)" fg:x="862" fg:w="9"/><text x="7.6006%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.3506%" y="373" width="0.0767%" height="15" fill="rgb(247,221,28)" fg:x="862" fg:w="9"/><text x="7.6006%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.08%)</title><rect x="7.3506%" y="357" width="0.0767%" height="15" fill="rgb(251,222,45)" fg:x="862" fg:w="9"/><text x="7.6006%" y="367.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.3506%" y="341" width="0.0767%" height="15" fill="rgb(217,162,53)" fg:x="862" fg:w="9"/><text x="7.6006%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.3506%" y="325" width="0.0767%" height="15" fill="rgb(229,93,14)" fg:x="862" fg:w="9"/><text x="7.6006%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.08%)</title><rect x="7.3506%" y="309" width="0.0767%" height="15" fill="rgb(209,67,49)" fg:x="862" fg:w="9"/><text x="7.6006%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.08%)</title><rect x="7.3506%" y="293" width="0.0767%" height="15" fill="rgb(213,87,29)" fg:x="862" fg:w="9"/><text x="7.6006%" y="303.50"></text></g><g><title>criterion::analysis::estimates::stats (9 samples, 0.08%)</title><rect x="7.3506%" y="277" width="0.0767%" height="15" fill="rgb(205,151,52)" fg:x="862" fg:w="9"/><text x="7.6006%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (9 samples, 0.08%)</title><rect x="7.3506%" y="261" width="0.0767%" height="15" fill="rgb(253,215,39)" fg:x="862" fg:w="9"/><text x="7.6006%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="7.3506%" y="245" width="0.0767%" height="15" fill="rgb(221,220,41)" fg:x="862" fg:w="9"/><text x="7.6006%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="7.4358%" y="165" width="0.0171%" height="15" fill="rgb(218,133,21)" fg:x="872" fg:w="2"/><text x="7.6858%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="7.4358%" y="149" width="0.0171%" height="15" fill="rgb(221,193,43)" fg:x="872" fg:w="2"/><text x="7.6858%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="7.4358%" y="133" width="0.0171%" height="15" fill="rgb(240,128,52)" fg:x="872" fg:w="2"/><text x="7.6858%" y="143.50"></text></g><g><title>criterion::stats::Distribution&lt;A&gt;::confidence_interval (2 samples, 0.02%)</title><rect x="7.4358%" y="117" width="0.0171%" height="15" fill="rgb(253,114,12)" fg:x="872" fg:w="2"/><text x="7.6858%" y="127.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (2 samples, 0.02%)</title><rect x="7.4358%" y="101" width="0.0171%" height="15" fill="rgb(215,223,47)" fg:x="872" fg:w="2"/><text x="7.6858%" y="111.50"></text></g><g><title>criterion::analysis::estimates (4 samples, 0.03%)</title><rect x="7.4358%" y="181" width="0.0341%" height="15" fill="rgb(248,225,23)" fg:x="872" fg:w="4"/><text x="7.6858%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.02%)</title><rect x="7.4529%" y="165" width="0.0171%" height="15" fill="rgb(250,108,0)" fg:x="874" fg:w="2"/><text x="7.7029%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.09%)</title><rect x="7.5552%" y="101" width="0.0938%" height="15" fill="rgb(228,208,7)" fg:x="886" fg:w="11"/><text x="7.8052%" y="111.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.05%)</title><rect x="7.5979%" y="85" width="0.0512%" height="15" fill="rgb(244,45,10)" fg:x="891" fg:w="6"/><text x="7.8479%" y="95.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="7.6490%" y="101" width="0.0171%" height="15" fill="rgb(207,125,25)" fg:x="897" fg:w="2"/><text x="7.8990%" y="111.50"></text></g><g><title>[libc-2.31.so] (267 samples, 2.28%)</title><rect x="23.8254%" y="85" width="2.2768%" height="15" fill="rgb(210,195,18)" fg:x="2794" fg:w="267"/><text x="24.0754%" y="95.50">[..</text></g><g><title>__libc_malloc (8 samples, 0.07%)</title><rect x="26.1022%" y="85" width="0.0682%" height="15" fill="rgb(249,80,12)" fg:x="3061" fg:w="8"/><text x="26.3522%" y="95.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,782 samples, 23.72%)</title><rect x="26.1789%" y="85" width="23.7230%" height="15" fill="rgb(221,65,9)" fg:x="3070" fg:w="2782"/><text x="26.4289%" y="95.50">core::hash::BuildHasher::hash_one</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,181 samples, 10.07%)</title><rect x="39.8312%" y="69" width="10.0708%" height="15" fill="rgb(235,49,36)" fg:x="4671" fg:w="1181"/><text x="40.0812%" y="79.50">&lt;std::collectio..</text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.10%)</title><rect x="49.9872%" y="69" width="0.1023%" height="15" fill="rgb(225,32,20)" fg:x="5862" fg:w="12"/><text x="50.2372%" y="79.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.04%)</title><rect x="50.0469%" y="53" width="0.0426%" height="15" fill="rgb(215,141,46)" fg:x="5869" fg:w="5"/><text x="50.2969%" y="63.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.08%)</title><rect x="50.1919%" y="37" width="0.0767%" height="15" fill="rgb(250,160,47)" fg:x="5886" fg:w="9"/><text x="50.4419%" y="47.50"></text></g><g><title>__libc_malloc (5 samples, 0.04%)</title><rect x="50.2686%" y="37" width="0.0426%" height="15" fill="rgb(216,222,40)" fg:x="5895" fg:w="5"/><text x="50.5186%" y="47.50"></text></g><g><title>adventofcode_rust_2015::day23::exec (5,002 samples, 42.65%)</title><rect x="7.6661%" y="101" width="42.6537%" height="15" fill="rgb(234,217,39)" fg:x="899" fg:w="5002"/><text x="7.9161%" y="111.50">adventofcode_rust_2015::day23::exec</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (49 samples, 0.42%)</title><rect x="49.9019%" y="85" width="0.4178%" height="15" fill="rgb(207,178,40)" fg:x="5852" fg:w="49"/><text x="50.1519%" y="95.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (27 samples, 0.23%)</title><rect x="50.0895%" y="69" width="0.2302%" height="15" fill="rgb(221,136,13)" fg:x="5874" fg:w="27"/><text x="50.3395%" y="79.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.17%)</title><rect x="50.1492%" y="53" width="0.1705%" height="15" fill="rgb(249,199,10)" fg:x="5881" fg:w="20"/><text x="50.3992%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,032 samples, 42.91%)</title><rect x="7.4785%" y="165" width="42.9095%" height="15" fill="rgb(249,222,13)" fg:x="877" fg:w="5032"/><text x="7.7285%" y="175.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;:..</text></g><g><title>criterion::Bencher::iter (5,032 samples, 42.91%)</title><rect x="7.4785%" y="149" width="42.9095%" height="15" fill="rgb(244,185,38)" fg:x="877" fg:w="5032"/><text x="7.7285%" y="159.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2015::day23::day23_part2::RunnerStruct as aoc_runner::Runner&gt;::bench (5,032 samples, 42.91%)</title><rect x="7.4785%" y="133" width="42.9095%" height="15" fill="rgb(236,202,9)" fg:x="877" fg:w="5032"/><text x="7.7285%" y="143.50">&lt;adventofcode_rust_2015::day23::day23_part2::RunnerStruct as aoc_runne..</text></g><g><title>adventofcode_rust_2015::day23::part2 (5,032 samples, 42.91%)</title><rect x="7.4785%" y="117" width="42.9095%" height="15" fill="rgb(250,229,37)" fg:x="877" fg:w="5032"/><text x="7.7285%" y="127.50">adventofcode_rust_2015::day23::part2</text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.07%)</title><rect x="50.3198%" y="101" width="0.0682%" height="15" fill="rgb(206,174,23)" fg:x="5901" fg:w="8"/><text x="50.5698%" y="111.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="50.3624%" y="85" width="0.0256%" height="15" fill="rgb(211,33,43)" fg:x="5906" fg:w="3"/><text x="50.6124%" y="95.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.05%)</title><rect x="50.4988%" y="85" width="0.0512%" height="15" fill="rgb(245,58,50)" fg:x="5922" fg:w="6"/><text x="50.7488%" y="95.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.11%)</title><rect x="50.4477%" y="101" width="0.1109%" height="15" fill="rgb(244,68,36)" fg:x="5916" fg:w="13"/><text x="50.6977%" y="111.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="50.5585%" y="101" width="0.0171%" height="15" fill="rgb(232,229,15)" fg:x="5929" fg:w="2"/><text x="50.8085%" y="111.50"></text></g><g><title>[libc-2.31.so] (267 samples, 2.28%)</title><rect x="69.1822%" y="85" width="2.2768%" height="15" fill="rgb(254,30,23)" fg:x="8113" fg:w="267"/><text x="69.4322%" y="95.50">[..</text></g><g><title>__libc_malloc (7 samples, 0.06%)</title><rect x="71.4676%" y="85" width="0.0597%" height="15" fill="rgb(235,160,14)" fg:x="8381" fg:w="7"/><text x="71.7176%" y="95.50"></text></g><g><title>__rdl_alloc (3 samples, 0.03%)</title><rect x="71.5272%" y="85" width="0.0256%" height="15" fill="rgb(212,155,44)" fg:x="8388" fg:w="3"/><text x="71.7772%" y="95.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="71.5358%" y="69" width="0.0171%" height="15" fill="rgb(226,2,50)" fg:x="8389" fg:w="2"/><text x="71.7858%" y="79.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,183 samples, 27.14%)</title><rect x="71.5528%" y="85" width="27.1425%" height="15" fill="rgb(234,177,6)" fg:x="8391" fg:w="3183"/><text x="71.8028%" y="95.50">core::hash::BuildHasher::hash_one</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,396 samples, 11.90%)</title><rect x="86.7912%" y="69" width="11.9042%" height="15" fill="rgb(217,24,9)" fg:x="10178" fg:w="1396"/><text x="87.0412%" y="79.50">&lt;std::collections:..</text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.09%)</title><rect x="98.7635%" y="69" width="0.0853%" height="15" fill="rgb(220,13,46)" fg:x="11582" fg:w="10"/><text x="99.0135%" y="79.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.04%)</title><rect x="98.8062%" y="53" width="0.0426%" height="15" fill="rgb(239,221,27)" fg:x="11587" fg:w="5"/><text x="99.0562%" y="63.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.05%)</title><rect x="98.9767%" y="37" width="0.0512%" height="15" fill="rgb(222,198,25)" fg:x="11607" fg:w="6"/><text x="99.2267%" y="47.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="99.0279%" y="37" width="0.0256%" height="15" fill="rgb(211,99,13)" fg:x="11613" fg:w="3"/><text x="99.2779%" y="47.50"></text></g><g><title>adventofcode_rust_2015::day23::exec (5,687 samples, 48.49%)</title><rect x="50.5756%" y="101" width="48.4949%" height="15" fill="rgb(232,111,31)" fg:x="5931" fg:w="5687"/><text x="50.8256%" y="111.50">adventofcode_rust_2015::day23::exec</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (44 samples, 0.38%)</title><rect x="98.6953%" y="85" width="0.3752%" height="15" fill="rgb(245,82,37)" fg:x="11574" fg:w="44"/><text x="98.9453%" y="95.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (26 samples, 0.22%)</title><rect x="98.8488%" y="69" width="0.2217%" height="15" fill="rgb(227,149,46)" fg:x="11592" fg:w="26"/><text x="99.0988%" y="79.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.11%)</title><rect x="98.9597%" y="53" width="0.1109%" height="15" fill="rgb(218,36,50)" fg:x="11605" fg:w="13"/><text x="99.2097%" y="63.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="99.0705%" y="101" width="0.0171%" height="15" fill="rgb(226,80,48)" fg:x="11618" fg:w="2"/><text x="99.3205%" y="111.50"></text></g><g><title>_start (10,754 samples, 91.70%)</title><rect x="7.4273%" y="453" width="91.7029%" height="15" fill="rgb(238,224,15)" fg:x="871" fg:w="10754"/><text x="7.6773%" y="463.50">_start</text></g><g><title>__libc_start_main (10,754 samples, 91.70%)</title><rect x="7.4273%" y="437" width="91.7029%" height="15" fill="rgb(241,136,10)" fg:x="871" fg:w="10754"/><text x="7.6773%" y="447.50">__libc_start_main</text></g><g><title>main (10,754 samples, 91.70%)</title><rect x="7.4273%" y="421" width="91.7029%" height="15" fill="rgb(208,32,45)" fg:x="871" fg:w="10754"/><text x="7.6773%" y="431.50">main</text></g><g><title>std::rt::lang_start_internal (10,754 samples, 91.70%)</title><rect x="7.4273%" y="405" width="91.7029%" height="15" fill="rgb(207,135,9)" fg:x="871" fg:w="10754"/><text x="7.6773%" y="415.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (10,754 samples, 91.70%)</title><rect x="7.4273%" y="389" width="91.7029%" height="15" fill="rgb(206,86,44)" fg:x="871" fg:w="10754"/><text x="7.6773%" y="399.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,754 samples, 91.70%)</title><rect x="7.4273%" y="373" width="91.7029%" height="15" fill="rgb(245,177,15)" fg:x="871" fg:w="10754"/><text x="7.6773%" y="383.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,754 samples, 91.70%)</title><rect x="7.4273%" y="357" width="91.7029%" height="15" fill="rgb(206,64,50)" fg:x="871" fg:w="10754"/><text x="7.6773%" y="367.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (10,753 samples, 91.69%)</title><rect x="7.4358%" y="341" width="91.6944%" height="15" fill="rgb(234,36,40)" fg:x="872" fg:w="10753"/><text x="7.6858%" y="351.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (10,753 samples, 91.69%)</title><rect x="7.4358%" y="325" width="91.6944%" height="15" fill="rgb(213,64,8)" fg:x="872" fg:w="10753"/><text x="7.6858%" y="335.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,753 samples, 91.69%)</title><rect x="7.4358%" y="309" width="91.6944%" height="15" fill="rgb(210,75,36)" fg:x="872" fg:w="10753"/><text x="7.6858%" y="319.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,753 samples, 91.69%)</title><rect x="7.4358%" y="293" width="91.6944%" height="15" fill="rgb(229,88,21)" fg:x="872" fg:w="10753"/><text x="7.6858%" y="303.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10,753 samples, 91.69%)</title><rect x="7.4358%" y="277" width="91.6944%" height="15" fill="rgb(252,204,47)" fg:x="872" fg:w="10753"/><text x="7.6858%" y="287.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (10,753 samples, 91.69%)</title><rect x="7.4358%" y="261" width="91.6944%" height="15" fill="rgb(208,77,27)" fg:x="872" fg:w="10753"/><text x="7.6858%" y="271.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10,753 samples, 91.69%)</title><rect x="7.4358%" y="245" width="91.6944%" height="15" fill="rgb(221,76,26)" fg:x="872" fg:w="10753"/><text x="7.6858%" y="255.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>aoc_benchmark::main (10,753 samples, 91.69%)</title><rect x="7.4358%" y="229" width="91.6944%" height="15" fill="rgb(225,139,18)" fg:x="872" fg:w="10753"/><text x="7.6858%" y="239.50">aoc_benchmark::main</text></g><g><title>&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run (10,753 samples, 91.69%)</title><rect x="7.4358%" y="213" width="91.6944%" height="15" fill="rgb(230,137,11)" fg:x="872" fg:w="10753"/><text x="7.6858%" y="223.50">&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run</text></g><g><title>criterion::analysis::common (10,753 samples, 91.69%)</title><rect x="7.4358%" y="197" width="91.6944%" height="15" fill="rgb(212,28,1)" fg:x="872" fg:w="10753"/><text x="7.6858%" y="207.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (10,748 samples, 91.65%)</title><rect x="7.4785%" y="181" width="91.6517%" height="15" fill="rgb(248,164,17)" fg:x="877" fg:w="10748"/><text x="7.7285%" y="191.50">criterion::routine::Routine::sample</text></g><g><title>&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm_up (5,716 samples, 48.74%)</title><rect x="50.3880%" y="165" width="48.7422%" height="15" fill="rgb(222,171,42)" fg:x="5909" fg:w="5716"/><text x="50.6380%" y="175.50">&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm_up</text></g><g><title>criterion::Bencher::iter (5,716 samples, 48.74%)</title><rect x="50.3880%" y="149" width="48.7422%" height="15" fill="rgb(243,84,45)" fg:x="5909" fg:w="5716"/><text x="50.6380%" y="159.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2015::day23::day23_part2::RunnerStruct as aoc_runner::Runner&gt;::bench (5,716 samples, 48.74%)</title><rect x="50.3880%" y="133" width="48.7422%" height="15" fill="rgb(252,49,23)" fg:x="5909" fg:w="5716"/><text x="50.6380%" y="143.50">&lt;adventofcode_rust_2015::day23::day23_part2::RunnerStruct as aoc_runner::Runner&gt;..</text></g><g><title>adventofcode_rust_2015::day23::part2 (5,715 samples, 48.73%)</title><rect x="50.3965%" y="117" width="48.7337%" height="15" fill="rgb(215,19,7)" fg:x="5910" fg:w="5715"/><text x="50.6465%" y="127.50">adventofcode_rust_2015::day23::part2</text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.04%)</title><rect x="99.0876%" y="101" width="0.0426%" height="15" fill="rgb(238,81,41)" fg:x="11620" fg:w="5"/><text x="99.3376%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1473%" y="213" width="0.0171%" height="15" fill="rgb(210,199,37)" fg:x="11627" fg:w="2"/><text x="99.3973%" y="223.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1473%" y="197" width="0.0171%" height="15" fill="rgb(244,192,49)" fg:x="11627" fg:w="2"/><text x="99.3973%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1473%" y="181" width="0.0171%" height="15" fill="rgb(226,211,11)" fg:x="11627" fg:w="2"/><text x="99.3973%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1473%" y="165" width="0.0171%" height="15" fill="rgb(236,162,54)" fg:x="11627" fg:w="2"/><text x="99.3973%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1473%" y="149" width="0.0171%" height="15" fill="rgb(220,229,9)" fg:x="11627" fg:w="2"/><text x="99.3973%" y="159.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1473%" y="133" width="0.0171%" height="15" fill="rgb(250,87,22)" fg:x="11627" fg:w="2"/><text x="99.3973%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="99.1473%" y="245" width="0.0341%" height="15" fill="rgb(239,43,17)" fg:x="11627" fg:w="4"/><text x="99.3973%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.03%)</title><rect x="99.1473%" y="229" width="0.0341%" height="15" fill="rgb(231,177,25)" fg:x="11627" fg:w="4"/><text x="99.3973%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.1643%" y="213" width="0.0171%" height="15" fill="rgb(219,179,1)" fg:x="11629" fg:w="2"/><text x="99.4143%" y="223.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1643%" y="197" width="0.0171%" height="15" fill="rgb(238,219,53)" fg:x="11629" fg:w="2"/><text x="99.4143%" y="207.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1643%" y="181" width="0.0171%" height="15" fill="rgb(232,167,36)" fg:x="11629" fg:w="2"/><text x="99.4143%" y="191.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.1643%" y="165" width="0.0171%" height="15" fill="rgb(244,19,51)" fg:x="11629" fg:w="2"/><text x="99.4143%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1643%" y="149" width="0.0171%" height="15" fill="rgb(224,6,22)" fg:x="11629" fg:w="2"/><text x="99.4143%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1814%" y="165" width="0.0171%" height="15" fill="rgb(224,145,5)" fg:x="11631" fg:w="2"/><text x="99.4314%" y="175.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1814%" y="149" width="0.0171%" height="15" fill="rgb(234,130,49)" fg:x="11631" fg:w="2"/><text x="99.4314%" y="159.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="99.1387%" y="277" width="0.0682%" height="15" fill="rgb(254,6,2)" fg:x="11626" fg:w="8"/><text x="99.3887%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.06%)</title><rect x="99.1473%" y="261" width="0.0597%" height="15" fill="rgb(208,96,46)" fg:x="11627" fg:w="7"/><text x="99.3973%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.03%)</title><rect x="99.1814%" y="245" width="0.0256%" height="15" fill="rgb(239,3,39)" fg:x="11631" fg:w="3"/><text x="99.4314%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="99.1814%" y="229" width="0.0256%" height="15" fill="rgb(233,210,1)" fg:x="11631" fg:w="3"/><text x="99.4314%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.1814%" y="213" width="0.0256%" height="15" fill="rgb(244,137,37)" fg:x="11631" fg:w="3"/><text x="99.4314%" y="223.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="99.1814%" y="197" width="0.0256%" height="15" fill="rgb(240,136,2)" fg:x="11631" fg:w="3"/><text x="99.4314%" y="207.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.1814%" y="181" width="0.0256%" height="15" fill="rgb(239,18,37)" fg:x="11631" fg:w="3"/><text x="99.4314%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.2155%" y="229" width="0.0171%" height="15" fill="rgb(218,185,22)" fg:x="11635" fg:w="2"/><text x="99.4655%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.2155%" y="213" width="0.0171%" height="15" fill="rgb(225,218,4)" fg:x="11635" fg:w="2"/><text x="99.4655%" y="223.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.2155%" y="197" width="0.0171%" height="15" fill="rgb(230,182,32)" fg:x="11635" fg:w="2"/><text x="99.4655%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.2155%" y="181" width="0.0171%" height="15" fill="rgb(242,56,43)" fg:x="11635" fg:w="2"/><text x="99.4655%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.2155%" y="165" width="0.0171%" height="15" fill="rgb(233,99,24)" fg:x="11635" fg:w="2"/><text x="99.4655%" y="175.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.10%)</title><rect x="99.1387%" y="293" width="0.1023%" height="15" fill="rgb(234,209,42)" fg:x="11626" fg:w="12"/><text x="99.3887%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.03%)</title><rect x="99.2070%" y="277" width="0.0341%" height="15" fill="rgb(227,7,12)" fg:x="11634" fg:w="4"/><text x="99.4570%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="99.2070%" y="261" width="0.0341%" height="15" fill="rgb(245,203,43)" fg:x="11634" fg:w="4"/><text x="99.4570%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.2155%" y="245" width="0.0256%" height="15" fill="rgb(238,205,33)" fg:x="11635" fg:w="3"/><text x="99.4655%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="99.2411%" y="293" width="0.0256%" height="15" fill="rgb(231,56,7)" fg:x="11638" fg:w="3"/><text x="99.4911%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.2411%" y="277" width="0.0256%" height="15" fill="rgb(244,186,29)" fg:x="11638" fg:w="3"/><text x="99.4911%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.2496%" y="261" width="0.0171%" height="15" fill="rgb(234,111,31)" fg:x="11639" fg:w="2"/><text x="99.4996%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.2496%" y="245" width="0.0171%" height="15" fill="rgb(241,149,10)" fg:x="11639" fg:w="2"/><text x="99.4996%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.2496%" y="229" width="0.0171%" height="15" fill="rgb(249,206,44)" fg:x="11639" fg:w="2"/><text x="99.4996%" y="239.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.2496%" y="213" width="0.0171%" height="15" fill="rgb(251,153,30)" fg:x="11639" fg:w="2"/><text x="99.4996%" y="223.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.03%)</title><rect x="99.2666%" y="277" width="0.0256%" height="15" fill="rgb(239,152,38)" fg:x="11641" fg:w="3"/><text x="99.5166%" y="287.50"></text></g><g><title>std::panicking::try (3 samples, 0.03%)</title><rect x="99.2666%" y="261" width="0.0256%" height="15" fill="rgb(249,139,47)" fg:x="11641" fg:w="3"/><text x="99.5166%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.03%)</title><rect x="99.2666%" y="245" width="0.0256%" height="15" fill="rgb(244,64,35)" fg:x="11641" fg:w="3"/><text x="99.5166%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.2752%" y="229" width="0.0171%" height="15" fill="rgb(216,46,15)" fg:x="11642" fg:w="2"/><text x="99.5252%" y="239.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="99.2752%" y="213" width="0.0171%" height="15" fill="rgb(250,74,19)" fg:x="11642" fg:w="2"/><text x="99.5252%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.02%)</title><rect x="99.2752%" y="197" width="0.0171%" height="15" fill="rgb(249,42,33)" fg:x="11642" fg:w="2"/><text x="99.5252%" y="207.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceConsumer&lt;R,ID&gt; as rayon::iter::plumbing::Reducer&lt;T&gt;&gt;::reduce (2 samples, 0.02%)</title><rect x="99.2752%" y="181" width="0.0171%" height="15" fill="rgb(242,149,17)" fg:x="11642" fg:w="2"/><text x="99.5252%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="99.3008%" y="181" width="0.0938%" height="15" fill="rgb(244,29,21)" fg:x="11645" fg:w="11"/><text x="99.5508%" y="191.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="99.3008%" y="165" width="0.0938%" height="15" fill="rgb(220,130,37)" fg:x="11645" fg:w="11"/><text x="99.5508%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="99.3008%" y="149" width="0.0938%" height="15" fill="rgb(211,67,2)" fg:x="11645" fg:w="11"/><text x="99.5508%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="99.3008%" y="133" width="0.0938%" height="15" fill="rgb(235,68,52)" fg:x="11645" fg:w="11"/><text x="99.5508%" y="143.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="99.3178%" y="117" width="0.0767%" height="15" fill="rgb(246,142,3)" fg:x="11647" fg:w="9"/><text x="99.5678%" y="127.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.19%)</title><rect x="99.3008%" y="213" width="0.1876%" height="15" fill="rgb(241,25,7)" fg:x="11645" fg:w="22"/><text x="99.5508%" y="223.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.19%)</title><rect x="99.3008%" y="197" width="0.1876%" height="15" fill="rgb(242,119,39)" fg:x="11645" fg:w="22"/><text x="99.5508%" y="207.50"></text></g><g><title>std::panicking::try (11 samples, 0.09%)</title><rect x="99.3946%" y="181" width="0.0938%" height="15" fill="rgb(241,98,45)" fg:x="11656" fg:w="11"/><text x="99.6446%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="99.3946%" y="165" width="0.0938%" height="15" fill="rgb(254,28,30)" fg:x="11656" fg:w="11"/><text x="99.6446%" y="175.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="99.3946%" y="149" width="0.0938%" height="15" fill="rgb(241,142,54)" fg:x="11656" fg:w="11"/><text x="99.6446%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="99.3946%" y="133" width="0.0938%" height="15" fill="rgb(222,85,15)" fg:x="11656" fg:w="11"/><text x="99.6446%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="99.3946%" y="117" width="0.0938%" height="15" fill="rgb(210,85,47)" fg:x="11656" fg:w="11"/><text x="99.6446%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="99.4201%" y="101" width="0.0682%" height="15" fill="rgb(224,206,25)" fg:x="11659" fg:w="8"/><text x="99.6701%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="99.4884%" y="165" width="0.1023%" height="15" fill="rgb(243,201,19)" fg:x="11667" fg:w="12"/><text x="99.7384%" y="175.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="99.4884%" y="149" width="0.1023%" height="15" fill="rgb(236,59,4)" fg:x="11667" fg:w="12"/><text x="99.7384%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="99.4884%" y="133" width="0.1023%" height="15" fill="rgb(254,179,45)" fg:x="11667" fg:w="12"/><text x="99.7384%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.10%)</title><rect x="99.4884%" y="117" width="0.1023%" height="15" fill="rgb(226,14,10)" fg:x="11667" fg:w="12"/><text x="99.7384%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="99.5139%" y="101" width="0.0767%" height="15" fill="rgb(244,27,41)" fg:x="11670" fg:w="9"/><text x="99.7639%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.38%)</title><rect x="99.3008%" y="245" width="0.3752%" height="15" fill="rgb(235,35,32)" fg:x="11645" fg:w="44"/><text x="99.5508%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (44 samples, 0.38%)</title><rect x="99.3008%" y="229" width="0.3752%" height="15" fill="rgb(218,68,31)" fg:x="11645" fg:w="44"/><text x="99.5508%" y="239.50"></text></g><g><title>std::panicking::try (22 samples, 0.19%)</title><rect x="99.4884%" y="213" width="0.1876%" height="15" fill="rgb(207,120,37)" fg:x="11667" fg:w="22"/><text x="99.7384%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.19%)</title><rect x="99.4884%" y="197" width="0.1876%" height="15" fill="rgb(227,98,0)" fg:x="11667" fg:w="22"/><text x="99.7384%" y="207.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.19%)</title><rect x="99.4884%" y="181" width="0.1876%" height="15" fill="rgb(207,7,3)" fg:x="11667" fg:w="22"/><text x="99.7384%" y="191.50"></text></g><g><title>std::panicking::try (10 samples, 0.09%)</title><rect x="99.5907%" y="165" width="0.0853%" height="15" fill="rgb(206,98,19)" fg:x="11679" fg:w="10"/><text x="99.8407%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.09%)</title><rect x="99.5907%" y="149" width="0.0853%" height="15" fill="rgb(217,5,26)" fg:x="11679" fg:w="10"/><text x="99.8407%" y="159.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.09%)</title><rect x="99.5907%" y="133" width="0.0853%" height="15" fill="rgb(235,190,38)" fg:x="11679" fg:w="10"/><text x="99.8407%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.09%)</title><rect x="99.5907%" y="117" width="0.0853%" height="15" fill="rgb(247,86,24)" fg:x="11679" fg:w="10"/><text x="99.8407%" y="127.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (10 samples, 0.09%)</title><rect x="99.5907%" y="101" width="0.0853%" height="15" fill="rgb(205,101,16)" fg:x="11679" fg:w="10"/><text x="99.8407%" y="111.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="99.6077%" y="85" width="0.0682%" height="15" fill="rgb(246,168,33)" fg:x="11681" fg:w="8"/><text x="99.8577%" y="95.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="99.6930%" y="165" width="0.0938%" height="15" fill="rgb(231,114,1)" fg:x="11691" fg:w="11"/><text x="99.9430%" y="175.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="99.6930%" y="149" width="0.0938%" height="15" fill="rgb(207,184,53)" fg:x="11691" fg:w="11"/><text x="99.9430%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="99.6930%" y="133" width="0.0938%" height="15" fill="rgb(224,95,51)" fg:x="11691" fg:w="11"/><text x="99.9430%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="99.6930%" y="117" width="0.0938%" height="15" fill="rgb(212,188,45)" fg:x="11691" fg:w="11"/><text x="99.9430%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="99.7101%" y="101" width="0.0767%" height="15" fill="rgb(223,154,38)" fg:x="11693" fg:w="9"/><text x="99.9601%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.19%)</title><rect x="99.6930%" y="197" width="0.1876%" height="15" fill="rgb(251,22,52)" fg:x="11691" fg:w="22"/><text x="99.9430%" y="207.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.19%)</title><rect x="99.6930%" y="181" width="0.1876%" height="15" fill="rgb(229,209,22)" fg:x="11691" fg:w="22"/><text x="99.9430%" y="191.50"></text></g><g><title>std::panicking::try (11 samples, 0.09%)</title><rect x="99.7868%" y="165" width="0.0938%" height="15" fill="rgb(234,138,34)" fg:x="11702" fg:w="11"/><text x="100.0368%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="99.7868%" y="149" width="0.0938%" height="15" fill="rgb(212,95,11)" fg:x="11702" fg:w="11"/><text x="100.0368%" y="159.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="99.7868%" y="133" width="0.0938%" height="15" fill="rgb(240,179,47)" fg:x="11702" fg:w="11"/><text x="100.0368%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="99.7868%" y="117" width="0.0938%" height="15" fill="rgb(240,163,11)" fg:x="11702" fg:w="11"/><text x="100.0368%" y="127.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="99.7868%" y="101" width="0.0938%" height="15" fill="rgb(236,37,12)" fg:x="11702" fg:w="11"/><text x="100.0368%" y="111.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="99.7953%" y="85" width="0.0853%" height="15" fill="rgb(232,164,16)" fg:x="11703" fg:w="10"/><text x="100.0453%" y="95.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="99.8806%" y="149" width="0.1023%" height="15" fill="rgb(244,205,15)" fg:x="11713" fg:w="12"/><text x="100.1306%" y="159.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="99.8806%" y="133" width="0.1023%" height="15" fill="rgb(223,117,47)" fg:x="11713" fg:w="12"/><text x="100.1306%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="99.8806%" y="117" width="0.1023%" height="15" fill="rgb(244,107,35)" fg:x="11713" fg:w="12"/><text x="100.1306%" y="127.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.10%)</title><rect x="99.8806%" y="101" width="0.1023%" height="15" fill="rgb(205,140,8)" fg:x="11713" fg:w="12"/><text x="100.1306%" y="111.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="99.8977%" y="85" width="0.0853%" height="15" fill="rgb(228,84,46)" fg:x="11715" fg:w="10"/><text x="100.1477%" y="95.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (100 samples, 0.85%)</title><rect x="99.1387%" y="309" width="0.8527%" height="15" fill="rgb(254,188,9)" fg:x="11626" fg:w="100"/><text x="99.3887%" y="319.50"></text></g><g><title>std::panicking::try (85 samples, 0.72%)</title><rect x="99.2666%" y="293" width="0.7248%" height="15" fill="rgb(206,112,54)" fg:x="11641" fg:w="85"/><text x="99.5166%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (82 samples, 0.70%)</title><rect x="99.2922%" y="277" width="0.6992%" height="15" fill="rgb(216,84,49)" fg:x="11644" fg:w="82"/><text x="99.5422%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (81 samples, 0.69%)</title><rect x="99.3008%" y="261" width="0.6907%" height="15" fill="rgb(214,194,35)" fg:x="11645" fg:w="81"/><text x="99.5508%" y="271.50"></text></g><g><title>std::panicking::try (36 samples, 0.31%)</title><rect x="99.6845%" y="245" width="0.3070%" height="15" fill="rgb(249,28,3)" fg:x="11690" fg:w="36"/><text x="99.9345%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (36 samples, 0.31%)</title><rect x="99.6845%" y="229" width="0.3070%" height="15" fill="rgb(222,56,52)" fg:x="11690" fg:w="36"/><text x="99.9345%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (35 samples, 0.30%)</title><rect x="99.6930%" y="213" width="0.2985%" height="15" fill="rgb(245,217,50)" fg:x="11691" fg:w="35"/><text x="99.9430%" y="223.50"></text></g><g><title>std::panicking::try (13 samples, 0.11%)</title><rect x="99.8806%" y="197" width="0.1109%" height="15" fill="rgb(213,201,24)" fg:x="11713" fg:w="13"/><text x="100.1306%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.11%)</title><rect x="99.8806%" y="181" width="0.1109%" height="15" fill="rgb(248,116,28)" fg:x="11713" fg:w="13"/><text x="100.1306%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.11%)</title><rect x="99.8806%" y="165" width="0.1109%" height="15" fill="rgb(219,72,43)" fg:x="11713" fg:w="13"/><text x="100.1306%" y="175.50"></text></g><g><title>all (11,727 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(209,138,14)" fg:x="0" fg:w="11727"/><text x="0.2500%" y="495.50"></text></g><g><title>aoc_benchmark-4 (11,727 samples, 100.00%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(222,18,33)" fg:x="0" fg:w="11727"/><text x="0.2500%" y="479.50">aoc_benchmark-4</text></g><g><title>clone (102 samples, 0.87%)</title><rect x="99.1302%" y="453" width="0.8698%" height="15" fill="rgb(213,199,7)" fg:x="11625" fg:w="102"/><text x="99.3802%" y="463.50"></text></g><g><title>start_thread (101 samples, 0.86%)</title><rect x="99.1387%" y="437" width="0.8613%" height="15" fill="rgb(250,110,10)" fg:x="11626" fg:w="101"/><text x="99.3887%" y="447.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (101 samples, 0.86%)</title><rect x="99.1387%" y="421" width="0.8613%" height="15" fill="rgb(248,123,6)" fg:x="11626" fg:w="101"/><text x="99.3887%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (101 samples, 0.86%)</title><rect x="99.1387%" y="405" width="0.8613%" height="15" fill="rgb(206,91,31)" fg:x="11626" fg:w="101"/><text x="99.3887%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (101 samples, 0.86%)</title><rect x="99.1387%" y="389" width="0.8613%" height="15" fill="rgb(211,154,13)" fg:x="11626" fg:w="101"/><text x="99.3887%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (101 samples, 0.86%)</title><rect x="99.1387%" y="373" width="0.8613%" height="15" fill="rgb(225,148,7)" fg:x="11626" fg:w="101"/><text x="99.3887%" y="383.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (101 samples, 0.86%)</title><rect x="99.1387%" y="357" width="0.8613%" height="15" fill="rgb(220,160,43)" fg:x="11626" fg:w="101"/><text x="99.3887%" y="367.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (101 samples, 0.86%)</title><rect x="99.1387%" y="341" width="0.8613%" height="15" fill="rgb(213,52,39)" fg:x="11626" fg:w="101"/><text x="99.3887%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (101 samples, 0.86%)</title><rect x="99.1387%" y="325" width="0.8613%" height="15" fill="rgb(243,137,7)" fg:x="11626" fg:w="101"/><text x="99.3887%" y="335.50"></text></g></svg></svg>