<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="613.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="11927"><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (39 samples, 0.33%)</title><rect x="0.0168%" y="373" width="0.3270%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="39"/><text x="0.2668%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (39 samples, 0.33%)</title><rect x="0.0168%" y="357" width="0.3270%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="39"/><text x="0.2668%" y="367.50"></text></g><g><title>rayon::slice::quicksort::recurse (39 samples, 0.33%)</title><rect x="0.0168%" y="341" width="0.3270%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="39"/><text x="0.2668%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.04%)</title><rect x="0.3018%" y="325" width="0.0419%" height="15" fill="rgb(248,212,6)" fg:x="36" fg:w="5"/><text x="0.5518%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (81 samples, 0.68%)</title><rect x="0.0168%" y="421" width="0.6791%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="81"/><text x="0.2668%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (81 samples, 0.68%)</title><rect x="0.0168%" y="405" width="0.6791%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="81"/><text x="0.2668%" y="415.50"></text></g><g><title>criterion::analysis::estimates::stats (81 samples, 0.68%)</title><rect x="0.0168%" y="389" width="0.6791%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="81"/><text x="0.2668%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (42 samples, 0.35%)</title><rect x="0.3438%" y="373" width="0.3521%" height="15" fill="rgb(228,23,34)" fg:x="41" fg:w="42"/><text x="0.5938%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (42 samples, 0.35%)</title><rect x="0.3438%" y="357" width="0.3521%" height="15" fill="rgb(218,30,26)" fg:x="41" fg:w="42"/><text x="0.5938%" y="367.50"></text></g><g><title>rayon::slice::quicksort::recurse (42 samples, 0.35%)</title><rect x="0.3438%" y="341" width="0.3521%" height="15" fill="rgb(220,122,19)" fg:x="41" fg:w="42"/><text x="0.5938%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="0.6372%" y="325" width="0.0587%" height="15" fill="rgb(250,228,42)" fg:x="76" fg:w="7"/><text x="0.8872%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (82 samples, 0.69%)</title><rect x="0.0168%" y="453" width="0.6875%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="82"/><text x="0.2668%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (82 samples, 0.69%)</title><rect x="0.0168%" y="437" width="0.6875%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="82"/><text x="0.2668%" y="447.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (47 samples, 0.39%)</title><rect x="0.7043%" y="373" width="0.3941%" height="15" fill="rgb(206,188,39)" fg:x="84" fg:w="47"/><text x="0.9543%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (47 samples, 0.39%)</title><rect x="0.7043%" y="357" width="0.3941%" height="15" fill="rgb(217,207,13)" fg:x="84" fg:w="47"/><text x="0.9543%" y="367.50"></text></g><g><title>rayon::slice::quicksort::recurse (47 samples, 0.39%)</title><rect x="0.7043%" y="341" width="0.3941%" height="15" fill="rgb(231,73,38)" fg:x="84" fg:w="47"/><text x="0.9543%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.08%)</title><rect x="1.0145%" y="325" width="0.0838%" height="15" fill="rgb(225,20,46)" fg:x="121" fg:w="10"/><text x="1.2645%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (158 samples, 1.32%)</title><rect x="0.0168%" y="501" width="1.3247%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="158"/><text x="0.2668%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (158 samples, 1.32%)</title><rect x="0.0168%" y="485" width="1.3247%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="158"/><text x="0.2668%" y="495.50"></text></g><g><title>rayon_core::registry::in_worker (158 samples, 1.32%)</title><rect x="0.0168%" y="469" width="1.3247%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="158"/><text x="0.2668%" y="479.50"></text></g><g><title>std::panicking::try (76 samples, 0.64%)</title><rect x="0.7043%" y="453" width="0.6372%" height="15" fill="rgb(249,33,26)" fg:x="84" fg:w="76"/><text x="0.9543%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (76 samples, 0.64%)</title><rect x="0.7043%" y="437" width="0.6372%" height="15" fill="rgb(235,183,28)" fg:x="84" fg:w="76"/><text x="0.9543%" y="447.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (76 samples, 0.64%)</title><rect x="0.7043%" y="421" width="0.6372%" height="15" fill="rgb(221,5,38)" fg:x="84" fg:w="76"/><text x="0.9543%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 0.64%)</title><rect x="0.7043%" y="405" width="0.6372%" height="15" fill="rgb(247,18,42)" fg:x="84" fg:w="76"/><text x="0.9543%" y="415.50"></text></g><g><title>criterion::analysis::estimates::stats (76 samples, 0.64%)</title><rect x="0.7043%" y="389" width="0.6372%" height="15" fill="rgb(241,131,45)" fg:x="84" fg:w="76"/><text x="0.9543%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (29 samples, 0.24%)</title><rect x="1.0983%" y="373" width="0.2431%" height="15" fill="rgb(249,31,29)" fg:x="131" fg:w="29"/><text x="1.3483%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (29 samples, 0.24%)</title><rect x="1.0983%" y="357" width="0.2431%" height="15" fill="rgb(225,111,53)" fg:x="131" fg:w="29"/><text x="1.3483%" y="367.50"></text></g><g><title>rayon::slice::quicksort::recurse (29 samples, 0.24%)</title><rect x="1.0983%" y="341" width="0.2431%" height="15" fill="rgb(238,160,17)" fg:x="131" fg:w="29"/><text x="1.3483%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="1.2828%" y="325" width="0.0587%" height="15" fill="rgb(214,148,48)" fg:x="153" fg:w="7"/><text x="1.5328%" y="335.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (41 samples, 0.34%)</title><rect x="1.3415%" y="373" width="0.3438%" height="15" fill="rgb(232,36,49)" fg:x="160" fg:w="41"/><text x="1.5915%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (41 samples, 0.34%)</title><rect x="1.3415%" y="357" width="0.3438%" height="15" fill="rgb(209,103,24)" fg:x="160" fg:w="41"/><text x="1.5915%" y="367.50"></text></g><g><title>rayon::slice::quicksort::recurse (41 samples, 0.34%)</title><rect x="1.3415%" y="341" width="0.3438%" height="15" fill="rgb(229,88,8)" fg:x="160" fg:w="41"/><text x="1.5915%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="1.6266%" y="325" width="0.0587%" height="15" fill="rgb(213,181,19)" fg:x="194" fg:w="7"/><text x="1.8766%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (78 samples, 0.65%)</title><rect x="1.3415%" y="453" width="0.6540%" height="15" fill="rgb(254,191,54)" fg:x="160" fg:w="78"/><text x="1.5915%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (78 samples, 0.65%)</title><rect x="1.3415%" y="437" width="0.6540%" height="15" fill="rgb(241,83,37)" fg:x="160" fg:w="78"/><text x="1.5915%" y="447.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (78 samples, 0.65%)</title><rect x="1.3415%" y="421" width="0.6540%" height="15" fill="rgb(233,36,39)" fg:x="160" fg:w="78"/><text x="1.5915%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (78 samples, 0.65%)</title><rect x="1.3415%" y="405" width="0.6540%" height="15" fill="rgb(226,3,54)" fg:x="160" fg:w="78"/><text x="1.5915%" y="415.50"></text></g><g><title>criterion::analysis::estimates::stats (78 samples, 0.65%)</title><rect x="1.3415%" y="389" width="0.6540%" height="15" fill="rgb(245,192,40)" fg:x="160" fg:w="78"/><text x="1.5915%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (37 samples, 0.31%)</title><rect x="1.6853%" y="373" width="0.3102%" height="15" fill="rgb(238,167,29)" fg:x="201" fg:w="37"/><text x="1.9353%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (37 samples, 0.31%)</title><rect x="1.6853%" y="357" width="0.3102%" height="15" fill="rgb(232,182,51)" fg:x="201" fg:w="37"/><text x="1.9353%" y="367.50"></text></g><g><title>rayon::slice::quicksort::recurse (37 samples, 0.31%)</title><rect x="1.6853%" y="341" width="0.3102%" height="15" fill="rgb(231,60,39)" fg:x="201" fg:w="37"/><text x="1.9353%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="1.9368%" y="325" width="0.0587%" height="15" fill="rgb(208,69,12)" fg:x="231" fg:w="7"/><text x="2.1868%" y="335.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (31 samples, 0.26%)</title><rect x="1.9955%" y="373" width="0.2599%" height="15" fill="rgb(235,93,37)" fg:x="238" fg:w="31"/><text x="2.2455%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (31 samples, 0.26%)</title><rect x="1.9955%" y="357" width="0.2599%" height="15" fill="rgb(213,116,39)" fg:x="238" fg:w="31"/><text x="2.2455%" y="367.50"></text></g><g><title>rayon::slice::quicksort::recurse (31 samples, 0.26%)</title><rect x="1.9955%" y="341" width="0.2599%" height="15" fill="rgb(222,207,29)" fg:x="238" fg:w="31"/><text x="2.2455%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.08%)</title><rect x="2.1715%" y="325" width="0.0838%" height="15" fill="rgb(206,96,30)" fg:x="259" fg:w="10"/><text x="2.4215%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (315 samples, 2.64%)</title><rect x="0.0168%" y="533" width="2.6411%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="315"/><text x="0.2668%" y="543.50">ra..</text></g><g><title>rayon_core::registry::in_worker (315 samples, 2.64%)</title><rect x="0.0168%" y="517" width="2.6411%" height="15" fill="rgb(250,191,14)" fg:x="2" fg:w="315"/><text x="0.2668%" y="527.50">ra..</text></g><g><title>std::panicking::try (157 samples, 1.32%)</title><rect x="1.3415%" y="501" width="1.3163%" height="15" fill="rgb(239,60,40)" fg:x="160" fg:w="157"/><text x="1.5915%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (157 samples, 1.32%)</title><rect x="1.3415%" y="485" width="1.3163%" height="15" fill="rgb(206,27,48)" fg:x="160" fg:w="157"/><text x="1.5915%" y="495.50"></text></g><g><title>rayon_core::registry::in_worker (157 samples, 1.32%)</title><rect x="1.3415%" y="469" width="1.3163%" height="15" fill="rgb(225,35,8)" fg:x="160" fg:w="157"/><text x="1.5915%" y="479.50"></text></g><g><title>std::panicking::try (79 samples, 0.66%)</title><rect x="1.9955%" y="453" width="0.6624%" height="15" fill="rgb(250,213,24)" fg:x="238" fg:w="79"/><text x="2.2455%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (79 samples, 0.66%)</title><rect x="1.9955%" y="437" width="0.6624%" height="15" fill="rgb(247,123,22)" fg:x="238" fg:w="79"/><text x="2.2455%" y="447.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (79 samples, 0.66%)</title><rect x="1.9955%" y="421" width="0.6624%" height="15" fill="rgb(231,138,38)" fg:x="238" fg:w="79"/><text x="2.2455%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (79 samples, 0.66%)</title><rect x="1.9955%" y="405" width="0.6624%" height="15" fill="rgb(231,145,46)" fg:x="238" fg:w="79"/><text x="2.2455%" y="415.50"></text></g><g><title>criterion::analysis::estimates::stats (79 samples, 0.66%)</title><rect x="1.9955%" y="389" width="0.6624%" height="15" fill="rgb(251,118,11)" fg:x="238" fg:w="79"/><text x="2.2455%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (48 samples, 0.40%)</title><rect x="2.2554%" y="373" width="0.4024%" height="15" fill="rgb(217,147,25)" fg:x="269" fg:w="48"/><text x="2.5054%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (48 samples, 0.40%)</title><rect x="2.2554%" y="357" width="0.4024%" height="15" fill="rgb(247,81,37)" fg:x="269" fg:w="48"/><text x="2.5054%" y="367.50"></text></g><g><title>rayon::slice::quicksort::recurse (48 samples, 0.40%)</title><rect x="2.2554%" y="341" width="0.4024%" height="15" fill="rgb(209,12,38)" fg:x="269" fg:w="48"/><text x="2.5054%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.09%)</title><rect x="2.5656%" y="325" width="0.0922%" height="15" fill="rgb(227,1,9)" fg:x="306" fg:w="11"/><text x="2.8156%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="2.6662%" y="341" width="0.0922%" height="15" fill="rgb(248,47,43)" fg:x="318" fg:w="11"/><text x="2.9162%" y="351.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="2.6662%" y="325" width="0.0922%" height="15" fill="rgb(221,10,30)" fg:x="318" fg:w="11"/><text x="2.9162%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="2.6662%" y="309" width="0.0922%" height="15" fill="rgb(210,229,1)" fg:x="318" fg:w="11"/><text x="2.9162%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="2.6662%" y="293" width="0.0922%" height="15" fill="rgb(222,148,37)" fg:x="318" fg:w="11"/><text x="2.9162%" y="303.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.09%)</title><rect x="2.6662%" y="277" width="0.0922%" height="15" fill="rgb(234,67,33)" fg:x="318" fg:w="11"/><text x="2.9162%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.19%)</title><rect x="2.6662%" y="373" width="0.1928%" height="15" fill="rgb(247,98,35)" fg:x="318" fg:w="23"/><text x="2.9162%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.19%)</title><rect x="2.6662%" y="357" width="0.1928%" height="15" fill="rgb(247,138,52)" fg:x="318" fg:w="23"/><text x="2.9162%" y="367.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="2.7584%" y="341" width="0.1006%" height="15" fill="rgb(213,79,30)" fg:x="329" fg:w="12"/><text x="3.0084%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="2.7584%" y="325" width="0.1006%" height="15" fill="rgb(246,177,23)" fg:x="329" fg:w="12"/><text x="3.0084%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="2.7584%" y="309" width="0.1006%" height="15" fill="rgb(230,62,27)" fg:x="329" fg:w="12"/><text x="3.0084%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="2.7584%" y="293" width="0.1006%" height="15" fill="rgb(216,154,8)" fg:x="329" fg:w="12"/><text x="3.0084%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="2.7668%" y="277" width="0.0922%" height="15" fill="rgb(244,35,45)" fg:x="330" fg:w="11"/><text x="3.0168%" y="287.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="2.7836%" y="261" width="0.0755%" height="15" fill="rgb(251,115,12)" fg:x="332" fg:w="9"/><text x="3.0336%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="2.8591%" y="325" width="0.0922%" height="15" fill="rgb(240,54,50)" fg:x="341" fg:w="11"/><text x="3.1091%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="2.8591%" y="309" width="0.0922%" height="15" fill="rgb(233,84,52)" fg:x="341" fg:w="11"/><text x="3.1091%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="2.8591%" y="293" width="0.0922%" height="15" fill="rgb(207,117,47)" fg:x="341" fg:w="11"/><text x="3.1091%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="2.8591%" y="277" width="0.0922%" height="15" fill="rgb(249,43,39)" fg:x="341" fg:w="11"/><text x="3.1091%" y="287.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="2.8758%" y="261" width="0.0755%" height="15" fill="rgb(209,38,44)" fg:x="343" fg:w="9"/><text x="3.1258%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.39%)</title><rect x="2.6662%" y="405" width="0.3857%" height="15" fill="rgb(236,212,23)" fg:x="318" fg:w="46"/><text x="2.9162%" y="415.50"></text></g><g><title>rayon_core::registry::in_worker (46 samples, 0.39%)</title><rect x="2.6662%" y="389" width="0.3857%" height="15" fill="rgb(242,79,21)" fg:x="318" fg:w="46"/><text x="2.9162%" y="399.50"></text></g><g><title>std::panicking::try (23 samples, 0.19%)</title><rect x="2.8591%" y="373" width="0.1928%" height="15" fill="rgb(211,96,35)" fg:x="341" fg:w="23"/><text x="3.1091%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.19%)</title><rect x="2.8591%" y="357" width="0.1928%" height="15" fill="rgb(253,215,40)" fg:x="341" fg:w="23"/><text x="3.1091%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.19%)</title><rect x="2.8591%" y="341" width="0.1928%" height="15" fill="rgb(211,81,21)" fg:x="341" fg:w="23"/><text x="3.1091%" y="351.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="2.9513%" y="325" width="0.1006%" height="15" fill="rgb(208,190,38)" fg:x="352" fg:w="12"/><text x="3.2013%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="2.9513%" y="309" width="0.1006%" height="15" fill="rgb(235,213,38)" fg:x="352" fg:w="12"/><text x="3.2013%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="2.9513%" y="293" width="0.1006%" height="15" fill="rgb(237,122,38)" fg:x="352" fg:w="12"/><text x="3.2013%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="2.9513%" y="277" width="0.1006%" height="15" fill="rgb(244,218,35)" fg:x="352" fg:w="12"/><text x="3.2013%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.10%)</title><rect x="2.9513%" y="261" width="0.1006%" height="15" fill="rgb(240,68,47)" fg:x="352" fg:w="12"/><text x="3.2013%" y="271.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.09%)</title><rect x="2.9597%" y="245" width="0.0922%" height="15" fill="rgb(210,16,53)" fg:x="353" fg:w="11"/><text x="3.2097%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="3.0519%" y="325" width="0.0922%" height="15" fill="rgb(235,124,12)" fg:x="364" fg:w="11"/><text x="3.3019%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="3.0519%" y="309" width="0.0922%" height="15" fill="rgb(224,169,11)" fg:x="364" fg:w="11"/><text x="3.3019%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="3.0519%" y="293" width="0.0922%" height="15" fill="rgb(250,166,2)" fg:x="364" fg:w="11"/><text x="3.3019%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="3.0519%" y="277" width="0.0922%" height="15" fill="rgb(242,216,29)" fg:x="364" fg:w="11"/><text x="3.3019%" y="287.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.08%)</title><rect x="3.0603%" y="261" width="0.0838%" height="15" fill="rgb(230,116,27)" fg:x="365" fg:w="10"/><text x="3.3103%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.18%)</title><rect x="3.0519%" y="357" width="0.1845%" height="15" fill="rgb(228,99,48)" fg:x="364" fg:w="22"/><text x="3.3019%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.18%)</title><rect x="3.0519%" y="341" width="0.1845%" height="15" fill="rgb(253,11,6)" fg:x="364" fg:w="22"/><text x="3.3019%" y="351.50"></text></g><g><title>std::panicking::try (11 samples, 0.09%)</title><rect x="3.1441%" y="325" width="0.0922%" height="15" fill="rgb(247,143,39)" fg:x="375" fg:w="11"/><text x="3.3941%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="3.1441%" y="309" width="0.0922%" height="15" fill="rgb(236,97,10)" fg:x="375" fg:w="11"/><text x="3.3941%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="3.1441%" y="293" width="0.0922%" height="15" fill="rgb(233,208,19)" fg:x="375" fg:w="11"/><text x="3.3941%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="3.1441%" y="277" width="0.0922%" height="15" fill="rgb(216,164,2)" fg:x="375" fg:w="11"/><text x="3.3941%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (10 samples, 0.08%)</title><rect x="3.1525%" y="261" width="0.0838%" height="15" fill="rgb(220,129,5)" fg:x="376" fg:w="10"/><text x="3.4025%" y="271.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="3.1693%" y="245" width="0.0671%" height="15" fill="rgb(242,17,10)" fg:x="378" fg:w="8"/><text x="3.4193%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="3.2364%" y="309" width="0.1006%" height="15" fill="rgb(242,107,0)" fg:x="386" fg:w="12"/><text x="3.4864%" y="319.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="3.2364%" y="293" width="0.1006%" height="15" fill="rgb(251,28,31)" fg:x="386" fg:w="12"/><text x="3.4864%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="3.2364%" y="277" width="0.1006%" height="15" fill="rgb(233,223,10)" fg:x="386" fg:w="12"/><text x="3.4864%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.10%)</title><rect x="3.2364%" y="261" width="0.1006%" height="15" fill="rgb(215,21,27)" fg:x="386" fg:w="12"/><text x="3.4864%" y="271.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.08%)</title><rect x="3.2531%" y="245" width="0.0838%" height="15" fill="rgb(232,23,21)" fg:x="388" fg:w="10"/><text x="3.5031%" y="255.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (93 samples, 0.78%)</title><rect x="2.6578%" y="533" width="0.7797%" height="15" fill="rgb(244,5,23)" fg:x="317" fg:w="93"/><text x="2.9078%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (93 samples, 0.78%)</title><rect x="2.6578%" y="517" width="0.7797%" height="15" fill="rgb(226,81,46)" fg:x="317" fg:w="93"/><text x="2.9078%" y="527.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (93 samples, 0.78%)</title><rect x="2.6578%" y="501" width="0.7797%" height="15" fill="rgb(247,70,30)" fg:x="317" fg:w="93"/><text x="2.9078%" y="511.50"></text></g><g><title>std::panicking::try (92 samples, 0.77%)</title><rect x="2.6662%" y="485" width="0.7714%" height="15" fill="rgb(212,68,19)" fg:x="318" fg:w="92"/><text x="2.9162%" y="495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (92 samples, 0.77%)</title><rect x="2.6662%" y="469" width="0.7714%" height="15" fill="rgb(240,187,13)" fg:x="318" fg:w="92"/><text x="2.9162%" y="479.50"></text></g><g><title>std::panicking::try (92 samples, 0.77%)</title><rect x="2.6662%" y="453" width="0.7714%" height="15" fill="rgb(223,113,26)" fg:x="318" fg:w="92"/><text x="2.9162%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (92 samples, 0.77%)</title><rect x="2.6662%" y="437" width="0.7714%" height="15" fill="rgb(206,192,2)" fg:x="318" fg:w="92"/><text x="2.9162%" y="447.50"></text></g><g><title>rayon_core::registry::in_worker (92 samples, 0.77%)</title><rect x="2.6662%" y="421" width="0.7714%" height="15" fill="rgb(241,108,4)" fg:x="318" fg:w="92"/><text x="2.9162%" y="431.50"></text></g><g><title>std::panicking::try (46 samples, 0.39%)</title><rect x="3.0519%" y="405" width="0.3857%" height="15" fill="rgb(247,173,49)" fg:x="364" fg:w="46"/><text x="3.3019%" y="415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.39%)</title><rect x="3.0519%" y="389" width="0.3857%" height="15" fill="rgb(224,114,35)" fg:x="364" fg:w="46"/><text x="3.3019%" y="399.50"></text></g><g><title>rayon_core::registry::in_worker (46 samples, 0.39%)</title><rect x="3.0519%" y="373" width="0.3857%" height="15" fill="rgb(245,159,27)" fg:x="364" fg:w="46"/><text x="3.3019%" y="383.50"></text></g><g><title>std::panicking::try (24 samples, 0.20%)</title><rect x="3.2364%" y="357" width="0.2012%" height="15" fill="rgb(245,172,44)" fg:x="386" fg:w="24"/><text x="3.4864%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.20%)</title><rect x="3.2364%" y="341" width="0.2012%" height="15" fill="rgb(236,23,11)" fg:x="386" fg:w="24"/><text x="3.4864%" y="351.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 0.20%)</title><rect x="3.2364%" y="325" width="0.2012%" height="15" fill="rgb(205,117,38)" fg:x="386" fg:w="24"/><text x="3.4864%" y="335.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="3.3370%" y="309" width="0.1006%" height="15" fill="rgb(237,72,25)" fg:x="398" fg:w="12"/><text x="3.5870%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="3.3370%" y="293" width="0.1006%" height="15" fill="rgb(244,70,9)" fg:x="398" fg:w="12"/><text x="3.5870%" y="303.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="3.3370%" y="277" width="0.1006%" height="15" fill="rgb(217,125,39)" fg:x="398" fg:w="12"/><text x="3.5870%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="3.3370%" y="261" width="0.1006%" height="15" fill="rgb(235,36,10)" fg:x="398" fg:w="12"/><text x="3.5870%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.10%)</title><rect x="3.3370%" y="245" width="0.1006%" height="15" fill="rgb(251,123,47)" fg:x="398" fg:w="12"/><text x="3.5870%" y="255.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="3.3705%" y="229" width="0.0671%" height="15" fill="rgb(221,13,13)" fg:x="402" fg:w="8"/><text x="3.6205%" y="239.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (16 samples, 0.13%)</title><rect x="3.4711%" y="341" width="0.1341%" height="15" fill="rgb(238,131,9)" fg:x="414" fg:w="16"/><text x="3.7211%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.13%)</title><rect x="3.4711%" y="325" width="0.1341%" height="15" fill="rgb(211,50,8)" fg:x="414" fg:w="16"/><text x="3.7211%" y="335.50"></text></g><g><title>criterion::analysis::estimates::stats (41 samples, 0.34%)</title><rect x="3.4376%" y="357" width="0.3438%" height="15" fill="rgb(245,182,24)" fg:x="410" fg:w="41"/><text x="3.6876%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (21 samples, 0.18%)</title><rect x="3.6053%" y="341" width="0.1761%" height="15" fill="rgb(242,14,37)" fg:x="430" fg:w="21"/><text x="3.8553%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.16%)</title><rect x="3.6220%" y="325" width="0.1593%" height="15" fill="rgb(246,228,12)" fg:x="432" fg:w="19"/><text x="3.8720%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (55 samples, 0.46%)</title><rect x="3.4376%" y="421" width="0.4611%" height="15" fill="rgb(213,55,15)" fg:x="410" fg:w="55"/><text x="3.6876%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (55 samples, 0.46%)</title><rect x="3.4376%" y="405" width="0.4611%" height="15" fill="rgb(209,9,3)" fg:x="410" fg:w="55"/><text x="3.6876%" y="415.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (55 samples, 0.46%)</title><rect x="3.4376%" y="389" width="0.4611%" height="15" fill="rgb(230,59,30)" fg:x="410" fg:w="55"/><text x="3.6876%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (55 samples, 0.46%)</title><rect x="3.4376%" y="373" width="0.4611%" height="15" fill="rgb(209,121,21)" fg:x="410" fg:w="55"/><text x="3.6876%" y="383.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (14 samples, 0.12%)</title><rect x="3.7813%" y="357" width="0.1174%" height="15" fill="rgb(220,109,13)" fg:x="451" fg:w="14"/><text x="4.0313%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (17 samples, 0.14%)</title><rect x="3.9239%" y="341" width="0.1425%" height="15" fill="rgb(232,18,1)" fg:x="468" fg:w="17"/><text x="4.1739%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.13%)</title><rect x="3.9323%" y="325" width="0.1341%" height="15" fill="rgb(215,41,42)" fg:x="469" fg:w="16"/><text x="4.1823%" y="335.50"></text></g><g><title>criterion::analysis::estimates::stats (44 samples, 0.37%)</title><rect x="3.8987%" y="357" width="0.3689%" height="15" fill="rgb(224,123,36)" fg:x="465" fg:w="44"/><text x="4.1487%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (24 samples, 0.20%)</title><rect x="4.0664%" y="341" width="0.2012%" height="15" fill="rgb(240,125,3)" fg:x="485" fg:w="24"/><text x="4.3164%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (23 samples, 0.19%)</title><rect x="4.0748%" y="325" width="0.1928%" height="15" fill="rgb(205,98,50)" fg:x="486" fg:w="23"/><text x="4.3248%" y="335.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="4.2509%" y="309" width="0.0168%" height="15" fill="rgb(205,185,37)" fg:x="507" fg:w="2"/><text x="4.5009%" y="319.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (114 samples, 0.96%)</title><rect x="3.4376%" y="469" width="0.9558%" height="15" fill="rgb(238,207,15)" fg:x="410" fg:w="114"/><text x="3.6876%" y="479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (114 samples, 0.96%)</title><rect x="3.4376%" y="453" width="0.9558%" height="15" fill="rgb(213,199,42)" fg:x="410" fg:w="114"/><text x="3.6876%" y="463.50"></text></g><g><title>rayon_core::registry::in_worker (114 samples, 0.96%)</title><rect x="3.4376%" y="437" width="0.9558%" height="15" fill="rgb(235,201,11)" fg:x="410" fg:w="114"/><text x="3.6876%" y="447.50"></text></g><g><title>std::panicking::try (59 samples, 0.49%)</title><rect x="3.8987%" y="421" width="0.4947%" height="15" fill="rgb(207,46,11)" fg:x="465" fg:w="59"/><text x="4.1487%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (59 samples, 0.49%)</title><rect x="3.8987%" y="405" width="0.4947%" height="15" fill="rgb(241,35,35)" fg:x="465" fg:w="59"/><text x="4.1487%" y="415.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (59 samples, 0.49%)</title><rect x="3.8987%" y="389" width="0.4947%" height="15" fill="rgb(243,32,47)" fg:x="465" fg:w="59"/><text x="4.1487%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (59 samples, 0.49%)</title><rect x="3.8987%" y="373" width="0.4947%" height="15" fill="rgb(247,202,23)" fg:x="465" fg:w="59"/><text x="4.1487%" y="383.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (15 samples, 0.13%)</title><rect x="4.2676%" y="357" width="0.1258%" height="15" fill="rgb(219,102,11)" fg:x="509" fg:w="15"/><text x="4.5176%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (17 samples, 0.14%)</title><rect x="4.4437%" y="341" width="0.1425%" height="15" fill="rgb(243,110,44)" fg:x="530" fg:w="17"/><text x="4.6937%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.13%)</title><rect x="4.4521%" y="325" width="0.1341%" height="15" fill="rgb(222,74,54)" fg:x="531" fg:w="16"/><text x="4.7021%" y="335.50"></text></g><g><title>criterion::analysis::estimates::stats (35 samples, 0.29%)</title><rect x="4.4018%" y="357" width="0.2935%" height="15" fill="rgb(216,99,12)" fg:x="525" fg:w="35"/><text x="4.6518%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (13 samples, 0.11%)</title><rect x="4.5862%" y="341" width="0.1090%" height="15" fill="rgb(226,22,26)" fg:x="547" fg:w="13"/><text x="4.8362%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="4.5862%" y="325" width="0.1090%" height="15" fill="rgb(217,163,10)" fg:x="547" fg:w="13"/><text x="4.8362%" y="335.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="4.6785%" y="309" width="0.0168%" height="15" fill="rgb(213,25,53)" fg:x="558" fg:w="2"/><text x="4.9285%" y="319.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (53 samples, 0.44%)</title><rect x="4.3934%" y="421" width="0.4444%" height="15" fill="rgb(252,105,26)" fg:x="524" fg:w="53"/><text x="4.6434%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (53 samples, 0.44%)</title><rect x="4.3934%" y="405" width="0.4444%" height="15" fill="rgb(220,39,43)" fg:x="524" fg:w="53"/><text x="4.6434%" y="415.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (53 samples, 0.44%)</title><rect x="4.3934%" y="389" width="0.4444%" height="15" fill="rgb(229,68,48)" fg:x="524" fg:w="53"/><text x="4.6434%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.44%)</title><rect x="4.3934%" y="373" width="0.4444%" height="15" fill="rgb(252,8,32)" fg:x="524" fg:w="53"/><text x="4.6434%" y="383.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (17 samples, 0.14%)</title><rect x="4.6952%" y="357" width="0.1425%" height="15" fill="rgb(223,20,43)" fg:x="560" fg:w="17"/><text x="4.9452%" y="367.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="4.8881%" y="325" width="0.0168%" height="15" fill="rgb(229,81,49)" fg:x="583" fg:w="2"/><text x="5.1381%" y="335.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (24 samples, 0.20%)</title><rect x="4.8713%" y="341" width="0.2012%" height="15" fill="rgb(236,28,36)" fg:x="581" fg:w="24"/><text x="5.1213%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.16%)</title><rect x="4.9132%" y="325" width="0.1593%" height="15" fill="rgb(249,185,26)" fg:x="586" fg:w="19"/><text x="5.1632%" y="335.50"></text></g><g><title>criterion::analysis::estimates::stats (36 samples, 0.30%)</title><rect x="4.8545%" y="357" width="0.3018%" height="15" fill="rgb(249,174,33)" fg:x="579" fg:w="36"/><text x="5.1045%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (10 samples, 0.08%)</title><rect x="5.0725%" y="341" width="0.0838%" height="15" fill="rgb(233,201,37)" fg:x="605" fg:w="10"/><text x="5.3225%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.08%)</title><rect x="5.0725%" y="325" width="0.0838%" height="15" fill="rgb(221,78,26)" fg:x="605" fg:w="10"/><text x="5.3225%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (218 samples, 1.83%)</title><rect x="3.4376%" y="517" width="1.8278%" height="15" fill="rgb(250,127,30)" fg:x="410" fg:w="218"/><text x="3.6876%" y="527.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (218 samples, 1.83%)</title><rect x="3.4376%" y="501" width="1.8278%" height="15" fill="rgb(230,49,44)" fg:x="410" fg:w="218"/><text x="3.6876%" y="511.50">r..</text></g><g><title>rayon_core::registry::in_worker (218 samples, 1.83%)</title><rect x="3.4376%" y="485" width="1.8278%" height="15" fill="rgb(229,67,23)" fg:x="410" fg:w="218"/><text x="3.6876%" y="495.50">r..</text></g><g><title>std::panicking::try (104 samples, 0.87%)</title><rect x="4.3934%" y="469" width="0.8720%" height="15" fill="rgb(249,83,47)" fg:x="524" fg:w="104"/><text x="4.6434%" y="479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (104 samples, 0.87%)</title><rect x="4.3934%" y="453" width="0.8720%" height="15" fill="rgb(215,43,3)" fg:x="524" fg:w="104"/><text x="4.6434%" y="463.50"></text></g><g><title>rayon_core::registry::in_worker (104 samples, 0.87%)</title><rect x="4.3934%" y="437" width="0.8720%" height="15" fill="rgb(238,154,13)" fg:x="524" fg:w="104"/><text x="4.6434%" y="447.50"></text></g><g><title>std::panicking::try (51 samples, 0.43%)</title><rect x="4.8378%" y="421" width="0.4276%" height="15" fill="rgb(219,56,2)" fg:x="577" fg:w="51"/><text x="5.0878%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (51 samples, 0.43%)</title><rect x="4.8378%" y="405" width="0.4276%" height="15" fill="rgb(233,0,4)" fg:x="577" fg:w="51"/><text x="5.0878%" y="415.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (51 samples, 0.43%)</title><rect x="4.8378%" y="389" width="0.4276%" height="15" fill="rgb(235,30,7)" fg:x="577" fg:w="51"/><text x="5.0878%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 0.43%)</title><rect x="4.8378%" y="373" width="0.4276%" height="15" fill="rgb(250,79,13)" fg:x="577" fg:w="51"/><text x="5.0878%" y="383.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13 samples, 0.11%)</title><rect x="5.1564%" y="357" width="0.1090%" height="15" fill="rgb(211,146,34)" fg:x="615" fg:w="13"/><text x="5.4064%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (15 samples, 0.13%)</title><rect x="5.3073%" y="341" width="0.1258%" height="15" fill="rgb(228,22,38)" fg:x="633" fg:w="15"/><text x="5.5573%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="5.3241%" y="325" width="0.1090%" height="15" fill="rgb(235,168,5)" fg:x="635" fg:w="13"/><text x="5.5741%" y="335.50"></text></g><g><title>criterion::analysis::estimates::stats (39 samples, 0.33%)</title><rect x="5.2654%" y="357" width="0.3270%" height="15" fill="rgb(221,155,16)" fg:x="628" fg:w="39"/><text x="5.5154%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (19 samples, 0.16%)</title><rect x="5.4331%" y="341" width="0.1593%" height="15" fill="rgb(215,215,53)" fg:x="648" fg:w="19"/><text x="5.6831%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.15%)</title><rect x="5.4414%" y="325" width="0.1509%" height="15" fill="rgb(223,4,10)" fg:x="649" fg:w="18"/><text x="5.6914%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (49 samples, 0.41%)</title><rect x="5.2654%" y="421" width="0.4108%" height="15" fill="rgb(234,103,6)" fg:x="628" fg:w="49"/><text x="5.5154%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.41%)</title><rect x="5.2654%" y="405" width="0.4108%" height="15" fill="rgb(227,97,0)" fg:x="628" fg:w="49"/><text x="5.5154%" y="415.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (49 samples, 0.41%)</title><rect x="5.2654%" y="389" width="0.4108%" height="15" fill="rgb(234,150,53)" fg:x="628" fg:w="49"/><text x="5.5154%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (49 samples, 0.41%)</title><rect x="5.2654%" y="373" width="0.4108%" height="15" fill="rgb(228,201,54)" fg:x="628" fg:w="49"/><text x="5.5154%" y="383.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (10 samples, 0.08%)</title><rect x="5.5924%" y="357" width="0.0838%" height="15" fill="rgb(222,22,37)" fg:x="667" fg:w="10"/><text x="5.8424%" y="367.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="5.7433%" y="325" width="0.0168%" height="15" fill="rgb(237,53,32)" fg:x="685" fg:w="2"/><text x="5.9933%" y="335.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (15 samples, 0.13%)</title><rect x="5.7433%" y="341" width="0.1258%" height="15" fill="rgb(233,25,53)" fg:x="685" fg:w="15"/><text x="5.9933%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="5.7600%" y="325" width="0.1090%" height="15" fill="rgb(210,40,34)" fg:x="687" fg:w="13"/><text x="6.0100%" y="335.50"></text></g><g><title>criterion::analysis::estimates::stats (32 samples, 0.27%)</title><rect x="5.6930%" y="357" width="0.2683%" height="15" fill="rgb(241,220,44)" fg:x="679" fg:w="32"/><text x="5.9430%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (11 samples, 0.09%)</title><rect x="5.8690%" y="341" width="0.0922%" height="15" fill="rgb(235,28,35)" fg:x="700" fg:w="11"/><text x="6.1190%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.08%)</title><rect x="5.8774%" y="325" width="0.0838%" height="15" fill="rgb(210,56,17)" fg:x="701" fg:w="10"/><text x="6.1274%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (97 samples, 0.81%)</title><rect x="5.2654%" y="469" width="0.8133%" height="15" fill="rgb(224,130,29)" fg:x="628" fg:w="97"/><text x="5.5154%" y="479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (97 samples, 0.81%)</title><rect x="5.2654%" y="453" width="0.8133%" height="15" fill="rgb(235,212,8)" fg:x="628" fg:w="97"/><text x="5.5154%" y="463.50"></text></g><g><title>rayon_core::registry::in_worker (97 samples, 0.81%)</title><rect x="5.2654%" y="437" width="0.8133%" height="15" fill="rgb(223,33,50)" fg:x="628" fg:w="97"/><text x="5.5154%" y="447.50"></text></g><g><title>std::panicking::try (48 samples, 0.40%)</title><rect x="5.6762%" y="421" width="0.4024%" height="15" fill="rgb(219,149,13)" fg:x="677" fg:w="48"/><text x="5.9262%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.40%)</title><rect x="5.6762%" y="405" width="0.4024%" height="15" fill="rgb(250,156,29)" fg:x="677" fg:w="48"/><text x="5.9262%" y="415.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.40%)</title><rect x="5.6762%" y="389" width="0.4024%" height="15" fill="rgb(216,193,19)" fg:x="677" fg:w="48"/><text x="5.9262%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.40%)</title><rect x="5.6762%" y="373" width="0.4024%" height="15" fill="rgb(216,135,14)" fg:x="677" fg:w="48"/><text x="5.9262%" y="383.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (14 samples, 0.12%)</title><rect x="5.9613%" y="357" width="0.1174%" height="15" fill="rgb(241,47,5)" fg:x="711" fg:w="14"/><text x="6.2113%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (19 samples, 0.16%)</title><rect x="6.1457%" y="341" width="0.1593%" height="15" fill="rgb(233,42,35)" fg:x="733" fg:w="19"/><text x="6.3957%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.13%)</title><rect x="6.1793%" y="325" width="0.1258%" height="15" fill="rgb(231,13,6)" fg:x="737" fg:w="15"/><text x="6.4293%" y="335.50"></text></g><g><title>criterion::analysis::estimates::stats (40 samples, 0.34%)</title><rect x="6.0786%" y="357" width="0.3354%" height="15" fill="rgb(207,181,40)" fg:x="725" fg:w="40"/><text x="6.3286%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (13 samples, 0.11%)</title><rect x="6.3050%" y="341" width="0.1090%" height="15" fill="rgb(254,173,49)" fg:x="752" fg:w="13"/><text x="6.5550%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.11%)</title><rect x="6.3050%" y="325" width="0.1090%" height="15" fill="rgb(221,1,38)" fg:x="752" fg:w="13"/><text x="6.5550%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (56 samples, 0.47%)</title><rect x="6.0786%" y="421" width="0.4695%" height="15" fill="rgb(206,124,46)" fg:x="725" fg:w="56"/><text x="6.3286%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (56 samples, 0.47%)</title><rect x="6.0786%" y="405" width="0.4695%" height="15" fill="rgb(249,21,11)" fg:x="725" fg:w="56"/><text x="6.3286%" y="415.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (56 samples, 0.47%)</title><rect x="6.0786%" y="389" width="0.4695%" height="15" fill="rgb(222,201,40)" fg:x="725" fg:w="56"/><text x="6.3286%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (56 samples, 0.47%)</title><rect x="6.0786%" y="373" width="0.4695%" height="15" fill="rgb(235,61,29)" fg:x="725" fg:w="56"/><text x="6.3286%" y="383.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (16 samples, 0.13%)</title><rect x="6.4140%" y="357" width="0.1341%" height="15" fill="rgb(219,207,3)" fg:x="765" fg:w="16"/><text x="6.6640%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (2 samples, 0.02%)</title><rect x="6.5817%" y="341" width="0.0168%" height="15" fill="rgb(222,56,46)" fg:x="785" fg:w="2"/><text x="6.8317%" y="351.50"></text></g><g><title>criterion::analysis::estimates::stats (25 samples, 0.21%)</title><rect x="6.5566%" y="357" width="0.2096%" height="15" fill="rgb(239,76,54)" fg:x="782" fg:w="25"/><text x="6.8066%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (20 samples, 0.17%)</title><rect x="6.5985%" y="341" width="0.1677%" height="15" fill="rgb(231,124,27)" fg:x="787" fg:w="20"/><text x="6.8485%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (20 samples, 0.17%)</title><rect x="6.5985%" y="325" width="0.1677%" height="15" fill="rgb(249,195,6)" fg:x="787" fg:w="20"/><text x="6.8485%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (410 samples, 3.44%)</title><rect x="3.4376%" y="533" width="3.4376%" height="15" fill="rgb(237,174,47)" fg:x="410" fg:w="410"/><text x="3.6876%" y="543.50">ray..</text></g><g><title>std::panicking::try (192 samples, 1.61%)</title><rect x="5.2654%" y="517" width="1.6098%" height="15" fill="rgb(206,201,31)" fg:x="628" fg:w="192"/><text x="5.5154%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (192 samples, 1.61%)</title><rect x="5.2654%" y="501" width="1.6098%" height="15" fill="rgb(231,57,52)" fg:x="628" fg:w="192"/><text x="5.5154%" y="511.50"></text></g><g><title>rayon_core::registry::in_worker (192 samples, 1.61%)</title><rect x="5.2654%" y="485" width="1.6098%" height="15" fill="rgb(248,177,22)" fg:x="628" fg:w="192"/><text x="5.5154%" y="495.50"></text></g><g><title>std::panicking::try (95 samples, 0.80%)</title><rect x="6.0786%" y="469" width="0.7965%" height="15" fill="rgb(215,211,37)" fg:x="725" fg:w="95"/><text x="6.3286%" y="479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (95 samples, 0.80%)</title><rect x="6.0786%" y="453" width="0.7965%" height="15" fill="rgb(241,128,51)" fg:x="725" fg:w="95"/><text x="6.3286%" y="463.50"></text></g><g><title>rayon_core::registry::in_worker (95 samples, 0.80%)</title><rect x="6.0786%" y="437" width="0.7965%" height="15" fill="rgb(227,165,31)" fg:x="725" fg:w="95"/><text x="6.3286%" y="447.50"></text></g><g><title>std::panicking::try (39 samples, 0.33%)</title><rect x="6.5482%" y="421" width="0.3270%" height="15" fill="rgb(228,167,24)" fg:x="781" fg:w="39"/><text x="6.7982%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.33%)</title><rect x="6.5482%" y="405" width="0.3270%" height="15" fill="rgb(228,143,12)" fg:x="781" fg:w="39"/><text x="6.7982%" y="415.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (39 samples, 0.33%)</title><rect x="6.5482%" y="389" width="0.3270%" height="15" fill="rgb(249,149,8)" fg:x="781" fg:w="39"/><text x="6.7982%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 0.33%)</title><rect x="6.5482%" y="373" width="0.3270%" height="15" fill="rgb(243,35,44)" fg:x="781" fg:w="39"/><text x="6.7982%" y="383.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13 samples, 0.11%)</title><rect x="6.7662%" y="357" width="0.1090%" height="15" fill="rgb(246,89,9)" fg:x="807" fg:w="13"/><text x="7.0162%" y="367.50"></text></g><g><title>start_thread (12 samples, 0.10%)</title><rect x="6.8752%" y="533" width="0.1006%" height="15" fill="rgb(233,213,13)" fg:x="820" fg:w="12"/><text x="7.1252%" y="543.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.10%)</title><rect x="6.8752%" y="517" width="0.1006%" height="15" fill="rgb(233,141,41)" fg:x="820" fg:w="12"/><text x="7.1252%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.10%)</title><rect x="6.8752%" y="501" width="0.1006%" height="15" fill="rgb(239,167,4)" fg:x="820" fg:w="12"/><text x="7.1252%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.10%)</title><rect x="6.8752%" y="485" width="0.1006%" height="15" fill="rgb(209,217,16)" fg:x="820" fg:w="12"/><text x="7.1252%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (12 samples, 0.10%)</title><rect x="6.8752%" y="469" width="0.1006%" height="15" fill="rgb(219,88,35)" fg:x="820" fg:w="12"/><text x="7.1252%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.10%)</title><rect x="6.8752%" y="453" width="0.1006%" height="15" fill="rgb(220,193,23)" fg:x="820" fg:w="12"/><text x="7.1252%" y="463.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (12 samples, 0.10%)</title><rect x="6.8752%" y="437" width="0.1006%" height="15" fill="rgb(230,90,52)" fg:x="820" fg:w="12"/><text x="7.1252%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (12 samples, 0.10%)</title><rect x="6.8752%" y="421" width="0.1006%" height="15" fill="rgb(252,106,19)" fg:x="820" fg:w="12"/><text x="7.1252%" y="431.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (12 samples, 0.10%)</title><rect x="6.8752%" y="405" width="0.1006%" height="15" fill="rgb(206,74,20)" fg:x="820" fg:w="12"/><text x="7.1252%" y="415.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="6.8752%" y="389" width="0.1006%" height="15" fill="rgb(230,138,44)" fg:x="820" fg:w="12"/><text x="7.1252%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="6.8752%" y="373" width="0.1006%" height="15" fill="rgb(235,182,43)" fg:x="820" fg:w="12"/><text x="7.1252%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.10%)</title><rect x="6.8752%" y="357" width="0.1006%" height="15" fill="rgb(242,16,51)" fg:x="820" fg:w="12"/><text x="7.1252%" y="367.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="6.8752%" y="341" width="0.1006%" height="15" fill="rgb(248,9,4)" fg:x="820" fg:w="12"/><text x="7.1252%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="6.8752%" y="325" width="0.1006%" height="15" fill="rgb(210,31,22)" fg:x="820" fg:w="12"/><text x="7.1252%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.10%)</title><rect x="6.8752%" y="309" width="0.1006%" height="15" fill="rgb(239,54,39)" fg:x="820" fg:w="12"/><text x="7.1252%" y="319.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="6.8752%" y="293" width="0.1006%" height="15" fill="rgb(230,99,41)" fg:x="820" fg:w="12"/><text x="7.1252%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="6.8752%" y="277" width="0.1006%" height="15" fill="rgb(253,106,12)" fg:x="820" fg:w="12"/><text x="7.1252%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.10%)</title><rect x="6.8752%" y="261" width="0.1006%" height="15" fill="rgb(213,46,41)" fg:x="820" fg:w="12"/><text x="7.1252%" y="271.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="6.8752%" y="245" width="0.1006%" height="15" fill="rgb(215,133,35)" fg:x="820" fg:w="12"/><text x="7.1252%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="6.8752%" y="229" width="0.1006%" height="15" fill="rgb(213,28,5)" fg:x="820" fg:w="12"/><text x="7.1252%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="6.8752%" y="213" width="0.1006%" height="15" fill="rgb(215,77,49)" fg:x="820" fg:w="12"/><text x="7.1252%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="6.8752%" y="197" width="0.1006%" height="15" fill="rgb(248,100,22)" fg:x="820" fg:w="12"/><text x="7.1252%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.10%)</title><rect x="6.8752%" y="181" width="0.1006%" height="15" fill="rgb(208,67,9)" fg:x="820" fg:w="12"/><text x="7.1252%" y="191.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (12 samples, 0.10%)</title><rect x="6.8752%" y="165" width="0.1006%" height="15" fill="rgb(219,133,21)" fg:x="820" fg:w="12"/><text x="7.1252%" y="175.50"></text></g><g><title>std::panicking::try (17 samples, 0.14%)</title><rect x="6.9758%" y="533" width="0.1425%" height="15" fill="rgb(246,46,29)" fg:x="832" fg:w="17"/><text x="7.2258%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.14%)</title><rect x="6.9758%" y="517" width="0.1425%" height="15" fill="rgb(246,185,52)" fg:x="832" fg:w="17"/><text x="7.2258%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.14%)</title><rect x="6.9758%" y="501" width="0.1425%" height="15" fill="rgb(252,136,11)" fg:x="832" fg:w="17"/><text x="7.2258%" y="511.50"></text></g><g><title>std::panicking::try (17 samples, 0.14%)</title><rect x="6.9758%" y="485" width="0.1425%" height="15" fill="rgb(219,138,53)" fg:x="832" fg:w="17"/><text x="7.2258%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.14%)</title><rect x="6.9758%" y="469" width="0.1425%" height="15" fill="rgb(211,51,23)" fg:x="832" fg:w="17"/><text x="7.2258%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.14%)</title><rect x="6.9758%" y="453" width="0.1425%" height="15" fill="rgb(247,221,28)" fg:x="832" fg:w="17"/><text x="7.2258%" y="463.50"></text></g><g><title>std::panicking::try (17 samples, 0.14%)</title><rect x="6.9758%" y="437" width="0.1425%" height="15" fill="rgb(251,222,45)" fg:x="832" fg:w="17"/><text x="7.2258%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.14%)</title><rect x="6.9758%" y="421" width="0.1425%" height="15" fill="rgb(217,162,53)" fg:x="832" fg:w="17"/><text x="7.2258%" y="431.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (17 samples, 0.14%)</title><rect x="6.9758%" y="405" width="0.1425%" height="15" fill="rgb(229,93,14)" fg:x="832" fg:w="17"/><text x="7.2258%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.14%)</title><rect x="6.9758%" y="389" width="0.1425%" height="15" fill="rgb(209,67,49)" fg:x="832" fg:w="17"/><text x="7.2258%" y="399.50"></text></g><g><title>criterion::analysis::estimates::stats (17 samples, 0.14%)</title><rect x="6.9758%" y="373" width="0.1425%" height="15" fill="rgb(213,87,29)" fg:x="832" fg:w="17"/><text x="7.2258%" y="383.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (17 samples, 0.14%)</title><rect x="6.9758%" y="357" width="0.1425%" height="15" fill="rgb(205,151,52)" fg:x="832" fg:w="17"/><text x="7.2258%" y="367.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.14%)</title><rect x="6.9758%" y="341" width="0.1425%" height="15" fill="rgb(253,215,39)" fg:x="832" fg:w="17"/><text x="7.2258%" y="351.50"></text></g><g><title>[unknown] (850 samples, 7.13%)</title><rect x="0.0000%" y="549" width="7.1267%" height="15" fill="rgb(221,220,41)" fg:x="0" fg:w="850"/><text x="0.2500%" y="559.50">[unknown]</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="7.1351%" y="261" width="0.0335%" height="15" fill="rgb(218,133,21)" fg:x="851" fg:w="4"/><text x="7.3851%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="7.1351%" y="245" width="0.0335%" height="15" fill="rgb(221,193,43)" fg:x="851" fg:w="4"/><text x="7.3851%" y="255.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.03%)</title><rect x="7.1351%" y="229" width="0.0335%" height="15" fill="rgb(240,128,52)" fg:x="851" fg:w="4"/><text x="7.3851%" y="239.50"></text></g><g><title>criterion::analysis::estimates (6 samples, 0.05%)</title><rect x="7.1351%" y="277" width="0.0503%" height="15" fill="rgb(253,114,12)" fg:x="851" fg:w="6"/><text x="7.3851%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.02%)</title><rect x="7.1686%" y="261" width="0.0168%" height="15" fill="rgb(215,223,47)" fg:x="855" fg:w="2"/><text x="7.4186%" y="271.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceConsumer&lt;R,ID&gt; as rayon::iter::plumbing::Reducer&lt;T&gt;&gt;::reduce (2 samples, 0.02%)</title><rect x="7.1686%" y="245" width="0.0168%" height="15" fill="rgb(248,225,23)" fg:x="855" fg:w="2"/><text x="7.4186%" y="255.50"></text></g><g><title>&lt;(alloc::vec::Vec&lt;A&gt;,alloc::vec::Vec&lt;B&gt;,alloc::vec::Vec&lt;C&gt;,alloc::vec::Vec&lt;D&gt;) as criterion::stats::tuple::TupledDistributionsBuilder&gt;::extend (2 samples, 0.02%)</title><rect x="7.1686%" y="229" width="0.0168%" height="15" fill="rgb(250,108,0)" fg:x="855" fg:w="2"/><text x="7.4186%" y="239.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="7.1686%" y="213" width="0.0168%" height="15" fill="rgb(228,208,7)" fg:x="855" fg:w="2"/><text x="7.4186%" y="223.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.09%)</title><rect x="26.4190%" y="197" width="0.0922%" height="15" fill="rgb(244,45,10)" fg:x="3151" fg:w="11"/><text x="26.6690%" y="207.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="26.4945%" y="181" width="0.0168%" height="15" fill="rgb(207,125,25)" fg:x="3160" fg:w="2"/><text x="26.7445%" y="191.50"></text></g><g><title>__libc_malloc (5 samples, 0.04%)</title><rect x="26.5113%" y="197" width="0.0419%" height="15" fill="rgb(210,195,18)" fg:x="3162" fg:w="5"/><text x="26.7613%" y="207.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.08%)</title><rect x="30.0075%" y="181" width="0.0755%" height="15" fill="rgb(249,80,12)" fg:x="3579" fg:w="9"/><text x="30.2575%" y="191.50"></text></g><g><title>__libc_malloc (6 samples, 0.05%)</title><rect x="30.0830%" y="181" width="0.0503%" height="15" fill="rgb(221,65,9)" fg:x="3588" fg:w="6"/><text x="30.3330%" y="191.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="30.0998%" y="165" width="0.0335%" height="15" fill="rgb(235,49,36)" fg:x="3590" fg:w="4"/><text x="30.3498%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="30.4435%" y="149" width="0.0168%" height="15" fill="rgb(225,32,20)" fg:x="3631" fg:w="2"/><text x="30.6935%" y="159.50"></text></g><g><title>__rdl_realloc (7 samples, 0.06%)</title><rect x="30.4603%" y="149" width="0.0587%" height="15" fill="rgb(215,141,46)" fg:x="3633" fg:w="7"/><text x="30.7103%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.03%)</title><rect x="30.4855%" y="133" width="0.0335%" height="15" fill="rgb(250,160,47)" fg:x="3636" fg:w="4"/><text x="30.7355%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (129 samples, 1.08%)</title><rect x="30.1501%" y="181" width="1.0816%" height="15" fill="rgb(216,222,40)" fg:x="3596" fg:w="129"/><text x="30.4001%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (106 samples, 0.89%)</title><rect x="30.3429%" y="165" width="0.8887%" height="15" fill="rgb(234,217,39)" fg:x="3619" fg:w="106"/><text x="30.5929%" y="175.50"></text></g><g><title>realloc (85 samples, 0.71%)</title><rect x="30.5190%" y="149" width="0.7127%" height="15" fill="rgb(207,178,40)" fg:x="3640" fg:w="85"/><text x="30.7690%" y="159.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.43%)</title><rect x="30.8041%" y="133" width="0.4276%" height="15" fill="rgb(221,136,13)" fg:x="3674" fg:w="51"/><text x="31.0541%" y="143.50"></text></g><g><title>[libc-2.31.so] (38 samples, 0.32%)</title><rect x="30.9131%" y="117" width="0.3186%" height="15" fill="rgb(249,199,10)" fg:x="3687" fg:w="38"/><text x="31.1631%" y="127.50"></text></g><g><title>[libc-2.31.so] (108 samples, 0.91%)</title><rect x="48.3525%" y="165" width="0.9055%" height="15" fill="rgb(249,222,13)" fg:x="5767" fg:w="108"/><text x="48.6025%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="49.2580%" y="165" width="0.0168%" height="15" fill="rgb(244,185,38)" fg:x="5875" fg:w="2"/><text x="49.5080%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="49.2580%" y="149" width="0.0168%" height="15" fill="rgb(236,202,9)" fg:x="5875" fg:w="2"/><text x="49.5080%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="49.2580%" y="133" width="0.0168%" height="15" fill="rgb(250,229,37)" fg:x="5875" fg:w="2"/><text x="49.5080%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="49.2580%" y="117" width="0.0168%" height="15" fill="rgb(206,174,23)" fg:x="5875" fg:w="2"/><text x="49.5080%" y="127.50"></text></g><g><title>__libc_malloc (29 samples, 0.24%)</title><rect x="49.2748%" y="165" width="0.2431%" height="15" fill="rgb(211,33,43)" fg:x="5877" fg:w="29"/><text x="49.5248%" y="175.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.18%)</title><rect x="49.3334%" y="149" width="0.1845%" height="15" fill="rgb(245,58,50)" fg:x="5884" fg:w="22"/><text x="49.5834%" y="159.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.09%)</title><rect x="49.4257%" y="133" width="0.0922%" height="15" fill="rgb(244,68,36)" fg:x="5895" fg:w="11"/><text x="49.6757%" y="143.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.03%)</title><rect x="49.5263%" y="165" width="0.0252%" height="15" fill="rgb(232,229,15)" fg:x="5907" fg:w="3"/><text x="49.7763%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.03%)</title><rect x="49.5263%" y="149" width="0.0252%" height="15" fill="rgb(254,30,23)" fg:x="5907" fg:w="3"/><text x="49.7763%" y="159.50"></text></g><g><title>__rust_dealloc (3 samples, 0.03%)</title><rect x="49.5514%" y="165" width="0.0252%" height="15" fill="rgb(235,160,14)" fg:x="5910" fg:w="3"/><text x="49.8014%" y="175.50"></text></g><g><title>__libc_malloc (7 samples, 0.06%)</title><rect x="49.6101%" y="133" width="0.0587%" height="15" fill="rgb(212,155,44)" fg:x="5917" fg:w="7"/><text x="49.8601%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.11%)</title><rect x="49.5766%" y="165" width="0.1090%" height="15" fill="rgb(226,2,50)" fg:x="5913" fg:w="13"/><text x="49.8266%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.11%)</title><rect x="49.5766%" y="149" width="0.1090%" height="15" fill="rgb(234,177,6)" fg:x="5913" fg:w="13"/><text x="49.8266%" y="159.50"></text></g><g><title>alloc::slice::merge_sort (2,204 samples, 18.48%)</title><rect x="31.2317%" y="181" width="18.4791%" height="15" fill="rgb(217,24,9)" fg:x="3725" fg:w="2204"/><text x="31.4817%" y="191.50">alloc::slice::merge_sort</text></g><g><title>cfree (3 samples, 0.03%)</title><rect x="49.6856%" y="165" width="0.0252%" height="15" fill="rgb(220,13,46)" fg:x="5926" fg:w="3"/><text x="49.9356%" y="175.50"></text></g><g><title>adventofcode_rust_2015::day21::armor_ring_combos (2,766 samples, 23.19%)</title><rect x="26.5616%" y="197" width="23.1911%" height="15" fill="rgb(239,221,27)" fg:x="3168" fg:w="2766"/><text x="26.8116%" y="207.50">adventofcode_rust_2015::day21::armor_..</text></g><g><title>cfree (5 samples, 0.04%)</title><rect x="49.7107%" y="181" width="0.0419%" height="15" fill="rgb(222,198,25)" fg:x="5929" fg:w="5"/><text x="49.9607%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.09%)</title><rect x="49.7527%" y="197" width="0.0922%" height="15" fill="rgb(211,99,13)" fg:x="5934" fg:w="11"/><text x="50.0027%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.08%)</title><rect x="49.7694%" y="181" width="0.0755%" height="15" fill="rgb(232,111,31)" fg:x="5936" fg:w="9"/><text x="50.0194%" y="191.50"></text></g><g><title>realloc (4 samples, 0.03%)</title><rect x="49.8114%" y="165" width="0.0335%" height="15" fill="rgb(245,82,37)" fg:x="5941" fg:w="4"/><text x="50.0614%" y="175.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="49.8114%" y="149" width="0.0335%" height="15" fill="rgb(227,149,46)" fg:x="5941" fg:w="4"/><text x="50.0614%" y="159.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="49.8114%" y="133" width="0.0335%" height="15" fill="rgb(218,36,50)" fg:x="5941" fg:w="4"/><text x="50.0614%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,090 samples, 42.68%)</title><rect x="7.1938%" y="261" width="42.6763%" height="15" fill="rgb(226,80,48)" fg:x="858" fg:w="5090"/><text x="7.4438%" y="271.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;:..</text></g><g><title>criterion::Bencher::iter (5,090 samples, 42.68%)</title><rect x="7.1938%" y="245" width="42.6763%" height="15" fill="rgb(238,224,15)" fg:x="858" fg:w="5090"/><text x="7.4438%" y="255.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2015::day21::day21_part2::RunnerStruct as aoc_runner::Runner&gt;::bench (5,090 samples, 42.68%)</title><rect x="7.1938%" y="229" width="42.6763%" height="15" fill="rgb(241,136,10)" fg:x="858" fg:w="5090"/><text x="7.4438%" y="239.50">&lt;adventofcode_rust_2015::day21::day21_part2::RunnerStruct as aoc_runne..</text></g><g><title>adventofcode_rust_2015::day21::part2 (5,090 samples, 42.68%)</title><rect x="7.1938%" y="213" width="42.6763%" height="15" fill="rgb(208,32,45)" fg:x="858" fg:w="5090"/><text x="7.4438%" y="223.50">adventofcode_rust_2015::day21::part2</text></g><g><title>cfree (3 samples, 0.03%)</title><rect x="49.8449%" y="197" width="0.0252%" height="15" fill="rgb(207,135,9)" fg:x="5945" fg:w="3"/><text x="50.0949%" y="207.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.09%)</title><rect x="71.8286%" y="197" width="0.0922%" height="15" fill="rgb(206,86,44)" fg:x="8567" fg:w="11"/><text x="72.0786%" y="207.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="71.9209%" y="197" width="0.0252%" height="15" fill="rgb(245,177,15)" fg:x="8578" fg:w="3"/><text x="72.1709%" y="207.50"></text></g><g><title>[libc-2.31.so] (19 samples, 0.16%)</title><rect x="75.6100%" y="181" width="0.1593%" height="15" fill="rgb(206,64,50)" fg:x="9018" fg:w="19"/><text x="75.8600%" y="191.50"></text></g><g><title>__libc_malloc (10 samples, 0.08%)</title><rect x="75.7693%" y="181" width="0.0838%" height="15" fill="rgb(234,36,40)" fg:x="9037" fg:w="10"/><text x="76.0193%" y="191.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.06%)</title><rect x="75.7944%" y="165" width="0.0587%" height="15" fill="rgb(213,64,8)" fg:x="9040" fg:w="7"/><text x="76.0444%" y="175.50"></text></g><g><title>__libc_malloc (7 samples, 0.06%)</title><rect x="76.2639%" y="149" width="0.0587%" height="15" fill="rgb(210,75,36)" fg:x="9096" fg:w="7"/><text x="76.5139%" y="159.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="76.3226%" y="149" width="0.0168%" height="15" fill="rgb(229,88,21)" fg:x="9103" fg:w="2"/><text x="76.5726%" y="159.50"></text></g><g><title>__rdl_realloc (8 samples, 0.07%)</title><rect x="76.3394%" y="149" width="0.0671%" height="15" fill="rgb(252,204,47)" fg:x="9105" fg:w="8"/><text x="76.5894%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.04%)</title><rect x="76.3646%" y="133" width="0.0419%" height="15" fill="rgb(208,77,27)" fg:x="9108" fg:w="5"/><text x="76.6146%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (150 samples, 1.26%)</title><rect x="75.8699%" y="181" width="1.2577%" height="15" fill="rgb(221,76,26)" fg:x="9049" fg:w="150"/><text x="76.1199%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (122 samples, 1.02%)</title><rect x="76.1046%" y="165" width="1.0229%" height="15" fill="rgb(225,139,18)" fg:x="9077" fg:w="122"/><text x="76.3546%" y="175.50"></text></g><g><title>realloc (86 samples, 0.72%)</title><rect x="76.4065%" y="149" width="0.7211%" height="15" fill="rgb(230,137,11)" fg:x="9113" fg:w="86"/><text x="76.6565%" y="159.50"></text></g><g><title>[libc-2.31.so] (61 samples, 0.51%)</title><rect x="76.6161%" y="133" width="0.5114%" height="15" fill="rgb(212,28,1)" fg:x="9138" fg:w="61"/><text x="76.8661%" y="143.50"></text></g><g><title>[libc-2.31.so] (39 samples, 0.33%)</title><rect x="76.8005%" y="117" width="0.3270%" height="15" fill="rgb(248,164,17)" fg:x="9160" fg:w="39"/><text x="77.0505%" y="127.50"></text></g><g><title>[libc-2.31.so] (131 samples, 1.10%)</title><rect x="97.2164%" y="165" width="1.0983%" height="15" fill="rgb(222,171,42)" fg:x="11595" fg:w="131"/><text x="97.4664%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.3147%" y="165" width="0.0168%" height="15" fill="rgb(243,84,45)" fg:x="11726" fg:w="2"/><text x="98.5647%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.3147%" y="149" width="0.0168%" height="15" fill="rgb(252,49,23)" fg:x="11726" fg:w="2"/><text x="98.5647%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.3147%" y="133" width="0.0168%" height="15" fill="rgb(215,19,7)" fg:x="11726" fg:w="2"/><text x="98.5647%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.3147%" y="117" width="0.0168%" height="15" fill="rgb(238,81,41)" fg:x="11726" fg:w="2"/><text x="98.5647%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.3147%" y="101" width="0.0168%" height="15" fill="rgb(210,199,37)" fg:x="11726" fg:w="2"/><text x="98.5647%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.3147%" y="85" width="0.0168%" height="15" fill="rgb(244,192,49)" fg:x="11726" fg:w="2"/><text x="98.5647%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.3147%" y="69" width="0.0168%" height="15" fill="rgb(226,211,11)" fg:x="11726" fg:w="2"/><text x="98.5647%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.3147%" y="53" width="0.0168%" height="15" fill="rgb(236,162,54)" fg:x="11726" fg:w="2"/><text x="98.5647%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.3147%" y="37" width="0.0168%" height="15" fill="rgb(220,229,9)" fg:x="11726" fg:w="2"/><text x="98.5647%" y="47.50"></text></g><g><title>__libc_malloc (30 samples, 0.25%)</title><rect x="98.3315%" y="165" width="0.2515%" height="15" fill="rgb(250,87,22)" fg:x="11728" fg:w="30"/><text x="98.5815%" y="175.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.18%)</title><rect x="98.4070%" y="149" width="0.1761%" height="15" fill="rgb(239,43,17)" fg:x="11737" fg:w="21"/><text x="98.6570%" y="159.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.06%)</title><rect x="98.5244%" y="133" width="0.0587%" height="15" fill="rgb(231,177,25)" fg:x="11751" fg:w="7"/><text x="98.7744%" y="143.50"></text></g><g><title>__libc_malloc (8 samples, 0.07%)</title><rect x="98.7172%" y="133" width="0.0671%" height="15" fill="rgb(219,179,1)" fg:x="11774" fg:w="8"/><text x="98.9672%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 0.20%)</title><rect x="98.5914%" y="165" width="0.2012%" height="15" fill="rgb(238,219,53)" fg:x="11759" fg:w="24"/><text x="98.8414%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.13%)</title><rect x="98.6669%" y="149" width="0.1258%" height="15" fill="rgb(232,167,36)" fg:x="11768" fg:w="15"/><text x="98.9169%" y="159.50"></text></g><g><title>alloc::slice::merge_sort (2,587 samples, 21.69%)</title><rect x="77.1275%" y="181" width="21.6903%" height="15" fill="rgb(244,19,51)" fg:x="9199" fg:w="2587"/><text x="77.3775%" y="191.50">alloc::slice::merge_sort</text></g><g><title>cfree (3 samples, 0.03%)</title><rect x="98.7927%" y="165" width="0.0252%" height="15" fill="rgb(224,6,22)" fg:x="11783" fg:w="3"/><text x="99.0427%" y="175.50"></text></g><g><title>adventofcode_rust_2015::day21::armor_ring_combos (3,209 samples, 26.91%)</title><rect x="71.9460%" y="197" width="26.9053%" height="15" fill="rgb(224,145,5)" fg:x="8581" fg:w="3209"/><text x="72.1960%" y="207.50">adventofcode_rust_2015::day21::armor_ring_c..</text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="98.8178%" y="181" width="0.0335%" height="15" fill="rgb(234,130,49)" fg:x="11786" fg:w="4"/><text x="99.0678%" y="191.50"></text></g><g><title>__libc_malloc (7 samples, 0.06%)</title><rect x="98.8933%" y="165" width="0.0587%" height="15" fill="rgb(254,6,2)" fg:x="11795" fg:w="7"/><text x="99.1433%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 0.21%)</title><rect x="98.8513%" y="197" width="0.2096%" height="15" fill="rgb(208,96,46)" fg:x="11790" fg:w="25"/><text x="99.1013%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.17%)</title><rect x="98.8933%" y="181" width="0.1677%" height="15" fill="rgb(239,3,39)" fg:x="11795" fg:w="20"/><text x="99.1433%" y="191.50"></text></g><g><title>realloc (13 samples, 0.11%)</title><rect x="98.9520%" y="165" width="0.1090%" height="15" fill="rgb(233,210,1)" fg:x="11802" fg:w="13"/><text x="99.2020%" y="175.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.11%)</title><rect x="98.9520%" y="149" width="0.1090%" height="15" fill="rgb(244,137,37)" fg:x="11802" fg:w="13"/><text x="99.2020%" y="159.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.10%)</title><rect x="98.9603%" y="133" width="0.1006%" height="15" fill="rgb(240,136,2)" fg:x="11803" fg:w="12"/><text x="99.2103%" y="143.50"></text></g><g><title>&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run (10,975 samples, 92.02%)</title><rect x="7.1267%" y="309" width="92.0181%" height="15" fill="rgb(239,18,37)" fg:x="850" fg:w="10975"/><text x="7.3767%" y="319.50">&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run</text></g><g><title>criterion::analysis::common (10,975 samples, 92.02%)</title><rect x="7.1267%" y="293" width="92.0181%" height="15" fill="rgb(218,185,22)" fg:x="850" fg:w="10975"/><text x="7.3767%" y="303.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (10,967 samples, 91.95%)</title><rect x="7.1938%" y="277" width="91.9510%" height="15" fill="rgb(225,218,4)" fg:x="858" fg:w="10967"/><text x="7.4438%" y="287.50">criterion::routine::Routine::sample</text></g><g><title>&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm_up (5,877 samples, 49.27%)</title><rect x="49.8700%" y="261" width="49.2748%" height="15" fill="rgb(230,182,32)" fg:x="5948" fg:w="5877"/><text x="50.1200%" y="271.50">&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm_up</text></g><g><title>criterion::Bencher::iter (5,877 samples, 49.27%)</title><rect x="49.8700%" y="245" width="49.2748%" height="15" fill="rgb(242,56,43)" fg:x="5948" fg:w="5877"/><text x="50.1200%" y="255.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2015::day21::day21_part2::RunnerStruct as aoc_runner::Runner&gt;::bench (5,877 samples, 49.27%)</title><rect x="49.8700%" y="229" width="49.2748%" height="15" fill="rgb(233,99,24)" fg:x="5948" fg:w="5877"/><text x="50.1200%" y="239.50">&lt;adventofcode_rust_2015::day21::day21_part2::RunnerStruct as aoc_runner::Runner&gt;:..</text></g><g><title>adventofcode_rust_2015::day21::part2 (5,877 samples, 49.27%)</title><rect x="49.8700%" y="213" width="49.2748%" height="15" fill="rgb(234,209,42)" fg:x="5948" fg:w="5877"/><text x="50.1200%" y="223.50">adventofcode_rust_2015::day21::part2</text></g><g><title>cfree (10 samples, 0.08%)</title><rect x="99.0610%" y="197" width="0.0838%" height="15" fill="rgb(227,7,12)" fg:x="11815" fg:w="10"/><text x="99.3110%" y="207.50"></text></g><g><title>std::panic::catch_unwind (10,976 samples, 92.03%)</title><rect x="7.1267%" y="421" width="92.0265%" height="15" fill="rgb(245,203,43)" fg:x="850" fg:w="10976"/><text x="7.3767%" y="431.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,976 samples, 92.03%)</title><rect x="7.1267%" y="405" width="92.0265%" height="15" fill="rgb(238,205,33)" fg:x="850" fg:w="10976"/><text x="7.3767%" y="415.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,976 samples, 92.03%)</title><rect x="7.1267%" y="389" width="92.0265%" height="15" fill="rgb(231,56,7)" fg:x="850" fg:w="10976"/><text x="7.3767%" y="399.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10,976 samples, 92.03%)</title><rect x="7.1267%" y="373" width="92.0265%" height="15" fill="rgb(244,186,29)" fg:x="850" fg:w="10976"/><text x="7.3767%" y="383.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (10,976 samples, 92.03%)</title><rect x="7.1267%" y="357" width="92.0265%" height="15" fill="rgb(234,111,31)" fg:x="850" fg:w="10976"/><text x="7.3767%" y="367.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10,976 samples, 92.03%)</title><rect x="7.1267%" y="341" width="92.0265%" height="15" fill="rgb(241,149,10)" fg:x="850" fg:w="10976"/><text x="7.3767%" y="351.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>aoc_benchmark::main (10,976 samples, 92.03%)</title><rect x="7.1267%" y="325" width="92.0265%" height="15" fill="rgb(249,206,44)" fg:x="850" fg:w="10976"/><text x="7.3767%" y="335.50">aoc_benchmark::main</text></g><g><title>_start (10,977 samples, 92.03%)</title><rect x="7.1267%" y="549" width="92.0349%" height="15" fill="rgb(251,153,30)" fg:x="850" fg:w="10977"/><text x="7.3767%" y="559.50">_start</text></g><g><title>__libc_start_main (10,977 samples, 92.03%)</title><rect x="7.1267%" y="533" width="92.0349%" height="15" fill="rgb(239,152,38)" fg:x="850" fg:w="10977"/><text x="7.3767%" y="543.50">__libc_start_main</text></g><g><title>main (10,977 samples, 92.03%)</title><rect x="7.1267%" y="517" width="92.0349%" height="15" fill="rgb(249,139,47)" fg:x="850" fg:w="10977"/><text x="7.3767%" y="527.50">main</text></g><g><title>std::rt::lang_start_internal (10,977 samples, 92.03%)</title><rect x="7.1267%" y="501" width="92.0349%" height="15" fill="rgb(244,64,35)" fg:x="850" fg:w="10977"/><text x="7.3767%" y="511.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (10,977 samples, 92.03%)</title><rect x="7.1267%" y="485" width="92.0349%" height="15" fill="rgb(216,46,15)" fg:x="850" fg:w="10977"/><text x="7.3767%" y="495.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,977 samples, 92.03%)</title><rect x="7.1267%" y="469" width="92.0349%" height="15" fill="rgb(250,74,19)" fg:x="850" fg:w="10977"/><text x="7.3767%" y="479.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,977 samples, 92.03%)</title><rect x="7.1267%" y="453" width="92.0349%" height="15" fill="rgb(249,42,33)" fg:x="850" fg:w="10977"/><text x="7.3767%" y="463.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (10,977 samples, 92.03%)</title><rect x="7.1267%" y="437" width="92.0349%" height="15" fill="rgb(242,149,17)" fg:x="850" fg:w="10977"/><text x="7.3767%" y="447.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1616%" y="229" width="0.0168%" height="15" fill="rgb(244,29,21)" fg:x="11827" fg:w="2"/><text x="99.4116%" y="239.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1616%" y="213" width="0.0168%" height="15" fill="rgb(220,130,37)" fg:x="11827" fg:w="2"/><text x="99.4116%" y="223.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="99.1616%" y="309" width="0.0252%" height="15" fill="rgb(211,67,2)" fg:x="11827" fg:w="3"/><text x="99.4116%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.1616%" y="293" width="0.0252%" height="15" fill="rgb(235,68,52)" fg:x="11827" fg:w="3"/><text x="99.4116%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.03%)</title><rect x="99.1616%" y="277" width="0.0252%" height="15" fill="rgb(246,142,3)" fg:x="11827" fg:w="3"/><text x="99.4116%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="99.1616%" y="261" width="0.0252%" height="15" fill="rgb(241,25,7)" fg:x="11827" fg:w="3"/><text x="99.4116%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.1616%" y="245" width="0.0252%" height="15" fill="rgb(242,119,39)" fg:x="11827" fg:w="3"/><text x="99.4116%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="99.1616%" y="341" width="0.0335%" height="15" fill="rgb(241,98,45)" fg:x="11827" fg:w="4"/><text x="99.4116%" y="351.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.03%)</title><rect x="99.1616%" y="325" width="0.0335%" height="15" fill="rgb(254,28,30)" fg:x="11827" fg:w="4"/><text x="99.4116%" y="335.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.05%)</title><rect x="99.1616%" y="389" width="0.0503%" height="15" fill="rgb(241,142,54)" fg:x="11827" fg:w="6"/><text x="99.4116%" y="399.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.05%)</title><rect x="99.1616%" y="373" width="0.0503%" height="15" fill="rgb(222,85,15)" fg:x="11827" fg:w="6"/><text x="99.4116%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.05%)</title><rect x="99.1616%" y="357" width="0.0503%" height="15" fill="rgb(210,85,47)" fg:x="11827" fg:w="6"/><text x="99.4116%" y="367.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.1951%" y="341" width="0.0168%" height="15" fill="rgb(224,206,25)" fg:x="11831" fg:w="2"/><text x="99.4451%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1951%" y="325" width="0.0168%" height="15" fill="rgb(243,201,19)" fg:x="11831" fg:w="2"/><text x="99.4451%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1951%" y="309" width="0.0168%" height="15" fill="rgb(236,59,4)" fg:x="11831" fg:w="2"/><text x="99.4451%" y="319.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.2119%" y="325" width="0.0168%" height="15" fill="rgb(254,179,45)" fg:x="11833" fg:w="2"/><text x="99.4619%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.2119%" y="309" width="0.0168%" height="15" fill="rgb(226,14,10)" fg:x="11833" fg:w="2"/><text x="99.4619%" y="319.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="99.2119%" y="357" width="0.0252%" height="15" fill="rgb(244,27,41)" fg:x="11833" fg:w="3"/><text x="99.4619%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.2119%" y="341" width="0.0252%" height="15" fill="rgb(235,35,32)" fg:x="11833" fg:w="3"/><text x="99.4619%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.2370%" y="309" width="0.0168%" height="15" fill="rgb(218,68,31)" fg:x="11836" fg:w="2"/><text x="99.4870%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.2370%" y="293" width="0.0168%" height="15" fill="rgb(207,120,37)" fg:x="11836" fg:w="2"/><text x="99.4870%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.2370%" y="277" width="0.0168%" height="15" fill="rgb(227,98,0)" fg:x="11836" fg:w="2"/><text x="99.4870%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.2370%" y="261" width="0.0168%" height="15" fill="rgb(207,7,3)" fg:x="11836" fg:w="2"/><text x="99.4870%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.2370%" y="245" width="0.0168%" height="15" fill="rgb(206,98,19)" fg:x="11836" fg:w="2"/><text x="99.4870%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.2370%" y="229" width="0.0168%" height="15" fill="rgb(217,5,26)" fg:x="11836" fg:w="2"/><text x="99.4870%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.03%)</title><rect x="99.2370%" y="357" width="0.0335%" height="15" fill="rgb(235,190,38)" fg:x="11836" fg:w="4"/><text x="99.4870%" y="367.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="99.2370%" y="341" width="0.0335%" height="15" fill="rgb(247,86,24)" fg:x="11836" fg:w="4"/><text x="99.4870%" y="351.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.03%)</title><rect x="99.2370%" y="325" width="0.0335%" height="15" fill="rgb(205,101,16)" fg:x="11836" fg:w="4"/><text x="99.4870%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.2538%" y="309" width="0.0168%" height="15" fill="rgb(246,168,33)" fg:x="11838" fg:w="2"/><text x="99.5038%" y="319.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.2538%" y="293" width="0.0168%" height="15" fill="rgb(231,114,1)" fg:x="11838" fg:w="2"/><text x="99.5038%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.2538%" y="277" width="0.0168%" height="15" fill="rgb(207,184,53)" fg:x="11838" fg:w="2"/><text x="99.5038%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.2538%" y="261" width="0.0168%" height="15" fill="rgb(224,95,51)" fg:x="11838" fg:w="2"/><text x="99.5038%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.2538%" y="245" width="0.0168%" height="15" fill="rgb(212,188,45)" fg:x="11838" fg:w="2"/><text x="99.5038%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.2538%" y="229" width="0.0168%" height="15" fill="rgb(223,154,38)" fg:x="11838" fg:w="2"/><text x="99.5038%" y="239.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="99.2119%" y="389" width="0.0671%" height="15" fill="rgb(251,22,52)" fg:x="11833" fg:w="8"/><text x="99.4619%" y="399.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.07%)</title><rect x="99.2119%" y="373" width="0.0671%" height="15" fill="rgb(229,209,22)" fg:x="11833" fg:w="8"/><text x="99.4619%" y="383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.03%)</title><rect x="99.2789%" y="373" width="0.0252%" height="15" fill="rgb(234,138,34)" fg:x="11841" fg:w="3"/><text x="99.5289%" y="383.50"></text></g><g><title>std::panicking::try (3 samples, 0.03%)</title><rect x="99.2789%" y="357" width="0.0252%" height="15" fill="rgb(212,95,11)" fg:x="11841" fg:w="3"/><text x="99.5289%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.03%)</title><rect x="99.2789%" y="341" width="0.0252%" height="15" fill="rgb(240,179,47)" fg:x="11841" fg:w="3"/><text x="99.5289%" y="351.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.2789%" y="325" width="0.0252%" height="15" fill="rgb(240,163,11)" fg:x="11841" fg:w="3"/><text x="99.5289%" y="335.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceConsumer&lt;R,ID&gt; as rayon::iter::plumbing::Reducer&lt;T&gt;&gt;::reduce (2 samples, 0.02%)</title><rect x="99.3041%" y="357" width="0.0168%" height="15" fill="rgb(236,37,12)" fg:x="11844" fg:w="2"/><text x="99.5541%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="99.3209%" y="277" width="0.1006%" height="15" fill="rgb(232,164,16)" fg:x="11846" fg:w="12"/><text x="99.5709%" y="287.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="99.3209%" y="261" width="0.1006%" height="15" fill="rgb(244,205,15)" fg:x="11846" fg:w="12"/><text x="99.5709%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="99.3209%" y="245" width="0.1006%" height="15" fill="rgb(223,117,47)" fg:x="11846" fg:w="12"/><text x="99.5709%" y="255.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.10%)</title><rect x="99.3209%" y="229" width="0.1006%" height="15" fill="rgb(244,107,35)" fg:x="11846" fg:w="12"/><text x="99.5709%" y="239.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.09%)</title><rect x="99.3293%" y="213" width="0.0922%" height="15" fill="rgb(205,140,8)" fg:x="11847" fg:w="11"/><text x="99.5793%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.20%)</title><rect x="99.3209%" y="309" width="0.2012%" height="15" fill="rgb(228,84,46)" fg:x="11846" fg:w="24"/><text x="99.5709%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 0.20%)</title><rect x="99.3209%" y="293" width="0.2012%" height="15" fill="rgb(254,188,9)" fg:x="11846" fg:w="24"/><text x="99.5709%" y="303.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="99.4215%" y="277" width="0.1006%" height="15" fill="rgb(206,112,54)" fg:x="11858" fg:w="12"/><text x="99.6715%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="99.4215%" y="261" width="0.1006%" height="15" fill="rgb(216,84,49)" fg:x="11858" fg:w="12"/><text x="99.6715%" y="271.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="99.4215%" y="245" width="0.1006%" height="15" fill="rgb(214,194,35)" fg:x="11858" fg:w="12"/><text x="99.6715%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="99.4215%" y="229" width="0.1006%" height="15" fill="rgb(249,28,3)" fg:x="11858" fg:w="12"/><text x="99.6715%" y="239.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.10%)</title><rect x="99.4215%" y="213" width="0.1006%" height="15" fill="rgb(222,56,52)" fg:x="11858" fg:w="12"/><text x="99.6715%" y="223.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.09%)</title><rect x="99.4299%" y="197" width="0.0922%" height="15" fill="rgb(245,217,50)" fg:x="11859" fg:w="11"/><text x="99.6799%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="99.5221%" y="261" width="0.0922%" height="15" fill="rgb(213,201,24)" fg:x="11870" fg:w="11"/><text x="99.7721%" y="271.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="99.5221%" y="245" width="0.0922%" height="15" fill="rgb(248,116,28)" fg:x="11870" fg:w="11"/><text x="99.7721%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="99.5221%" y="229" width="0.0922%" height="15" fill="rgb(219,72,43)" fg:x="11870" fg:w="11"/><text x="99.7721%" y="239.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="99.5221%" y="213" width="0.0922%" height="15" fill="rgb(209,138,14)" fg:x="11870" fg:w="11"/><text x="99.7721%" y="223.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="99.5389%" y="197" width="0.0755%" height="15" fill="rgb(222,18,33)" fg:x="11872" fg:w="9"/><text x="99.7889%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.39%)</title><rect x="99.3209%" y="341" width="0.3941%" height="15" fill="rgb(213,199,7)" fg:x="11846" fg:w="47"/><text x="99.5709%" y="351.50"></text></g><g><title>rayon_core::registry::in_worker (47 samples, 0.39%)</title><rect x="99.3209%" y="325" width="0.3941%" height="15" fill="rgb(250,110,10)" fg:x="11846" fg:w="47"/><text x="99.5709%" y="335.50"></text></g><g><title>std::panicking::try (23 samples, 0.19%)</title><rect x="99.5221%" y="309" width="0.1928%" height="15" fill="rgb(248,123,6)" fg:x="11870" fg:w="23"/><text x="99.7721%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.19%)</title><rect x="99.5221%" y="293" width="0.1928%" height="15" fill="rgb(206,91,31)" fg:x="11870" fg:w="23"/><text x="99.7721%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.19%)</title><rect x="99.5221%" y="277" width="0.1928%" height="15" fill="rgb(211,154,13)" fg:x="11870" fg:w="23"/><text x="99.7721%" y="287.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="99.6143%" y="261" width="0.1006%" height="15" fill="rgb(225,148,7)" fg:x="11881" fg:w="12"/><text x="99.8643%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="99.6143%" y="245" width="0.1006%" height="15" fill="rgb(220,160,43)" fg:x="11881" fg:w="12"/><text x="99.8643%" y="255.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="99.6143%" y="229" width="0.1006%" height="15" fill="rgb(213,52,39)" fg:x="11881" fg:w="12"/><text x="99.8643%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="99.6143%" y="213" width="0.1006%" height="15" fill="rgb(243,137,7)" fg:x="11881" fg:w="12"/><text x="99.8643%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.10%)</title><rect x="99.6143%" y="197" width="0.1006%" height="15" fill="rgb(230,79,13)" fg:x="11881" fg:w="12"/><text x="99.8643%" y="207.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.09%)</title><rect x="99.6227%" y="181" width="0.0922%" height="15" fill="rgb(247,105,23)" fg:x="11882" fg:w="11"/><text x="99.8727%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="99.7149%" y="261" width="0.0922%" height="15" fill="rgb(223,179,41)" fg:x="11893" fg:w="11"/><text x="99.9649%" y="271.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="99.7149%" y="245" width="0.0922%" height="15" fill="rgb(218,9,34)" fg:x="11893" fg:w="11"/><text x="99.9649%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="99.7149%" y="229" width="0.0922%" height="15" fill="rgb(222,106,8)" fg:x="11893" fg:w="11"/><text x="99.9649%" y="239.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="99.7149%" y="213" width="0.0922%" height="15" fill="rgb(211,220,0)" fg:x="11893" fg:w="11"/><text x="99.9649%" y="223.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.09%)</title><rect x="99.7149%" y="197" width="0.0922%" height="15" fill="rgb(229,52,16)" fg:x="11893" fg:w="11"/><text x="99.9649%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.18%)</title><rect x="99.7149%" y="293" width="0.1845%" height="15" fill="rgb(212,155,18)" fg:x="11893" fg:w="22"/><text x="99.9649%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.18%)</title><rect x="99.7149%" y="277" width="0.1845%" height="15" fill="rgb(242,21,14)" fg:x="11893" fg:w="22"/><text x="99.9649%" y="287.50"></text></g><g><title>std::panicking::try (11 samples, 0.09%)</title><rect x="99.8072%" y="261" width="0.0922%" height="15" fill="rgb(222,19,48)" fg:x="11904" fg:w="11"/><text x="100.0572%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.09%)</title><rect x="99.8072%" y="245" width="0.0922%" height="15" fill="rgb(232,45,27)" fg:x="11904" fg:w="11"/><text x="100.0572%" y="255.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.09%)</title><rect x="99.8072%" y="229" width="0.0922%" height="15" fill="rgb(249,103,42)" fg:x="11904" fg:w="11"/><text x="100.0572%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.09%)</title><rect x="99.8072%" y="213" width="0.0922%" height="15" fill="rgb(246,81,33)" fg:x="11904" fg:w="11"/><text x="100.0572%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.09%)</title><rect x="99.8072%" y="197" width="0.0922%" height="15" fill="rgb(252,33,42)" fg:x="11904" fg:w="11"/><text x="100.0572%" y="207.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.08%)</title><rect x="99.8155%" y="181" width="0.0838%" height="15" fill="rgb(209,212,41)" fg:x="11905" fg:w="10"/><text x="100.0655%" y="191.50"></text></g><g><title>all (11,927 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(207,154,6)" fg:x="0" fg:w="11927"/><text x="0.2500%" y="591.50"></text></g><g><title>aoc_benchmark-4 (11,927 samples, 100.00%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(223,64,47)" fg:x="0" fg:w="11927"/><text x="0.2500%" y="575.50">aoc_benchmark-4</text></g><g><title>clone (100 samples, 0.84%)</title><rect x="99.1616%" y="549" width="0.8384%" height="15" fill="rgb(211,161,38)" fg:x="11827" fg:w="100"/><text x="99.4116%" y="559.50"></text></g><g><title>start_thread (100 samples, 0.84%)</title><rect x="99.1616%" y="533" width="0.8384%" height="15" fill="rgb(219,138,40)" fg:x="11827" fg:w="100"/><text x="99.4116%" y="543.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (100 samples, 0.84%)</title><rect x="99.1616%" y="517" width="0.8384%" height="15" fill="rgb(241,228,46)" fg:x="11827" fg:w="100"/><text x="99.4116%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (100 samples, 0.84%)</title><rect x="99.1616%" y="501" width="0.8384%" height="15" fill="rgb(223,209,38)" fg:x="11827" fg:w="100"/><text x="99.4116%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (100 samples, 0.84%)</title><rect x="99.1616%" y="485" width="0.8384%" height="15" fill="rgb(236,164,45)" fg:x="11827" fg:w="100"/><text x="99.4116%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (100 samples, 0.84%)</title><rect x="99.1616%" y="469" width="0.8384%" height="15" fill="rgb(231,15,5)" fg:x="11827" fg:w="100"/><text x="99.4116%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (100 samples, 0.84%)</title><rect x="99.1616%" y="453" width="0.8384%" height="15" fill="rgb(252,35,15)" fg:x="11827" fg:w="100"/><text x="99.4116%" y="463.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (100 samples, 0.84%)</title><rect x="99.1616%" y="437" width="0.8384%" height="15" fill="rgb(248,181,18)" fg:x="11827" fg:w="100"/><text x="99.4116%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (100 samples, 0.84%)</title><rect x="99.1616%" y="421" width="0.8384%" height="15" fill="rgb(233,39,42)" fg:x="11827" fg:w="100"/><text x="99.4116%" y="431.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (100 samples, 0.84%)</title><rect x="99.1616%" y="405" width="0.8384%" height="15" fill="rgb(238,110,33)" fg:x="11827" fg:w="100"/><text x="99.4116%" y="415.50"></text></g><g><title>std::panicking::try (86 samples, 0.72%)</title><rect x="99.2789%" y="389" width="0.7211%" height="15" fill="rgb(233,195,10)" fg:x="11841" fg:w="86"/><text x="99.5289%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (83 samples, 0.70%)</title><rect x="99.3041%" y="373" width="0.6959%" height="15" fill="rgb(254,105,3)" fg:x="11844" fg:w="83"/><text x="99.5541%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (81 samples, 0.68%)</title><rect x="99.3209%" y="357" width="0.6791%" height="15" fill="rgb(221,225,9)" fg:x="11846" fg:w="81"/><text x="99.5709%" y="367.50"></text></g><g><title>std::panicking::try (34 samples, 0.29%)</title><rect x="99.7149%" y="341" width="0.2851%" height="15" fill="rgb(224,227,45)" fg:x="11893" fg:w="34"/><text x="99.9649%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.29%)</title><rect x="99.7149%" y="325" width="0.2851%" height="15" fill="rgb(229,198,43)" fg:x="11893" fg:w="34"/><text x="99.9649%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (34 samples, 0.29%)</title><rect x="99.7149%" y="309" width="0.2851%" height="15" fill="rgb(206,209,35)" fg:x="11893" fg:w="34"/><text x="99.9649%" y="319.50"></text></g><g><title>std::panicking::try (12 samples, 0.10%)</title><rect x="99.8994%" y="293" width="0.1006%" height="15" fill="rgb(245,195,53)" fg:x="11915" fg:w="12"/><text x="100.1494%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="99.8994%" y="277" width="0.1006%" height="15" fill="rgb(240,92,26)" fg:x="11915" fg:w="12"/><text x="100.1494%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.10%)</title><rect x="99.8994%" y="261" width="0.1006%" height="15" fill="rgb(207,40,23)" fg:x="11915" fg:w="12"/><text x="100.1494%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.10%)</title><rect x="99.8994%" y="245" width="0.1006%" height="15" fill="rgb(223,111,35)" fg:x="11915" fg:w="12"/><text x="100.1494%" y="255.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.10%)</title><rect x="99.8994%" y="229" width="0.1006%" height="15" fill="rgb(229,147,28)" fg:x="11915" fg:w="12"/><text x="100.1494%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.10%)</title><rect x="99.8994%" y="213" width="0.1006%" height="15" fill="rgb(211,29,28)" fg:x="11915" fg:w="12"/><text x="100.1494%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.10%)</title><rect x="99.8994%" y="197" width="0.1006%" height="15" fill="rgb(228,72,33)" fg:x="11915" fg:w="12"/><text x="100.1494%" y="207.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.05%)</title><rect x="99.9497%" y="181" width="0.0503%" height="15" fill="rgb(205,214,31)" fg:x="11921" fg:w="6"/><text x="100.1997%" y="191.50"></text></g></svg></svg>