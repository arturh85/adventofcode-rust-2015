<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="550" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="533.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="533.00"> </text><svg id="frames" x="10" width="1180" total_samples="10904"><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (49 samples, 0.45%)</title><rect x="0.0092%" y="293" width="0.4494%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="49"/><text x="0.2592%" y="303.50"></text></g><g><title>rayon::slice::quicksort::recurse (49 samples, 0.45%)</title><rect x="0.0092%" y="277" width="0.4494%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="49"/><text x="0.2592%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (49 samples, 0.45%)</title><rect x="0.0092%" y="261" width="0.4494%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="49"/><text x="0.2592%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="0.3485%" y="245" width="0.1101%" height="15" fill="rgb(248,212,6)" fg:x="38" fg:w="12"/><text x="0.5985%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (91 samples, 0.83%)</title><rect x="0.0092%" y="373" width="0.8346%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="91"/><text x="0.2592%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (91 samples, 0.83%)</title><rect x="0.0092%" y="357" width="0.8346%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="91"/><text x="0.2592%" y="367.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (91 samples, 0.83%)</title><rect x="0.0092%" y="341" width="0.8346%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="91"/><text x="0.2592%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91 samples, 0.83%)</title><rect x="0.0092%" y="325" width="0.8346%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="91"/><text x="0.2592%" y="335.50"></text></g><g><title>criterion::analysis::estimates::stats (91 samples, 0.83%)</title><rect x="0.0092%" y="309" width="0.8346%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="91"/><text x="0.2592%" y="319.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (42 samples, 0.39%)</title><rect x="0.4585%" y="293" width="0.3852%" height="15" fill="rgb(220,122,19)" fg:x="50" fg:w="42"/><text x="0.7085%" y="303.50"></text></g><g><title>rayon::slice::quicksort::recurse (42 samples, 0.39%)</title><rect x="0.4585%" y="277" width="0.3852%" height="15" fill="rgb(250,228,42)" fg:x="50" fg:w="42"/><text x="0.7085%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (42 samples, 0.39%)</title><rect x="0.4585%" y="261" width="0.3852%" height="15" fill="rgb(240,193,28)" fg:x="50" fg:w="42"/><text x="0.7085%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.12%)</title><rect x="0.7245%" y="245" width="0.1192%" height="15" fill="rgb(216,20,37)" fg:x="79" fg:w="13"/><text x="0.9745%" y="255.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (36 samples, 0.33%)</title><rect x="0.8437%" y="293" width="0.3302%" height="15" fill="rgb(206,188,39)" fg:x="92" fg:w="36"/><text x="1.0937%" y="303.50"></text></g><g><title>rayon::slice::quicksort::recurse (36 samples, 0.33%)</title><rect x="0.8437%" y="277" width="0.3302%" height="15" fill="rgb(217,207,13)" fg:x="92" fg:w="36"/><text x="1.0937%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (36 samples, 0.33%)</title><rect x="0.8437%" y="261" width="0.3302%" height="15" fill="rgb(231,73,38)" fg:x="92" fg:w="36"/><text x="1.0937%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="1.0730%" y="245" width="0.1009%" height="15" fill="rgb(225,20,46)" fg:x="117" fg:w="11"/><text x="1.3230%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (172 samples, 1.58%)</title><rect x="0.0092%" y="421" width="1.5774%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="172"/><text x="0.2592%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (172 samples, 1.58%)</title><rect x="0.0092%" y="405" width="1.5774%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="172"/><text x="0.2592%" y="415.50"></text></g><g><title>rayon_core::registry::in_worker (172 samples, 1.58%)</title><rect x="0.0092%" y="389" width="1.5774%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="172"/><text x="0.2592%" y="399.50"></text></g><g><title>std::panicking::try (81 samples, 0.74%)</title><rect x="0.8437%" y="373" width="0.7428%" height="15" fill="rgb(249,33,26)" fg:x="92" fg:w="81"/><text x="1.0937%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (81 samples, 0.74%)</title><rect x="0.8437%" y="357" width="0.7428%" height="15" fill="rgb(235,183,28)" fg:x="92" fg:w="81"/><text x="1.0937%" y="367.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (81 samples, 0.74%)</title><rect x="0.8437%" y="341" width="0.7428%" height="15" fill="rgb(221,5,38)" fg:x="92" fg:w="81"/><text x="1.0937%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (81 samples, 0.74%)</title><rect x="0.8437%" y="325" width="0.7428%" height="15" fill="rgb(247,18,42)" fg:x="92" fg:w="81"/><text x="1.0937%" y="335.50"></text></g><g><title>criterion::analysis::estimates::stats (81 samples, 0.74%)</title><rect x="0.8437%" y="309" width="0.7428%" height="15" fill="rgb(241,131,45)" fg:x="92" fg:w="81"/><text x="1.0937%" y="319.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (45 samples, 0.41%)</title><rect x="1.1739%" y="293" width="0.4127%" height="15" fill="rgb(249,31,29)" fg:x="128" fg:w="45"/><text x="1.4239%" y="303.50"></text></g><g><title>rayon::slice::quicksort::recurse (45 samples, 0.41%)</title><rect x="1.1739%" y="277" width="0.4127%" height="15" fill="rgb(225,111,53)" fg:x="128" fg:w="45"/><text x="1.4239%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (45 samples, 0.41%)</title><rect x="1.1739%" y="261" width="0.4127%" height="15" fill="rgb(238,160,17)" fg:x="128" fg:w="45"/><text x="1.4239%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.08%)</title><rect x="1.5040%" y="245" width="0.0825%" height="15" fill="rgb(214,148,48)" fg:x="164" fg:w="9"/><text x="1.7540%" y="255.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (37 samples, 0.34%)</title><rect x="1.5866%" y="293" width="0.3393%" height="15" fill="rgb(232,36,49)" fg:x="173" fg:w="37"/><text x="1.8366%" y="303.50"></text></g><g><title>rayon::slice::quicksort::recurse (37 samples, 0.34%)</title><rect x="1.5866%" y="277" width="0.3393%" height="15" fill="rgb(209,103,24)" fg:x="173" fg:w="37"/><text x="1.8366%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (37 samples, 0.34%)</title><rect x="1.5866%" y="261" width="0.3393%" height="15" fill="rgb(229,88,8)" fg:x="173" fg:w="37"/><text x="1.8366%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="1.8617%" y="245" width="0.0642%" height="15" fill="rgb(213,181,19)" fg:x="203" fg:w="7"/><text x="2.1117%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (85 samples, 0.78%)</title><rect x="1.5866%" y="373" width="0.7795%" height="15" fill="rgb(254,191,54)" fg:x="173" fg:w="85"/><text x="1.8366%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (85 samples, 0.78%)</title><rect x="1.5866%" y="357" width="0.7795%" height="15" fill="rgb(241,83,37)" fg:x="173" fg:w="85"/><text x="1.8366%" y="367.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (85 samples, 0.78%)</title><rect x="1.5866%" y="341" width="0.7795%" height="15" fill="rgb(233,36,39)" fg:x="173" fg:w="85"/><text x="1.8366%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (85 samples, 0.78%)</title><rect x="1.5866%" y="325" width="0.7795%" height="15" fill="rgb(226,3,54)" fg:x="173" fg:w="85"/><text x="1.8366%" y="335.50"></text></g><g><title>criterion::analysis::estimates::stats (85 samples, 0.78%)</title><rect x="1.5866%" y="309" width="0.7795%" height="15" fill="rgb(245,192,40)" fg:x="173" fg:w="85"/><text x="1.8366%" y="319.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (48 samples, 0.44%)</title><rect x="1.9259%" y="293" width="0.4402%" height="15" fill="rgb(238,167,29)" fg:x="210" fg:w="48"/><text x="2.1759%" y="303.50"></text></g><g><title>rayon::slice::quicksort::recurse (48 samples, 0.44%)</title><rect x="1.9259%" y="277" width="0.4402%" height="15" fill="rgb(232,182,51)" fg:x="210" fg:w="48"/><text x="2.1759%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (48 samples, 0.44%)</title><rect x="1.9259%" y="261" width="0.4402%" height="15" fill="rgb(231,60,39)" fg:x="210" fg:w="48"/><text x="2.1759%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="2.2744%" y="245" width="0.0917%" height="15" fill="rgb(208,69,12)" fg:x="248" fg:w="10"/><text x="2.5244%" y="255.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (34 samples, 0.31%)</title><rect x="2.3661%" y="293" width="0.3118%" height="15" fill="rgb(235,93,37)" fg:x="258" fg:w="34"/><text x="2.6161%" y="303.50"></text></g><g><title>rayon::slice::quicksort::recurse (34 samples, 0.31%)</title><rect x="2.3661%" y="277" width="0.3118%" height="15" fill="rgb(213,116,39)" fg:x="258" fg:w="34"/><text x="2.6161%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (34 samples, 0.31%)</title><rect x="2.3661%" y="261" width="0.3118%" height="15" fill="rgb(222,207,29)" fg:x="258" fg:w="34"/><text x="2.6161%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="2.6045%" y="245" width="0.0734%" height="15" fill="rgb(206,96,30)" fg:x="284" fg:w="8"/><text x="2.8545%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (333 samples, 3.05%)</title><rect x="0.0092%" y="453" width="3.0539%" height="15" fill="rgb(218,138,4)" fg:x="1" fg:w="333"/><text x="0.2592%" y="463.50">ray..</text></g><g><title>rayon_core::registry::in_worker (333 samples, 3.05%)</title><rect x="0.0092%" y="437" width="3.0539%" height="15" fill="rgb(250,191,14)" fg:x="1" fg:w="333"/><text x="0.2592%" y="447.50">ray..</text></g><g><title>std::panicking::try (161 samples, 1.48%)</title><rect x="1.5866%" y="421" width="1.4765%" height="15" fill="rgb(239,60,40)" fg:x="173" fg:w="161"/><text x="1.8366%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (161 samples, 1.48%)</title><rect x="1.5866%" y="405" width="1.4765%" height="15" fill="rgb(206,27,48)" fg:x="173" fg:w="161"/><text x="1.8366%" y="415.50"></text></g><g><title>rayon_core::registry::in_worker (161 samples, 1.48%)</title><rect x="1.5866%" y="389" width="1.4765%" height="15" fill="rgb(225,35,8)" fg:x="173" fg:w="161"/><text x="1.8366%" y="399.50"></text></g><g><title>std::panicking::try (76 samples, 0.70%)</title><rect x="2.3661%" y="373" width="0.6970%" height="15" fill="rgb(250,213,24)" fg:x="258" fg:w="76"/><text x="2.6161%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (76 samples, 0.70%)</title><rect x="2.3661%" y="357" width="0.6970%" height="15" fill="rgb(247,123,22)" fg:x="258" fg:w="76"/><text x="2.6161%" y="367.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (76 samples, 0.70%)</title><rect x="2.3661%" y="341" width="0.6970%" height="15" fill="rgb(231,138,38)" fg:x="258" fg:w="76"/><text x="2.6161%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 0.70%)</title><rect x="2.3661%" y="325" width="0.6970%" height="15" fill="rgb(231,145,46)" fg:x="258" fg:w="76"/><text x="2.6161%" y="335.50"></text></g><g><title>criterion::analysis::estimates::stats (76 samples, 0.70%)</title><rect x="2.3661%" y="309" width="0.6970%" height="15" fill="rgb(251,118,11)" fg:x="258" fg:w="76"/><text x="2.6161%" y="319.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (42 samples, 0.39%)</title><rect x="2.6779%" y="293" width="0.3852%" height="15" fill="rgb(217,147,25)" fg:x="292" fg:w="42"/><text x="2.9279%" y="303.50"></text></g><g><title>rayon::slice::quicksort::recurse (42 samples, 0.39%)</title><rect x="2.6779%" y="277" width="0.3852%" height="15" fill="rgb(247,81,37)" fg:x="292" fg:w="42"/><text x="2.9279%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (42 samples, 0.39%)</title><rect x="2.6779%" y="261" width="0.3852%" height="15" fill="rgb(209,12,38)" fg:x="292" fg:w="42"/><text x="2.9279%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.13%)</title><rect x="2.9347%" y="245" width="0.1284%" height="15" fill="rgb(227,1,9)" fg:x="320" fg:w="14"/><text x="3.1847%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="3.0631%" y="261" width="0.1009%" height="15" fill="rgb(248,47,43)" fg:x="334" fg:w="11"/><text x="3.3131%" y="271.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="3.0631%" y="245" width="0.1009%" height="15" fill="rgb(221,10,30)" fg:x="334" fg:w="11"/><text x="3.3131%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="3.0631%" y="229" width="0.1009%" height="15" fill="rgb(210,229,1)" fg:x="334" fg:w="11"/><text x="3.3131%" y="239.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="3.0631%" y="213" width="0.1009%" height="15" fill="rgb(222,148,37)" fg:x="334" fg:w="11"/><text x="3.3131%" y="223.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="3.0814%" y="197" width="0.0825%" height="15" fill="rgb(234,67,33)" fg:x="336" fg:w="9"/><text x="3.3314%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.20%)</title><rect x="3.0631%" y="293" width="0.2018%" height="15" fill="rgb(247,98,35)" fg:x="334" fg:w="22"/><text x="3.3131%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.20%)</title><rect x="3.0631%" y="277" width="0.2018%" height="15" fill="rgb(247,138,52)" fg:x="334" fg:w="22"/><text x="3.3131%" y="287.50"></text></g><g><title>std::panicking::try (11 samples, 0.10%)</title><rect x="3.1640%" y="261" width="0.1009%" height="15" fill="rgb(213,79,30)" fg:x="345" fg:w="11"/><text x="3.4140%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="3.1640%" y="245" width="0.1009%" height="15" fill="rgb(246,177,23)" fg:x="345" fg:w="11"/><text x="3.4140%" y="255.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="3.1640%" y="229" width="0.1009%" height="15" fill="rgb(230,62,27)" fg:x="345" fg:w="11"/><text x="3.4140%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="3.1640%" y="213" width="0.1009%" height="15" fill="rgb(216,154,8)" fg:x="345" fg:w="11"/><text x="3.4140%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="3.1640%" y="197" width="0.1009%" height="15" fill="rgb(244,35,45)" fg:x="345" fg:w="11"/><text x="3.4140%" y="207.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="3.1823%" y="181" width="0.0825%" height="15" fill="rgb(251,115,12)" fg:x="347" fg:w="9"/><text x="3.4323%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="3.2649%" y="245" width="0.1009%" height="15" fill="rgb(240,54,50)" fg:x="356" fg:w="11"/><text x="3.5149%" y="255.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="3.2649%" y="229" width="0.1009%" height="15" fill="rgb(233,84,52)" fg:x="356" fg:w="11"/><text x="3.5149%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="3.2649%" y="213" width="0.1009%" height="15" fill="rgb(207,117,47)" fg:x="356" fg:w="11"/><text x="3.5149%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="3.2649%" y="197" width="0.1009%" height="15" fill="rgb(249,43,39)" fg:x="356" fg:w="11"/><text x="3.5149%" y="207.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="3.2924%" y="181" width="0.0734%" height="15" fill="rgb(209,38,44)" fg:x="359" fg:w="8"/><text x="3.5424%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (45 samples, 0.41%)</title><rect x="3.0631%" y="325" width="0.4127%" height="15" fill="rgb(236,212,23)" fg:x="334" fg:w="45"/><text x="3.3131%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (45 samples, 0.41%)</title><rect x="3.0631%" y="309" width="0.4127%" height="15" fill="rgb(242,79,21)" fg:x="334" fg:w="45"/><text x="3.3131%" y="319.50"></text></g><g><title>std::panicking::try (23 samples, 0.21%)</title><rect x="3.2649%" y="293" width="0.2109%" height="15" fill="rgb(211,96,35)" fg:x="356" fg:w="23"/><text x="3.5149%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.21%)</title><rect x="3.2649%" y="277" width="0.2109%" height="15" fill="rgb(253,215,40)" fg:x="356" fg:w="23"/><text x="3.5149%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.21%)</title><rect x="3.2649%" y="261" width="0.2109%" height="15" fill="rgb(211,81,21)" fg:x="356" fg:w="23"/><text x="3.5149%" y="271.50"></text></g><g><title>std::panicking::try (12 samples, 0.11%)</title><rect x="3.3657%" y="245" width="0.1101%" height="15" fill="rgb(208,190,38)" fg:x="367" fg:w="12"/><text x="3.6157%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.11%)</title><rect x="3.3657%" y="229" width="0.1101%" height="15" fill="rgb(235,213,38)" fg:x="367" fg:w="12"/><text x="3.6157%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.11%)</title><rect x="3.3657%" y="213" width="0.1101%" height="15" fill="rgb(237,122,38)" fg:x="367" fg:w="12"/><text x="3.6157%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.11%)</title><rect x="3.3657%" y="197" width="0.1101%" height="15" fill="rgb(244,218,35)" fg:x="367" fg:w="12"/><text x="3.6157%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.11%)</title><rect x="3.3657%" y="181" width="0.1101%" height="15" fill="rgb(240,68,47)" fg:x="367" fg:w="12"/><text x="3.6157%" y="191.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="3.3841%" y="165" width="0.0917%" height="15" fill="rgb(210,16,53)" fg:x="369" fg:w="10"/><text x="3.6341%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.11%)</title><rect x="3.4758%" y="245" width="0.1101%" height="15" fill="rgb(235,124,12)" fg:x="379" fg:w="12"/><text x="3.7258%" y="255.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.11%)</title><rect x="3.4758%" y="229" width="0.1101%" height="15" fill="rgb(224,169,11)" fg:x="379" fg:w="12"/><text x="3.7258%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.11%)</title><rect x="3.4758%" y="213" width="0.1101%" height="15" fill="rgb(250,166,2)" fg:x="379" fg:w="12"/><text x="3.7258%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.11%)</title><rect x="3.4758%" y="197" width="0.1101%" height="15" fill="rgb(242,216,29)" fg:x="379" fg:w="12"/><text x="3.7258%" y="207.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.10%)</title><rect x="3.4850%" y="181" width="0.1009%" height="15" fill="rgb(230,116,27)" fg:x="380" fg:w="11"/><text x="3.7350%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.21%)</title><rect x="3.4758%" y="277" width="0.2109%" height="15" fill="rgb(228,99,48)" fg:x="379" fg:w="23"/><text x="3.7258%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.21%)</title><rect x="3.4758%" y="261" width="0.2109%" height="15" fill="rgb(253,11,6)" fg:x="379" fg:w="23"/><text x="3.7258%" y="271.50"></text></g><g><title>std::panicking::try (11 samples, 0.10%)</title><rect x="3.5858%" y="245" width="0.1009%" height="15" fill="rgb(247,143,39)" fg:x="391" fg:w="11"/><text x="3.8358%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="3.5858%" y="229" width="0.1009%" height="15" fill="rgb(236,97,10)" fg:x="391" fg:w="11"/><text x="3.8358%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="3.5858%" y="213" width="0.1009%" height="15" fill="rgb(233,208,19)" fg:x="391" fg:w="11"/><text x="3.8358%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="3.5858%" y="197" width="0.1009%" height="15" fill="rgb(216,164,2)" fg:x="391" fg:w="11"/><text x="3.8358%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="3.5858%" y="181" width="0.1009%" height="15" fill="rgb(220,129,5)" fg:x="391" fg:w="11"/><text x="3.8358%" y="191.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="3.6042%" y="165" width="0.0825%" height="15" fill="rgb(242,17,10)" fg:x="393" fg:w="9"/><text x="3.8542%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.11%)</title><rect x="3.6867%" y="229" width="0.1101%" height="15" fill="rgb(242,107,0)" fg:x="402" fg:w="12"/><text x="3.9367%" y="239.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.11%)</title><rect x="3.6867%" y="213" width="0.1101%" height="15" fill="rgb(251,28,31)" fg:x="402" fg:w="12"/><text x="3.9367%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.11%)</title><rect x="3.6867%" y="197" width="0.1101%" height="15" fill="rgb(233,223,10)" fg:x="402" fg:w="12"/><text x="3.9367%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.11%)</title><rect x="3.6867%" y="181" width="0.1101%" height="15" fill="rgb(215,21,27)" fg:x="402" fg:w="12"/><text x="3.9367%" y="191.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.10%)</title><rect x="3.6959%" y="165" width="0.1009%" height="15" fill="rgb(232,23,21)" fg:x="403" fg:w="11"/><text x="3.9459%" y="175.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (91 samples, 0.83%)</title><rect x="3.0631%" y="453" width="0.8346%" height="15" fill="rgb(244,5,23)" fg:x="334" fg:w="91"/><text x="3.3131%" y="463.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (91 samples, 0.83%)</title><rect x="3.0631%" y="437" width="0.8346%" height="15" fill="rgb(226,81,46)" fg:x="334" fg:w="91"/><text x="3.3131%" y="447.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (91 samples, 0.83%)</title><rect x="3.0631%" y="421" width="0.8346%" height="15" fill="rgb(247,70,30)" fg:x="334" fg:w="91"/><text x="3.3131%" y="431.50"></text></g><g><title>std::panicking::try (91 samples, 0.83%)</title><rect x="3.0631%" y="405" width="0.8346%" height="15" fill="rgb(212,68,19)" fg:x="334" fg:w="91"/><text x="3.3131%" y="415.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (91 samples, 0.83%)</title><rect x="3.0631%" y="389" width="0.8346%" height="15" fill="rgb(240,187,13)" fg:x="334" fg:w="91"/><text x="3.3131%" y="399.50"></text></g><g><title>std::panicking::try (91 samples, 0.83%)</title><rect x="3.0631%" y="373" width="0.8346%" height="15" fill="rgb(223,113,26)" fg:x="334" fg:w="91"/><text x="3.3131%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (91 samples, 0.83%)</title><rect x="3.0631%" y="357" width="0.8346%" height="15" fill="rgb(206,192,2)" fg:x="334" fg:w="91"/><text x="3.3131%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (91 samples, 0.83%)</title><rect x="3.0631%" y="341" width="0.8346%" height="15" fill="rgb(241,108,4)" fg:x="334" fg:w="91"/><text x="3.3131%" y="351.50"></text></g><g><title>std::panicking::try (46 samples, 0.42%)</title><rect x="3.4758%" y="325" width="0.4219%" height="15" fill="rgb(247,173,49)" fg:x="379" fg:w="46"/><text x="3.7258%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.42%)</title><rect x="3.4758%" y="309" width="0.4219%" height="15" fill="rgb(224,114,35)" fg:x="379" fg:w="46"/><text x="3.7258%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (46 samples, 0.42%)</title><rect x="3.4758%" y="293" width="0.4219%" height="15" fill="rgb(245,159,27)" fg:x="379" fg:w="46"/><text x="3.7258%" y="303.50"></text></g><g><title>std::panicking::try (23 samples, 0.21%)</title><rect x="3.6867%" y="277" width="0.2109%" height="15" fill="rgb(245,172,44)" fg:x="402" fg:w="23"/><text x="3.9367%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.21%)</title><rect x="3.6867%" y="261" width="0.2109%" height="15" fill="rgb(236,23,11)" fg:x="402" fg:w="23"/><text x="3.9367%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.21%)</title><rect x="3.6867%" y="245" width="0.2109%" height="15" fill="rgb(205,117,38)" fg:x="402" fg:w="23"/><text x="3.9367%" y="255.50"></text></g><g><title>std::panicking::try (11 samples, 0.10%)</title><rect x="3.7968%" y="229" width="0.1009%" height="15" fill="rgb(237,72,25)" fg:x="414" fg:w="11"/><text x="4.0468%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="3.7968%" y="213" width="0.1009%" height="15" fill="rgb(244,70,9)" fg:x="414" fg:w="11"/><text x="4.0468%" y="223.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="3.7968%" y="197" width="0.1009%" height="15" fill="rgb(217,125,39)" fg:x="414" fg:w="11"/><text x="4.0468%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="3.7968%" y="181" width="0.1009%" height="15" fill="rgb(235,36,10)" fg:x="414" fg:w="11"/><text x="4.0468%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="3.7968%" y="165" width="0.1009%" height="15" fill="rgb(251,123,47)" fg:x="414" fg:w="11"/><text x="4.0468%" y="175.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="3.8151%" y="149" width="0.0825%" height="15" fill="rgb(221,13,13)" fg:x="416" fg:w="9"/><text x="4.0651%" y="159.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (16 samples, 0.15%)</title><rect x="3.9435%" y="261" width="0.1467%" height="15" fill="rgb(238,131,9)" fg:x="430" fg:w="16"/><text x="4.1935%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.13%)</title><rect x="3.9618%" y="245" width="0.1284%" height="15" fill="rgb(211,50,8)" fg:x="432" fg:w="14"/><text x="4.2118%" y="255.50"></text></g><g><title>criterion::analysis::estimates::stats (31 samples, 0.28%)</title><rect x="3.9068%" y="277" width="0.2843%" height="15" fill="rgb(245,182,24)" fg:x="426" fg:w="31"/><text x="4.1568%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (11 samples, 0.10%)</title><rect x="4.0902%" y="261" width="0.1009%" height="15" fill="rgb(242,14,37)" fg:x="446" fg:w="11"/><text x="4.3402%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.09%)</title><rect x="4.0994%" y="245" width="0.0917%" height="15" fill="rgb(246,228,12)" fg:x="447" fg:w="10"/><text x="4.3494%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (46 samples, 0.42%)</title><rect x="3.8977%" y="341" width="0.4219%" height="15" fill="rgb(213,55,15)" fg:x="425" fg:w="46"/><text x="4.1477%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.42%)</title><rect x="3.8977%" y="325" width="0.4219%" height="15" fill="rgb(209,9,3)" fg:x="425" fg:w="46"/><text x="4.1477%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (46 samples, 0.42%)</title><rect x="3.8977%" y="309" width="0.4219%" height="15" fill="rgb(230,59,30)" fg:x="425" fg:w="46"/><text x="4.1477%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.42%)</title><rect x="3.8977%" y="293" width="0.4219%" height="15" fill="rgb(209,121,21)" fg:x="425" fg:w="46"/><text x="4.1477%" y="303.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (14 samples, 0.13%)</title><rect x="4.1911%" y="277" width="0.1284%" height="15" fill="rgb(220,109,13)" fg:x="457" fg:w="14"/><text x="4.4411%" y="287.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="4.4112%" y="245" width="0.0275%" height="15" fill="rgb(232,18,1)" fg:x="481" fg:w="3"/><text x="4.6612%" y="255.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (19 samples, 0.17%)</title><rect x="4.3929%" y="261" width="0.1742%" height="15" fill="rgb(215,41,42)" fg:x="479" fg:w="19"/><text x="4.6429%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.12%)</title><rect x="4.4479%" y="245" width="0.1192%" height="15" fill="rgb(224,123,36)" fg:x="485" fg:w="13"/><text x="4.6979%" y="255.50"></text></g><g><title>criterion::analysis::estimates::stats (41 samples, 0.38%)</title><rect x="4.3287%" y="277" width="0.3760%" height="15" fill="rgb(240,125,3)" fg:x="472" fg:w="41"/><text x="4.5787%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.14%)</title><rect x="4.5671%" y="261" width="0.1376%" height="15" fill="rgb(205,98,50)" fg:x="498" fg:w="15"/><text x="4.8171%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.13%)</title><rect x="4.5763%" y="245" width="0.1284%" height="15" fill="rgb(205,185,37)" fg:x="499" fg:w="14"/><text x="4.8263%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (103 samples, 0.94%)</title><rect x="3.8977%" y="389" width="0.9446%" height="15" fill="rgb(238,207,15)" fg:x="425" fg:w="103"/><text x="4.1477%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (103 samples, 0.94%)</title><rect x="3.8977%" y="373" width="0.9446%" height="15" fill="rgb(213,199,42)" fg:x="425" fg:w="103"/><text x="4.1477%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (103 samples, 0.94%)</title><rect x="3.8977%" y="357" width="0.9446%" height="15" fill="rgb(235,201,11)" fg:x="425" fg:w="103"/><text x="4.1477%" y="367.50"></text></g><g><title>std::panicking::try (57 samples, 0.52%)</title><rect x="4.3195%" y="341" width="0.5227%" height="15" fill="rgb(207,46,11)" fg:x="471" fg:w="57"/><text x="4.5695%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (57 samples, 0.52%)</title><rect x="4.3195%" y="325" width="0.5227%" height="15" fill="rgb(241,35,35)" fg:x="471" fg:w="57"/><text x="4.5695%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (57 samples, 0.52%)</title><rect x="4.3195%" y="309" width="0.5227%" height="15" fill="rgb(243,32,47)" fg:x="471" fg:w="57"/><text x="4.5695%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.52%)</title><rect x="4.3195%" y="293" width="0.5227%" height="15" fill="rgb(247,202,23)" fg:x="471" fg:w="57"/><text x="4.5695%" y="303.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (15 samples, 0.14%)</title><rect x="4.7047%" y="277" width="0.1376%" height="15" fill="rgb(219,102,11)" fg:x="513" fg:w="15"/><text x="4.9547%" y="287.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="4.8973%" y="245" width="0.0183%" height="15" fill="rgb(243,110,44)" fg:x="534" fg:w="2"/><text x="5.1473%" y="255.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (15 samples, 0.14%)</title><rect x="4.8973%" y="261" width="0.1376%" height="15" fill="rgb(222,74,54)" fg:x="534" fg:w="15"/><text x="5.1473%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.11%)</title><rect x="4.9248%" y="245" width="0.1101%" height="15" fill="rgb(216,99,12)" fg:x="537" fg:w="12"/><text x="5.1748%" y="255.50"></text></g><g><title>criterion::analysis::estimates::stats (40 samples, 0.37%)</title><rect x="4.8423%" y="277" width="0.3668%" height="15" fill="rgb(226,22,26)" fg:x="528" fg:w="40"/><text x="5.0923%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (19 samples, 0.17%)</title><rect x="5.0348%" y="261" width="0.1742%" height="15" fill="rgb(217,163,10)" fg:x="549" fg:w="19"/><text x="5.2848%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.17%)</title><rect x="5.0348%" y="245" width="0.1742%" height="15" fill="rgb(213,25,53)" fg:x="549" fg:w="19"/><text x="5.2848%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (54 samples, 0.50%)</title><rect x="4.8423%" y="341" width="0.4952%" height="15" fill="rgb(252,105,26)" fg:x="528" fg:w="54"/><text x="5.0923%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (54 samples, 0.50%)</title><rect x="4.8423%" y="325" width="0.4952%" height="15" fill="rgb(220,39,43)" fg:x="528" fg:w="54"/><text x="5.0923%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (54 samples, 0.50%)</title><rect x="4.8423%" y="309" width="0.4952%" height="15" fill="rgb(229,68,48)" fg:x="528" fg:w="54"/><text x="5.0923%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (54 samples, 0.50%)</title><rect x="4.8423%" y="293" width="0.4952%" height="15" fill="rgb(252,8,32)" fg:x="528" fg:w="54"/><text x="5.0923%" y="303.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (14 samples, 0.13%)</title><rect x="5.2091%" y="277" width="0.1284%" height="15" fill="rgb(223,20,43)" fg:x="568" fg:w="14"/><text x="5.4591%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (17 samples, 0.16%)</title><rect x="5.3925%" y="261" width="0.1559%" height="15" fill="rgb(229,81,49)" fg:x="588" fg:w="17"/><text x="5.6425%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.14%)</title><rect x="5.4109%" y="245" width="0.1376%" height="15" fill="rgb(236,28,36)" fg:x="590" fg:w="15"/><text x="5.6609%" y="255.50"></text></g><g><title>criterion::analysis::estimates::stats (41 samples, 0.38%)</title><rect x="5.3375%" y="277" width="0.3760%" height="15" fill="rgb(249,185,26)" fg:x="582" fg:w="41"/><text x="5.5875%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (18 samples, 0.17%)</title><rect x="5.5484%" y="261" width="0.1651%" height="15" fill="rgb(249,174,33)" fg:x="605" fg:w="18"/><text x="5.7984%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.17%)</title><rect x="5.5484%" y="245" width="0.1651%" height="15" fill="rgb(233,201,37)" fg:x="605" fg:w="18"/><text x="5.7984%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (214 samples, 1.96%)</title><rect x="3.8977%" y="437" width="1.9626%" height="15" fill="rgb(221,78,26)" fg:x="425" fg:w="214"/><text x="4.1477%" y="447.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (214 samples, 1.96%)</title><rect x="3.8977%" y="421" width="1.9626%" height="15" fill="rgb(250,127,30)" fg:x="425" fg:w="214"/><text x="4.1477%" y="431.50">r..</text></g><g><title>rayon_core::registry::in_worker (214 samples, 1.96%)</title><rect x="3.8977%" y="405" width="1.9626%" height="15" fill="rgb(230,49,44)" fg:x="425" fg:w="214"/><text x="4.1477%" y="415.50">r..</text></g><g><title>std::panicking::try (111 samples, 1.02%)</title><rect x="4.8423%" y="389" width="1.0180%" height="15" fill="rgb(229,67,23)" fg:x="528" fg:w="111"/><text x="5.0923%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (111 samples, 1.02%)</title><rect x="4.8423%" y="373" width="1.0180%" height="15" fill="rgb(249,83,47)" fg:x="528" fg:w="111"/><text x="5.0923%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (111 samples, 1.02%)</title><rect x="4.8423%" y="357" width="1.0180%" height="15" fill="rgb(215,43,3)" fg:x="528" fg:w="111"/><text x="5.0923%" y="367.50"></text></g><g><title>std::panicking::try (57 samples, 0.52%)</title><rect x="5.3375%" y="341" width="0.5227%" height="15" fill="rgb(238,154,13)" fg:x="582" fg:w="57"/><text x="5.5875%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (57 samples, 0.52%)</title><rect x="5.3375%" y="325" width="0.5227%" height="15" fill="rgb(219,56,2)" fg:x="582" fg:w="57"/><text x="5.5875%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (57 samples, 0.52%)</title><rect x="5.3375%" y="309" width="0.5227%" height="15" fill="rgb(233,0,4)" fg:x="582" fg:w="57"/><text x="5.5875%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.52%)</title><rect x="5.3375%" y="293" width="0.5227%" height="15" fill="rgb(235,30,7)" fg:x="582" fg:w="57"/><text x="5.5875%" y="303.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (16 samples, 0.15%)</title><rect x="5.7135%" y="277" width="0.1467%" height="15" fill="rgb(250,79,13)" fg:x="623" fg:w="16"/><text x="5.9635%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (9 samples, 0.08%)</title><rect x="5.9703%" y="261" width="0.0825%" height="15" fill="rgb(211,146,34)" fg:x="651" fg:w="9"/><text x="6.2203%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="5.9886%" y="245" width="0.0642%" height="15" fill="rgb(228,22,38)" fg:x="653" fg:w="7"/><text x="6.2386%" y="255.50"></text></g><g><title>criterion::analysis::estimates::stats (41 samples, 0.38%)</title><rect x="5.8602%" y="277" width="0.3760%" height="15" fill="rgb(235,168,5)" fg:x="639" fg:w="41"/><text x="6.1102%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (20 samples, 0.18%)</title><rect x="6.0528%" y="261" width="0.1834%" height="15" fill="rgb(221,155,16)" fg:x="660" fg:w="20"/><text x="6.3028%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.17%)</title><rect x="6.0620%" y="245" width="0.1742%" height="15" fill="rgb(215,215,53)" fg:x="661" fg:w="19"/><text x="6.3120%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (54 samples, 0.50%)</title><rect x="5.8602%" y="341" width="0.4952%" height="15" fill="rgb(223,4,10)" fg:x="639" fg:w="54"/><text x="6.1102%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (54 samples, 0.50%)</title><rect x="5.8602%" y="325" width="0.4952%" height="15" fill="rgb(234,103,6)" fg:x="639" fg:w="54"/><text x="6.1102%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (54 samples, 0.50%)</title><rect x="5.8602%" y="309" width="0.4952%" height="15" fill="rgb(227,97,0)" fg:x="639" fg:w="54"/><text x="6.1102%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (54 samples, 0.50%)</title><rect x="5.8602%" y="293" width="0.4952%" height="15" fill="rgb(234,150,53)" fg:x="639" fg:w="54"/><text x="6.1102%" y="303.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13 samples, 0.12%)</title><rect x="6.2362%" y="277" width="0.1192%" height="15" fill="rgb(228,201,54)" fg:x="680" fg:w="13"/><text x="6.4862%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (20 samples, 0.18%)</title><rect x="6.4197%" y="261" width="0.1834%" height="15" fill="rgb(222,22,37)" fg:x="700" fg:w="20"/><text x="6.6697%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.16%)</title><rect x="6.4472%" y="245" width="0.1559%" height="15" fill="rgb(237,53,32)" fg:x="703" fg:w="17"/><text x="6.6972%" y="255.50"></text></g><g><title>criterion::analysis::estimates::stats (37 samples, 0.34%)</title><rect x="6.3646%" y="277" width="0.3393%" height="15" fill="rgb(233,25,53)" fg:x="694" fg:w="37"/><text x="6.6146%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (11 samples, 0.10%)</title><rect x="6.6031%" y="261" width="0.1009%" height="15" fill="rgb(210,40,34)" fg:x="720" fg:w="11"/><text x="6.8531%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.10%)</title><rect x="6.6031%" y="245" width="0.1009%" height="15" fill="rgb(241,220,44)" fg:x="720" fg:w="11"/><text x="6.8531%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (108 samples, 0.99%)</title><rect x="5.8602%" y="389" width="0.9905%" height="15" fill="rgb(235,28,35)" fg:x="639" fg:w="108"/><text x="6.1102%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (108 samples, 0.99%)</title><rect x="5.8602%" y="373" width="0.9905%" height="15" fill="rgb(210,56,17)" fg:x="639" fg:w="108"/><text x="6.1102%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (108 samples, 0.99%)</title><rect x="5.8602%" y="357" width="0.9905%" height="15" fill="rgb(224,130,29)" fg:x="639" fg:w="108"/><text x="6.1102%" y="367.50"></text></g><g><title>std::panicking::try (54 samples, 0.50%)</title><rect x="6.3555%" y="341" width="0.4952%" height="15" fill="rgb(235,212,8)" fg:x="693" fg:w="54"/><text x="6.6055%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (54 samples, 0.50%)</title><rect x="6.3555%" y="325" width="0.4952%" height="15" fill="rgb(223,33,50)" fg:x="693" fg:w="54"/><text x="6.6055%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (54 samples, 0.50%)</title><rect x="6.3555%" y="309" width="0.4952%" height="15" fill="rgb(219,149,13)" fg:x="693" fg:w="54"/><text x="6.6055%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (54 samples, 0.50%)</title><rect x="6.3555%" y="293" width="0.4952%" height="15" fill="rgb(250,156,29)" fg:x="693" fg:w="54"/><text x="6.6055%" y="303.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (16 samples, 0.15%)</title><rect x="6.7040%" y="277" width="0.1467%" height="15" fill="rgb(216,193,19)" fg:x="731" fg:w="16"/><text x="6.9540%" y="287.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="6.8966%" y="245" width="0.0183%" height="15" fill="rgb(216,135,14)" fg:x="752" fg:w="2"/><text x="7.1466%" y="255.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (23 samples, 0.21%)</title><rect x="6.8782%" y="261" width="0.2109%" height="15" fill="rgb(241,47,5)" fg:x="750" fg:w="23"/><text x="7.1282%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.17%)</title><rect x="6.9149%" y="245" width="0.1742%" height="15" fill="rgb(233,42,35)" fg:x="754" fg:w="19"/><text x="7.1649%" y="255.50"></text></g><g><title>criterion::analysis::estimates::stats (39 samples, 0.36%)</title><rect x="6.8507%" y="277" width="0.3577%" height="15" fill="rgb(231,13,6)" fg:x="747" fg:w="39"/><text x="7.1007%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (13 samples, 0.12%)</title><rect x="7.0891%" y="261" width="0.1192%" height="15" fill="rgb(207,181,40)" fg:x="773" fg:w="13"/><text x="7.3391%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.12%)</title><rect x="7.0891%" y="245" width="0.1192%" height="15" fill="rgb(254,173,49)" fg:x="773" fg:w="13"/><text x="7.3391%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (53 samples, 0.49%)</title><rect x="6.8507%" y="341" width="0.4861%" height="15" fill="rgb(221,1,38)" fg:x="747" fg:w="53"/><text x="7.1007%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (53 samples, 0.49%)</title><rect x="6.8507%" y="325" width="0.4861%" height="15" fill="rgb(206,124,46)" fg:x="747" fg:w="53"/><text x="7.1007%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (53 samples, 0.49%)</title><rect x="6.8507%" y="309" width="0.4861%" height="15" fill="rgb(249,21,11)" fg:x="747" fg:w="53"/><text x="7.1007%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.49%)</title><rect x="6.8507%" y="293" width="0.4861%" height="15" fill="rgb(222,201,40)" fg:x="747" fg:w="53"/><text x="7.1007%" y="303.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (14 samples, 0.13%)</title><rect x="7.2084%" y="277" width="0.1284%" height="15" fill="rgb(235,61,29)" fg:x="786" fg:w="14"/><text x="7.4584%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (4 samples, 0.04%)</title><rect x="7.3734%" y="261" width="0.0367%" height="15" fill="rgb(219,207,3)" fg:x="804" fg:w="4"/><text x="7.6234%" y="271.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="7.3918%" y="245" width="0.0183%" height="15" fill="rgb(222,56,46)" fg:x="806" fg:w="2"/><text x="7.6418%" y="255.50"></text></g><g><title>criterion::analysis::estimates::stats (21 samples, 0.19%)</title><rect x="7.3459%" y="277" width="0.1926%" height="15" fill="rgb(239,76,54)" fg:x="801" fg:w="21"/><text x="7.5959%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.13%)</title><rect x="7.4101%" y="261" width="0.1284%" height="15" fill="rgb(231,124,27)" fg:x="808" fg:w="14"/><text x="7.6601%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.13%)</title><rect x="7.4101%" y="245" width="0.1284%" height="15" fill="rgb(249,195,6)" fg:x="808" fg:w="14"/><text x="7.6601%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (409 samples, 3.75%)</title><rect x="3.8977%" y="453" width="3.7509%" height="15" fill="rgb(237,174,47)" fg:x="425" fg:w="409"/><text x="4.1477%" y="463.50">rayo..</text></g><g><title>std::panicking::try (195 samples, 1.79%)</title><rect x="5.8602%" y="437" width="1.7883%" height="15" fill="rgb(206,201,31)" fg:x="639" fg:w="195"/><text x="6.1102%" y="447.50">s..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (195 samples, 1.79%)</title><rect x="5.8602%" y="421" width="1.7883%" height="15" fill="rgb(231,57,52)" fg:x="639" fg:w="195"/><text x="6.1102%" y="431.50">r..</text></g><g><title>rayon_core::registry::in_worker (195 samples, 1.79%)</title><rect x="5.8602%" y="405" width="1.7883%" height="15" fill="rgb(248,177,22)" fg:x="639" fg:w="195"/><text x="6.1102%" y="415.50">r..</text></g><g><title>std::panicking::try (87 samples, 0.80%)</title><rect x="6.8507%" y="389" width="0.7979%" height="15" fill="rgb(215,211,37)" fg:x="747" fg:w="87"/><text x="7.1007%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (87 samples, 0.80%)</title><rect x="6.8507%" y="373" width="0.7979%" height="15" fill="rgb(241,128,51)" fg:x="747" fg:w="87"/><text x="7.1007%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (87 samples, 0.80%)</title><rect x="6.8507%" y="357" width="0.7979%" height="15" fill="rgb(227,165,31)" fg:x="747" fg:w="87"/><text x="7.1007%" y="367.50"></text></g><g><title>std::panicking::try (34 samples, 0.31%)</title><rect x="7.3368%" y="341" width="0.3118%" height="15" fill="rgb(228,167,24)" fg:x="800" fg:w="34"/><text x="7.5868%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.31%)</title><rect x="7.3368%" y="325" width="0.3118%" height="15" fill="rgb(228,143,12)" fg:x="800" fg:w="34"/><text x="7.5868%" y="335.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (34 samples, 0.31%)</title><rect x="7.3368%" y="309" width="0.3118%" height="15" fill="rgb(249,149,8)" fg:x="800" fg:w="34"/><text x="7.5868%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.31%)</title><rect x="7.3368%" y="293" width="0.3118%" height="15" fill="rgb(243,35,44)" fg:x="800" fg:w="34"/><text x="7.5868%" y="303.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (12 samples, 0.11%)</title><rect x="7.5385%" y="277" width="0.1101%" height="15" fill="rgb(246,89,9)" fg:x="822" fg:w="12"/><text x="7.7885%" y="287.50"></text></g><g><title>start_thread (10 samples, 0.09%)</title><rect x="7.6486%" y="453" width="0.0917%" height="15" fill="rgb(233,213,13)" fg:x="834" fg:w="10"/><text x="7.8986%" y="463.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 0.09%)</title><rect x="7.6486%" y="437" width="0.0917%" height="15" fill="rgb(233,141,41)" fg:x="834" fg:w="10"/><text x="7.8986%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.09%)</title><rect x="7.6486%" y="421" width="0.0917%" height="15" fill="rgb(239,167,4)" fg:x="834" fg:w="10"/><text x="7.8986%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.09%)</title><rect x="7.6486%" y="405" width="0.0917%" height="15" fill="rgb(209,217,16)" fg:x="834" fg:w="10"/><text x="7.8986%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (10 samples, 0.09%)</title><rect x="7.6486%" y="389" width="0.0917%" height="15" fill="rgb(219,88,35)" fg:x="834" fg:w="10"/><text x="7.8986%" y="399.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.09%)</title><rect x="7.6486%" y="373" width="0.0917%" height="15" fill="rgb(220,193,23)" fg:x="834" fg:w="10"/><text x="7.8986%" y="383.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (10 samples, 0.09%)</title><rect x="7.6486%" y="357" width="0.0917%" height="15" fill="rgb(230,90,52)" fg:x="834" fg:w="10"/><text x="7.8986%" y="367.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.09%)</title><rect x="7.6486%" y="341" width="0.0917%" height="15" fill="rgb(252,106,19)" fg:x="834" fg:w="10"/><text x="7.8986%" y="351.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.09%)</title><rect x="7.6486%" y="325" width="0.0917%" height="15" fill="rgb(206,74,20)" fg:x="834" fg:w="10"/><text x="7.8986%" y="335.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.6577%" y="309" width="0.0825%" height="15" fill="rgb(230,138,44)" fg:x="835" fg:w="9"/><text x="7.9077%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.6577%" y="293" width="0.0825%" height="15" fill="rgb(235,182,43)" fg:x="835" fg:w="9"/><text x="7.9077%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.08%)</title><rect x="7.6577%" y="277" width="0.0825%" height="15" fill="rgb(242,16,51)" fg:x="835" fg:w="9"/><text x="7.9077%" y="287.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.6577%" y="261" width="0.0825%" height="15" fill="rgb(248,9,4)" fg:x="835" fg:w="9"/><text x="7.9077%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.6577%" y="245" width="0.0825%" height="15" fill="rgb(210,31,22)" fg:x="835" fg:w="9"/><text x="7.9077%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.08%)</title><rect x="7.6577%" y="229" width="0.0825%" height="15" fill="rgb(239,54,39)" fg:x="835" fg:w="9"/><text x="7.9077%" y="239.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.6577%" y="213" width="0.0825%" height="15" fill="rgb(230,99,41)" fg:x="835" fg:w="9"/><text x="7.9077%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.6577%" y="197" width="0.0825%" height="15" fill="rgb(253,106,12)" fg:x="835" fg:w="9"/><text x="7.9077%" y="207.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.08%)</title><rect x="7.6577%" y="181" width="0.0825%" height="15" fill="rgb(213,46,41)" fg:x="835" fg:w="9"/><text x="7.9077%" y="191.50"></text></g><g><title>std::panicking::try (9 samples, 0.08%)</title><rect x="7.6577%" y="165" width="0.0825%" height="15" fill="rgb(215,133,35)" fg:x="835" fg:w="9"/><text x="7.9077%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.08%)</title><rect x="7.6577%" y="149" width="0.0825%" height="15" fill="rgb(213,28,5)" fg:x="835" fg:w="9"/><text x="7.9077%" y="159.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.08%)</title><rect x="7.6577%" y="133" width="0.0825%" height="15" fill="rgb(215,77,49)" fg:x="835" fg:w="9"/><text x="7.9077%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.08%)</title><rect x="7.6577%" y="117" width="0.0825%" height="15" fill="rgb(248,100,22)" fg:x="835" fg:w="9"/><text x="7.9077%" y="127.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (9 samples, 0.08%)</title><rect x="7.6577%" y="101" width="0.0825%" height="15" fill="rgb(208,67,9)" fg:x="835" fg:w="9"/><text x="7.9077%" y="111.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="7.6577%" y="85" width="0.0825%" height="15" fill="rgb(219,133,21)" fg:x="835" fg:w="9"/><text x="7.9077%" y="95.50"></text></g><g><title>std::panicking::try (25 samples, 0.23%)</title><rect x="7.7403%" y="453" width="0.2293%" height="15" fill="rgb(246,46,29)" fg:x="844" fg:w="25"/><text x="7.9903%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.23%)</title><rect x="7.7403%" y="437" width="0.2293%" height="15" fill="rgb(246,185,52)" fg:x="844" fg:w="25"/><text x="7.9903%" y="447.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.23%)</title><rect x="7.7403%" y="421" width="0.2293%" height="15" fill="rgb(252,136,11)" fg:x="844" fg:w="25"/><text x="7.9903%" y="431.50"></text></g><g><title>std::panicking::try (25 samples, 0.23%)</title><rect x="7.7403%" y="405" width="0.2293%" height="15" fill="rgb(219,138,53)" fg:x="844" fg:w="25"/><text x="7.9903%" y="415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.23%)</title><rect x="7.7403%" y="389" width="0.2293%" height="15" fill="rgb(211,51,23)" fg:x="844" fg:w="25"/><text x="7.9903%" y="399.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.23%)</title><rect x="7.7403%" y="373" width="0.2293%" height="15" fill="rgb(247,221,28)" fg:x="844" fg:w="25"/><text x="7.9903%" y="383.50"></text></g><g><title>std::panicking::try (25 samples, 0.23%)</title><rect x="7.7403%" y="357" width="0.2293%" height="15" fill="rgb(251,222,45)" fg:x="844" fg:w="25"/><text x="7.9903%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.23%)</title><rect x="7.7403%" y="341" width="0.2293%" height="15" fill="rgb(217,162,53)" fg:x="844" fg:w="25"/><text x="7.9903%" y="351.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (25 samples, 0.23%)</title><rect x="7.7403%" y="325" width="0.2293%" height="15" fill="rgb(229,93,14)" fg:x="844" fg:w="25"/><text x="7.9903%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.23%)</title><rect x="7.7403%" y="309" width="0.2293%" height="15" fill="rgb(209,67,49)" fg:x="844" fg:w="25"/><text x="7.9903%" y="319.50"></text></g><g><title>criterion::analysis::estimates::stats (25 samples, 0.23%)</title><rect x="7.7403%" y="293" width="0.2293%" height="15" fill="rgb(213,87,29)" fg:x="844" fg:w="25"/><text x="7.9903%" y="303.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (25 samples, 0.23%)</title><rect x="7.7403%" y="277" width="0.2293%" height="15" fill="rgb(205,151,52)" fg:x="844" fg:w="25"/><text x="7.9903%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (25 samples, 0.23%)</title><rect x="7.7403%" y="261" width="0.2293%" height="15" fill="rgb(253,215,39)" fg:x="844" fg:w="25"/><text x="7.9903%" y="271.50"></text></g><g><title>[unknown] (869 samples, 7.97%)</title><rect x="0.0092%" y="469" width="7.9696%" height="15" fill="rgb(221,220,41)" fg:x="1" fg:w="869"/><text x="0.2592%" y="479.50">[unknown]</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="7.9879%" y="181" width="0.0275%" height="15" fill="rgb(218,133,21)" fg:x="871" fg:w="3"/><text x="8.2379%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="7.9879%" y="165" width="0.0275%" height="15" fill="rgb(221,193,43)" fg:x="871" fg:w="3"/><text x="8.2379%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.03%)</title><rect x="7.9879%" y="149" width="0.0275%" height="15" fill="rgb(240,128,52)" fg:x="871" fg:w="3"/><text x="8.2379%" y="159.50"></text></g><g><title>criterion::stats::Distribution&lt;A&gt;::confidence_interval (3 samples, 0.03%)</title><rect x="7.9879%" y="133" width="0.0275%" height="15" fill="rgb(253,114,12)" fg:x="871" fg:w="3"/><text x="8.2379%" y="143.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (3 samples, 0.03%)</title><rect x="7.9879%" y="117" width="0.0275%" height="15" fill="rgb(215,223,47)" fg:x="871" fg:w="3"/><text x="8.2379%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="7.9879%" y="101" width="0.0275%" height="15" fill="rgb(248,225,23)" fg:x="871" fg:w="3"/><text x="8.2379%" y="111.50"></text></g><g><title>criterion::analysis::estimates (5 samples, 0.05%)</title><rect x="7.9879%" y="197" width="0.0459%" height="15" fill="rgb(250,108,0)" fg:x="871" fg:w="5"/><text x="8.2379%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.02%)</title><rect x="8.0154%" y="181" width="0.0183%" height="15" fill="rgb(228,208,7)" fg:x="874" fg:w="2"/><text x="8.2654%" y="191.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceConsumer&lt;R,ID&gt; as rayon::iter::plumbing::Reducer&lt;T&gt;&gt;::reduce (2 samples, 0.02%)</title><rect x="8.0154%" y="165" width="0.0183%" height="15" fill="rgb(244,45,10)" fg:x="874" fg:w="2"/><text x="8.2654%" y="175.50"></text></g><g><title>&lt;(alloc::vec::Vec&lt;A&gt;,alloc::vec::Vec&lt;B&gt;,alloc::vec::Vec&lt;C&gt;,alloc::vec::Vec&lt;D&gt;) as criterion::stats::tuple::TupledDistributionsBuilder&gt;::extend (2 samples, 0.02%)</title><rect x="8.0154%" y="149" width="0.0183%" height="15" fill="rgb(207,125,25)" fg:x="874" fg:w="2"/><text x="8.2654%" y="159.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.19%)</title><rect x="25.0825%" y="117" width="0.1926%" height="15" fill="rgb(210,195,18)" fg:x="2735" fg:w="21"/><text x="25.3325%" y="127.50"></text></g><g><title>__libc_malloc (5 samples, 0.05%)</title><rect x="25.2751%" y="117" width="0.0459%" height="15" fill="rgb(249,80,12)" fg:x="2756" fg:w="5"/><text x="25.5251%" y="127.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.27%)</title><rect x="29.2828%" y="101" width="0.2660%" height="15" fill="rgb(221,65,9)" fg:x="3193" fg:w="29"/><text x="29.5328%" y="111.50"></text></g><g><title>__libc_malloc (16 samples, 0.15%)</title><rect x="29.5488%" y="101" width="0.1467%" height="15" fill="rgb(235,49,36)" fg:x="3222" fg:w="16"/><text x="29.7988%" y="111.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.11%)</title><rect x="29.5855%" y="85" width="0.1101%" height="15" fill="rgb(225,32,20)" fg:x="3226" fg:w="12"/><text x="29.8355%" y="95.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="30.1724%" y="69" width="0.0275%" height="15" fill="rgb(215,141,46)" fg:x="3290" fg:w="3"/><text x="30.4224%" y="79.50"></text></g><g><title>__rdl_realloc (10 samples, 0.09%)</title><rect x="30.1999%" y="69" width="0.0917%" height="15" fill="rgb(250,160,47)" fg:x="3293" fg:w="10"/><text x="30.4499%" y="79.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (7 samples, 0.06%)</title><rect x="30.2274%" y="53" width="0.0642%" height="15" fill="rgb(216,222,40)" fg:x="3296" fg:w="7"/><text x="30.4774%" y="63.50"></text></g><g><title>__rust_realloc (3 samples, 0.03%)</title><rect x="30.3008%" y="69" width="0.0275%" height="15" fill="rgb(234,217,39)" fg:x="3304" fg:w="3"/><text x="30.5508%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (154 samples, 1.41%)</title><rect x="29.7047%" y="101" width="1.4123%" height="15" fill="rgb(207,178,40)" fg:x="3239" fg:w="154"/><text x="29.9547%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 samples, 1.05%)</title><rect x="30.0624%" y="85" width="1.0547%" height="15" fill="rgb(221,136,13)" fg:x="3278" fg:w="115"/><text x="30.3124%" y="95.50"></text></g><g><title>realloc (86 samples, 0.79%)</title><rect x="30.3283%" y="69" width="0.7887%" height="15" fill="rgb(249,199,10)" fg:x="3307" fg:w="86"/><text x="30.5783%" y="79.50"></text></g><g><title>[libc-2.31.so] (49 samples, 0.45%)</title><rect x="30.6676%" y="53" width="0.4494%" height="15" fill="rgb(249,222,13)" fg:x="3344" fg:w="49"/><text x="30.9176%" y="63.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.27%)</title><rect x="30.8511%" y="37" width="0.2660%" height="15" fill="rgb(244,185,38)" fg:x="3364" fg:w="29"/><text x="31.1011%" y="47.50"></text></g><g><title>[libc-2.31.so] (112 samples, 1.03%)</title><rect x="51.5682%" y="85" width="1.0271%" height="15" fill="rgb(236,202,9)" fg:x="5623" fg:w="112"/><text x="51.8182%" y="95.50"></text></g><g><title>__libc_malloc (32 samples, 0.29%)</title><rect x="52.5954%" y="85" width="0.2935%" height="15" fill="rgb(250,229,37)" fg:x="5735" fg:w="32"/><text x="52.8454%" y="95.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.19%)</title><rect x="52.6963%" y="69" width="0.1926%" height="15" fill="rgb(206,174,23)" fg:x="5746" fg:w="21"/><text x="52.9463%" y="79.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.09%)</title><rect x="52.7971%" y="53" width="0.0917%" height="15" fill="rgb(211,33,43)" fg:x="5757" fg:w="10"/><text x="53.0471%" y="63.50"></text></g><g><title>__libc_malloc (12 samples, 0.11%)</title><rect x="53.0356%" y="53" width="0.1101%" height="15" fill="rgb(245,58,50)" fg:x="5783" fg:w="12"/><text x="53.2856%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.26%)</title><rect x="52.9072%" y="85" width="0.2568%" height="15" fill="rgb(244,68,36)" fg:x="5769" fg:w="28"/><text x="53.1572%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.19%)</title><rect x="52.9714%" y="69" width="0.1926%" height="15" fill="rgb(232,229,15)" fg:x="5776" fg:w="21"/><text x="53.2214%" y="79.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="53.1456%" y="53" width="0.0183%" height="15" fill="rgb(254,30,23)" fg:x="5795" fg:w="2"/><text x="53.3956%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="53.1456%" y="37" width="0.0183%" height="15" fill="rgb(235,160,14)" fg:x="5795" fg:w="2"/><text x="53.3956%" y="47.50"></text></g><g><title>alloc::slice::merge_sort (2,414 samples, 22.14%)</title><rect x="31.1170%" y="101" width="22.1387%" height="15" fill="rgb(212,155,44)" fg:x="3393" fg:w="2414"/><text x="31.3670%" y="111.50">alloc::slice::merge_sort</text></g><g><title>cfree (10 samples, 0.09%)</title><rect x="53.1640%" y="85" width="0.0917%" height="15" fill="rgb(226,2,50)" fg:x="5797" fg:w="10"/><text x="53.4140%" y="95.50"></text></g><g><title>adventofcode_rust_2015::day21::armor_ring_combos (3,048 samples, 27.95%)</title><rect x="25.3210%" y="117" width="27.9530%" height="15" fill="rgb(234,177,6)" fg:x="2761" fg:w="3048"/><text x="25.5710%" y="127.50">adventofcode_rust_2015::day21::armor_ring_com..</text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="53.2557%" y="101" width="0.0183%" height="15" fill="rgb(217,24,9)" fg:x="5807" fg:w="2"/><text x="53.5057%" y="111.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="53.2924%" y="85" width="0.0275%" height="15" fill="rgb(220,13,46)" fg:x="5811" fg:w="3"/><text x="53.5424%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.07%)</title><rect x="53.2740%" y="117" width="0.0734%" height="15" fill="rgb(239,221,27)" fg:x="5809" fg:w="8"/><text x="53.5240%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.06%)</title><rect x="53.2832%" y="101" width="0.0642%" height="15" fill="rgb(222,198,25)" fg:x="5810" fg:w="7"/><text x="53.5332%" y="111.50"></text></g><g><title>realloc (3 samples, 0.03%)</title><rect x="53.3199%" y="85" width="0.0275%" height="15" fill="rgb(211,99,13)" fg:x="5814" fg:w="3"/><text x="53.5699%" y="95.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="53.3199%" y="69" width="0.0275%" height="15" fill="rgb(232,111,31)" fg:x="5814" fg:w="3"/><text x="53.5699%" y="79.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="53.3199%" y="53" width="0.0275%" height="15" fill="rgb(245,82,37)" fg:x="5814" fg:w="3"/><text x="53.5699%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,945 samples, 45.35%)</title><rect x="8.0521%" y="181" width="45.3503%" height="15" fill="rgb(227,149,46)" fg:x="878" fg:w="4945"/><text x="8.3021%" y="191.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::fro..</text></g><g><title>criterion::Bencher::iter (4,945 samples, 45.35%)</title><rect x="8.0521%" y="165" width="45.3503%" height="15" fill="rgb(218,36,50)" fg:x="878" fg:w="4945"/><text x="8.3021%" y="175.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2015::day21::day21_part1::RunnerStruct as aoc_runner::Runner&gt;::bench (4,945 samples, 45.35%)</title><rect x="8.0521%" y="149" width="45.3503%" height="15" fill="rgb(226,80,48)" fg:x="878" fg:w="4945"/><text x="8.3021%" y="159.50">&lt;adventofcode_rust_2015::day21::day21_part1::RunnerStruct as aoc_runner::R..</text></g><g><title>adventofcode_rust_2015::day21::part1 (4,945 samples, 45.35%)</title><rect x="8.0521%" y="133" width="45.3503%" height="15" fill="rgb(238,224,15)" fg:x="878" fg:w="4945"/><text x="8.3021%" y="143.50">adventofcode_rust_2015::day21::part1</text></g><g><title>cfree (6 samples, 0.06%)</title><rect x="53.3474%" y="117" width="0.0550%" height="15" fill="rgb(241,136,10)" fg:x="5817" fg:w="6"/><text x="53.5974%" y="127.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.17%)</title><rect x="70.3962%" y="117" width="0.1651%" height="15" fill="rgb(208,32,45)" fg:x="7676" fg:w="18"/><text x="70.6462%" y="127.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="70.5337%" y="101" width="0.0275%" height="15" fill="rgb(207,135,9)" fg:x="7691" fg:w="3"/><text x="70.7837%" y="111.50"></text></g><g><title>[libc-2.31.so] (28 samples, 0.26%)</title><rect x="74.4222%" y="101" width="0.2568%" height="15" fill="rgb(206,86,44)" fg:x="8115" fg:w="28"/><text x="74.6722%" y="111.50"></text></g><g><title>__libc_malloc (11 samples, 0.10%)</title><rect x="74.6790%" y="101" width="0.1009%" height="15" fill="rgb(245,177,15)" fg:x="8143" fg:w="11"/><text x="74.9290%" y="111.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.07%)</title><rect x="74.7065%" y="85" width="0.0734%" height="15" fill="rgb(206,64,50)" fg:x="8146" fg:w="8"/><text x="74.9565%" y="95.50"></text></g><g><title>__libc_malloc (7 samples, 0.06%)</title><rect x="75.1742%" y="69" width="0.0642%" height="15" fill="rgb(234,36,40)" fg:x="8197" fg:w="7"/><text x="75.4242%" y="79.50"></text></g><g><title>__rdl_realloc (6 samples, 0.06%)</title><rect x="75.2476%" y="69" width="0.0550%" height="15" fill="rgb(213,64,8)" fg:x="8205" fg:w="6"/><text x="75.4976%" y="79.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.05%)</title><rect x="75.2568%" y="53" width="0.0459%" height="15" fill="rgb(210,75,36)" fg:x="8206" fg:w="5"/><text x="75.5068%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (141 samples, 1.29%)</title><rect x="74.7891%" y="101" width="1.2931%" height="15" fill="rgb(229,88,21)" fg:x="8155" fg:w="141"/><text x="75.0391%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 samples, 1.01%)</title><rect x="75.0734%" y="85" width="1.0088%" height="15" fill="rgb(252,204,47)" fg:x="8186" fg:w="110"/><text x="75.3234%" y="95.50"></text></g><g><title>realloc (84 samples, 0.77%)</title><rect x="75.3118%" y="69" width="0.7704%" height="15" fill="rgb(208,77,27)" fg:x="8212" fg:w="84"/><text x="75.5618%" y="79.50"></text></g><g><title>[libc-2.31.so] (52 samples, 0.48%)</title><rect x="75.6053%" y="53" width="0.4769%" height="15" fill="rgb(221,76,26)" fg:x="8244" fg:w="52"/><text x="75.8553%" y="63.50"></text></g><g><title>[libc-2.31.so] (31 samples, 0.28%)</title><rect x="75.7979%" y="37" width="0.2843%" height="15" fill="rgb(225,139,18)" fg:x="8265" fg:w="31"/><text x="76.0479%" y="47.50"></text></g><g><title>[libc-2.31.so] (105 samples, 0.96%)</title><rect x="97.2395%" y="85" width="0.9629%" height="15" fill="rgb(230,137,11)" fg:x="10603" fg:w="105"/><text x="97.4895%" y="95.50"></text></g><g><title>__libc_malloc (27 samples, 0.25%)</title><rect x="98.2025%" y="85" width="0.2476%" height="15" fill="rgb(212,28,1)" fg:x="10708" fg:w="27"/><text x="98.4525%" y="95.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.19%)</title><rect x="98.2575%" y="69" width="0.1926%" height="15" fill="rgb(248,164,17)" fg:x="10714" fg:w="21"/><text x="98.5075%" y="79.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.08%)</title><rect x="98.3676%" y="53" width="0.0825%" height="15" fill="rgb(222,171,42)" fg:x="10726" fg:w="9"/><text x="98.6176%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (23 samples, 0.21%)</title><rect x="98.4776%" y="85" width="0.2109%" height="15" fill="rgb(243,84,45)" fg:x="10738" fg:w="23"/><text x="98.7276%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.15%)</title><rect x="98.5418%" y="69" width="0.1467%" height="15" fill="rgb(252,49,23)" fg:x="10745" fg:w="16"/><text x="98.7918%" y="79.50"></text></g><g><title>__libc_malloc (14 samples, 0.13%)</title><rect x="98.5602%" y="53" width="0.1284%" height="15" fill="rgb(215,19,7)" fg:x="10747" fg:w="14"/><text x="98.8102%" y="63.50"></text></g><g><title>alloc::slice::merge_sort (2,476 samples, 22.71%)</title><rect x="76.0822%" y="101" width="22.7073%" height="15" fill="rgb(238,81,41)" fg:x="8296" fg:w="2476"/><text x="76.3322%" y="111.50">alloc::slice::merge_sort</text></g><g><title>cfree (11 samples, 0.10%)</title><rect x="98.6886%" y="85" width="0.1009%" height="15" fill="rgb(210,199,37)" fg:x="10761" fg:w="11"/><text x="98.9386%" y="95.50"></text></g><g><title>adventofcode_rust_2015::day21::armor_ring_combos (3,078 samples, 28.23%)</title><rect x="70.5704%" y="117" width="28.2282%" height="15" fill="rgb(244,192,49)" fg:x="7695" fg:w="3078"/><text x="70.8204%" y="127.50">adventofcode_rust_2015::day21::armor_ring_com..</text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="98.8169%" y="85" width="0.0183%" height="15" fill="rgb(226,211,11)" fg:x="10775" fg:w="2"/><text x="99.0669%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.18%)</title><rect x="98.7986%" y="117" width="0.1834%" height="15" fill="rgb(236,162,54)" fg:x="10773" fg:w="20"/><text x="99.0486%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.17%)</title><rect x="98.8169%" y="101" width="0.1651%" height="15" fill="rgb(220,229,9)" fg:x="10775" fg:w="18"/><text x="99.0669%" y="111.50"></text></g><g><title>realloc (15 samples, 0.14%)</title><rect x="98.8445%" y="85" width="0.1376%" height="15" fill="rgb(250,87,22)" fg:x="10778" fg:w="15"/><text x="99.0945%" y="95.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.12%)</title><rect x="98.8628%" y="69" width="0.1192%" height="15" fill="rgb(239,43,17)" fg:x="10780" fg:w="13"/><text x="99.1128%" y="79.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.11%)</title><rect x="98.8720%" y="53" width="0.1101%" height="15" fill="rgb(231,177,25)" fg:x="10781" fg:w="12"/><text x="99.1220%" y="63.50"></text></g><g><title>criterion::Bencher::iter (4,975 samples, 45.63%)</title><rect x="53.4024%" y="165" width="45.6255%" height="15" fill="rgb(219,179,1)" fg:x="5823" fg:w="4975"/><text x="53.6524%" y="175.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2015::day21::day21_part1::RunnerStruct as aoc_runner::Runner&gt;::bench (4,975 samples, 45.63%)</title><rect x="53.4024%" y="149" width="45.6255%" height="15" fill="rgb(238,219,53)" fg:x="5823" fg:w="4975"/><text x="53.6524%" y="159.50">&lt;adventofcode_rust_2015::day21::day21_part1::RunnerStruct as aoc_runner::Ru..</text></g><g><title>adventofcode_rust_2015::day21::part1 (4,975 samples, 45.63%)</title><rect x="53.4024%" y="133" width="45.6255%" height="15" fill="rgb(232,167,36)" fg:x="5823" fg:w="4975"/><text x="53.6524%" y="143.50">adventofcode_rust_2015::day21::part1</text></g><g><title>cfree (5 samples, 0.05%)</title><rect x="98.9820%" y="117" width="0.0459%" height="15" fill="rgb(244,19,51)" fg:x="10793" fg:w="5"/><text x="99.2320%" y="127.50"></text></g><g><title>_start (9,929 samples, 91.06%)</title><rect x="7.9787%" y="469" width="91.0583%" height="15" fill="rgb(224,6,22)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="479.50">_start</text></g><g><title>__libc_start_main (9,929 samples, 91.06%)</title><rect x="7.9787%" y="453" width="91.0583%" height="15" fill="rgb(224,145,5)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="463.50">__libc_start_main</text></g><g><title>main (9,929 samples, 91.06%)</title><rect x="7.9787%" y="437" width="91.0583%" height="15" fill="rgb(234,130,49)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="447.50">main</text></g><g><title>std::rt::lang_start_internal (9,929 samples, 91.06%)</title><rect x="7.9787%" y="421" width="91.0583%" height="15" fill="rgb(254,6,2)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="431.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (9,929 samples, 91.06%)</title><rect x="7.9787%" y="405" width="91.0583%" height="15" fill="rgb(208,96,46)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="415.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (9,929 samples, 91.06%)</title><rect x="7.9787%" y="389" width="91.0583%" height="15" fill="rgb(239,3,39)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="399.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (9,929 samples, 91.06%)</title><rect x="7.9787%" y="373" width="91.0583%" height="15" fill="rgb(233,210,1)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="383.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (9,929 samples, 91.06%)</title><rect x="7.9787%" y="357" width="91.0583%" height="15" fill="rgb(244,137,37)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="367.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (9,929 samples, 91.06%)</title><rect x="7.9787%" y="341" width="91.0583%" height="15" fill="rgb(240,136,2)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="351.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (9,929 samples, 91.06%)</title><rect x="7.9787%" y="325" width="91.0583%" height="15" fill="rgb(239,18,37)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="335.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (9,929 samples, 91.06%)</title><rect x="7.9787%" y="309" width="91.0583%" height="15" fill="rgb(218,185,22)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="319.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (9,929 samples, 91.06%)</title><rect x="7.9787%" y="293" width="91.0583%" height="15" fill="rgb(225,218,4)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="303.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (9,929 samples, 91.06%)</title><rect x="7.9787%" y="277" width="91.0583%" height="15" fill="rgb(230,182,32)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="287.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9,929 samples, 91.06%)</title><rect x="7.9787%" y="261" width="91.0583%" height="15" fill="rgb(242,56,43)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="271.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>aoc_benchmark::main (9,929 samples, 91.06%)</title><rect x="7.9787%" y="245" width="91.0583%" height="15" fill="rgb(233,99,24)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="255.50">aoc_benchmark::main</text></g><g><title>&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run (9,929 samples, 91.06%)</title><rect x="7.9787%" y="229" width="91.0583%" height="15" fill="rgb(234,209,42)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="239.50">&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run</text></g><g><title>criterion::analysis::common (9,929 samples, 91.06%)</title><rect x="7.9787%" y="213" width="91.0583%" height="15" fill="rgb(227,7,12)" fg:x="870" fg:w="9929"/><text x="8.2287%" y="223.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (9,921 samples, 90.98%)</title><rect x="8.0521%" y="197" width="90.9850%" height="15" fill="rgb(245,203,43)" fg:x="878" fg:w="9921"/><text x="8.3021%" y="207.50">criterion::routine::Routine::sample</text></g><g><title>&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm_up (4,976 samples, 45.63%)</title><rect x="53.4024%" y="181" width="45.6346%" height="15" fill="rgb(238,205,33)" fg:x="5823" fg:w="4976"/><text x="53.6524%" y="191.50">&lt;criterion::routine::Function&lt;F,T&gt; as criterion::routine::Routine&lt;T&gt;&gt;::warm..</text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.0371%" y="229" width="0.0183%" height="15" fill="rgb(231,56,7)" fg:x="10799" fg:w="2"/><text x="99.2871%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.0371%" y="213" width="0.0183%" height="15" fill="rgb(244,186,29)" fg:x="10799" fg:w="2"/><text x="99.2871%" y="223.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.0371%" y="197" width="0.0183%" height="15" fill="rgb(234,111,31)" fg:x="10799" fg:w="2"/><text x="99.2871%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.0371%" y="181" width="0.0183%" height="15" fill="rgb(241,149,10)" fg:x="10799" fg:w="2"/><text x="99.2871%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.04%)</title><rect x="99.0371%" y="261" width="0.0367%" height="15" fill="rgb(249,206,44)" fg:x="10799" fg:w="4"/><text x="99.2871%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.04%)</title><rect x="99.0371%" y="245" width="0.0367%" height="15" fill="rgb(251,153,30)" fg:x="10799" fg:w="4"/><text x="99.2871%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.0554%" y="229" width="0.0183%" height="15" fill="rgb(239,152,38)" fg:x="10801" fg:w="2"/><text x="99.3054%" y="239.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.0554%" y="213" width="0.0183%" height="15" fill="rgb(249,139,47)" fg:x="10801" fg:w="2"/><text x="99.3054%" y="223.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.0554%" y="197" width="0.0183%" height="15" fill="rgb(244,64,35)" fg:x="10801" fg:w="2"/><text x="99.3054%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.0554%" y="181" width="0.0183%" height="15" fill="rgb(216,46,15)" fg:x="10801" fg:w="2"/><text x="99.3054%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.0554%" y="165" width="0.0183%" height="15" fill="rgb(250,74,19)" fg:x="10801" fg:w="2"/><text x="99.3054%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.0554%" y="149" width="0.0183%" height="15" fill="rgb(249,42,33)" fg:x="10801" fg:w="2"/><text x="99.3054%" y="159.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.06%)</title><rect x="99.0371%" y="309" width="0.0642%" height="15" fill="rgb(242,149,17)" fg:x="10799" fg:w="7"/><text x="99.2871%" y="319.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.06%)</title><rect x="99.0371%" y="293" width="0.0642%" height="15" fill="rgb(244,29,21)" fg:x="10799" fg:w="7"/><text x="99.2871%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.06%)</title><rect x="99.0371%" y="277" width="0.0642%" height="15" fill="rgb(220,130,37)" fg:x="10799" fg:w="7"/><text x="99.2871%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.03%)</title><rect x="99.0737%" y="261" width="0.0275%" height="15" fill="rgb(211,67,2)" fg:x="10803" fg:w="3"/><text x="99.3237%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="99.0737%" y="245" width="0.0275%" height="15" fill="rgb(235,68,52)" fg:x="10803" fg:w="3"/><text x="99.3237%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.0737%" y="229" width="0.0275%" height="15" fill="rgb(246,142,3)" fg:x="10803" fg:w="3"/><text x="99.3237%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.0829%" y="213" width="0.0183%" height="15" fill="rgb(241,25,7)" fg:x="10804" fg:w="2"/><text x="99.3329%" y="223.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.0829%" y="197" width="0.0183%" height="15" fill="rgb(242,119,39)" fg:x="10804" fg:w="2"/><text x="99.3329%" y="207.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.0829%" y="181" width="0.0183%" height="15" fill="rgb(241,98,45)" fg:x="10804" fg:w="2"/><text x="99.3329%" y="191.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1104%" y="245" width="0.0183%" height="15" fill="rgb(254,28,30)" fg:x="10807" fg:w="2"/><text x="99.3604%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1104%" y="229" width="0.0183%" height="15" fill="rgb(241,142,54)" fg:x="10807" fg:w="2"/><text x="99.3604%" y="239.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.03%)</title><rect x="99.1104%" y="277" width="0.0275%" height="15" fill="rgb(222,85,15)" fg:x="10807" fg:w="3"/><text x="99.3604%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.1104%" y="261" width="0.0275%" height="15" fill="rgb(210,85,47)" fg:x="10807" fg:w="3"/><text x="99.3604%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.07%)</title><rect x="99.1012%" y="309" width="0.0734%" height="15" fill="rgb(224,206,25)" fg:x="10806" fg:w="8"/><text x="99.3512%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.06%)</title><rect x="99.1104%" y="293" width="0.0642%" height="15" fill="rgb(243,201,19)" fg:x="10807" fg:w="7"/><text x="99.3604%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.04%)</title><rect x="99.1379%" y="277" width="0.0367%" height="15" fill="rgb(236,59,4)" fg:x="10810" fg:w="4"/><text x="99.3879%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.04%)</title><rect x="99.1379%" y="261" width="0.0367%" height="15" fill="rgb(254,179,45)" fg:x="10810" fg:w="4"/><text x="99.3879%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.04%)</title><rect x="99.1379%" y="245" width="0.0367%" height="15" fill="rgb(226,14,10)" fg:x="10810" fg:w="4"/><text x="99.3879%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.04%)</title><rect x="99.1379%" y="229" width="0.0367%" height="15" fill="rgb(244,27,41)" fg:x="10810" fg:w="4"/><text x="99.3879%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.03%)</title><rect x="99.1471%" y="213" width="0.0275%" height="15" fill="rgb(235,35,32)" fg:x="10811" fg:w="3"/><text x="99.3971%" y="223.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.02%)</title><rect x="99.1563%" y="197" width="0.0183%" height="15" fill="rgb(218,68,31)" fg:x="10812" fg:w="2"/><text x="99.4063%" y="207.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1563%" y="181" width="0.0183%" height="15" fill="rgb(207,120,37)" fg:x="10812" fg:w="2"/><text x="99.4063%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1563%" y="165" width="0.0183%" height="15" fill="rgb(227,98,0)" fg:x="10812" fg:w="2"/><text x="99.4063%" y="175.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.02%)</title><rect x="99.1563%" y="149" width="0.0183%" height="15" fill="rgb(207,7,3)" fg:x="10812" fg:w="2"/><text x="99.4063%" y="159.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.03%)</title><rect x="99.1746%" y="293" width="0.0275%" height="15" fill="rgb(206,98,19)" fg:x="10814" fg:w="3"/><text x="99.4246%" y="303.50"></text></g><g><title>std::panicking::try (3 samples, 0.03%)</title><rect x="99.1746%" y="277" width="0.0275%" height="15" fill="rgb(217,5,26)" fg:x="10814" fg:w="3"/><text x="99.4246%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.03%)</title><rect x="99.1746%" y="261" width="0.0275%" height="15" fill="rgb(235,190,38)" fg:x="10814" fg:w="3"/><text x="99.4246%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="99.1838%" y="245" width="0.0183%" height="15" fill="rgb(247,86,24)" fg:x="10815" fg:w="2"/><text x="99.4338%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="99.2113%" y="197" width="0.1009%" height="15" fill="rgb(205,101,16)" fg:x="10818" fg:w="11"/><text x="99.4613%" y="207.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="99.2113%" y="181" width="0.1009%" height="15" fill="rgb(246,168,33)" fg:x="10818" fg:w="11"/><text x="99.4613%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="99.2113%" y="165" width="0.1009%" height="15" fill="rgb(231,114,1)" fg:x="10818" fg:w="11"/><text x="99.4613%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="99.2113%" y="149" width="0.1009%" height="15" fill="rgb(207,184,53)" fg:x="10818" fg:w="11"/><text x="99.4613%" y="159.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.10%)</title><rect x="99.2113%" y="133" width="0.1009%" height="15" fill="rgb(224,95,51)" fg:x="10818" fg:w="11"/><text x="99.4613%" y="143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.20%)</title><rect x="99.2113%" y="229" width="0.2018%" height="15" fill="rgb(212,188,45)" fg:x="10818" fg:w="22"/><text x="99.4613%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.20%)</title><rect x="99.2113%" y="213" width="0.2018%" height="15" fill="rgb(223,154,38)" fg:x="10818" fg:w="22"/><text x="99.4613%" y="223.50"></text></g><g><title>std::panicking::try (11 samples, 0.10%)</title><rect x="99.3122%" y="197" width="0.1009%" height="15" fill="rgb(251,22,52)" fg:x="10829" fg:w="11"/><text x="99.5622%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="99.3122%" y="181" width="0.1009%" height="15" fill="rgb(229,209,22)" fg:x="10829" fg:w="11"/><text x="99.5622%" y="191.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="99.3122%" y="165" width="0.1009%" height="15" fill="rgb(234,138,34)" fg:x="10829" fg:w="11"/><text x="99.5622%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="99.3122%" y="149" width="0.1009%" height="15" fill="rgb(212,95,11)" fg:x="10829" fg:w="11"/><text x="99.5622%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="99.3122%" y="133" width="0.1009%" height="15" fill="rgb(240,179,47)" fg:x="10829" fg:w="11"/><text x="99.5622%" y="143.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.07%)</title><rect x="99.3397%" y="117" width="0.0734%" height="15" fill="rgb(240,163,11)" fg:x="10832" fg:w="8"/><text x="99.5897%" y="127.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.11%)</title><rect x="99.4131%" y="181" width="0.1101%" height="15" fill="rgb(236,37,12)" fg:x="10840" fg:w="12"/><text x="99.6631%" y="191.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.11%)</title><rect x="99.4131%" y="165" width="0.1101%" height="15" fill="rgb(232,164,16)" fg:x="10840" fg:w="12"/><text x="99.6631%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.11%)</title><rect x="99.4131%" y="149" width="0.1101%" height="15" fill="rgb(244,205,15)" fg:x="10840" fg:w="12"/><text x="99.6631%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.11%)</title><rect x="99.4131%" y="133" width="0.1101%" height="15" fill="rgb(223,117,47)" fg:x="10840" fg:w="12"/><text x="99.6631%" y="143.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.10%)</title><rect x="99.4222%" y="117" width="0.1009%" height="15" fill="rgb(244,107,35)" fg:x="10841" fg:w="11"/><text x="99.6722%" y="127.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.42%)</title><rect x="99.2113%" y="261" width="0.4219%" height="15" fill="rgb(205,140,8)" fg:x="10818" fg:w="46"/><text x="99.4613%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (46 samples, 0.42%)</title><rect x="99.2113%" y="245" width="0.4219%" height="15" fill="rgb(228,84,46)" fg:x="10818" fg:w="46"/><text x="99.4613%" y="255.50"></text></g><g><title>std::panicking::try (24 samples, 0.22%)</title><rect x="99.4131%" y="229" width="0.2201%" height="15" fill="rgb(254,188,9)" fg:x="10840" fg:w="24"/><text x="99.6631%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.22%)</title><rect x="99.4131%" y="213" width="0.2201%" height="15" fill="rgb(206,112,54)" fg:x="10840" fg:w="24"/><text x="99.6631%" y="223.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 0.22%)</title><rect x="99.4131%" y="197" width="0.2201%" height="15" fill="rgb(216,84,49)" fg:x="10840" fg:w="24"/><text x="99.6631%" y="207.50"></text></g><g><title>std::panicking::try (12 samples, 0.11%)</title><rect x="99.5231%" y="181" width="0.1101%" height="15" fill="rgb(214,194,35)" fg:x="10852" fg:w="12"/><text x="99.7731%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.11%)</title><rect x="99.5231%" y="165" width="0.1101%" height="15" fill="rgb(249,28,3)" fg:x="10852" fg:w="12"/><text x="99.7731%" y="175.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.11%)</title><rect x="99.5231%" y="149" width="0.1101%" height="15" fill="rgb(222,56,52)" fg:x="10852" fg:w="12"/><text x="99.7731%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.11%)</title><rect x="99.5231%" y="133" width="0.1101%" height="15" fill="rgb(245,217,50)" fg:x="10852" fg:w="12"/><text x="99.7731%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.11%)</title><rect x="99.5231%" y="117" width="0.1101%" height="15" fill="rgb(213,201,24)" fg:x="10852" fg:w="12"/><text x="99.7731%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="99.5415%" y="101" width="0.0917%" height="15" fill="rgb(248,116,28)" fg:x="10854" fg:w="10"/><text x="99.7915%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.11%)</title><rect x="99.6515%" y="181" width="0.1101%" height="15" fill="rgb(219,72,43)" fg:x="10866" fg:w="12"/><text x="99.9015%" y="191.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.11%)</title><rect x="99.6515%" y="165" width="0.1101%" height="15" fill="rgb(209,138,14)" fg:x="10866" fg:w="12"/><text x="99.9015%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.11%)</title><rect x="99.6515%" y="149" width="0.1101%" height="15" fill="rgb(222,18,33)" fg:x="10866" fg:w="12"/><text x="99.9015%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.11%)</title><rect x="99.6515%" y="133" width="0.1101%" height="15" fill="rgb(213,199,7)" fg:x="10866" fg:w="12"/><text x="99.9015%" y="143.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.08%)</title><rect x="99.6790%" y="117" width="0.0825%" height="15" fill="rgb(250,110,10)" fg:x="10869" fg:w="9"/><text x="99.9290%" y="127.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.21%)</title><rect x="99.6515%" y="213" width="0.2109%" height="15" fill="rgb(248,123,6)" fg:x="10866" fg:w="23"/><text x="99.9015%" y="223.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.21%)</title><rect x="99.6515%" y="197" width="0.2109%" height="15" fill="rgb(206,91,31)" fg:x="10866" fg:w="23"/><text x="99.9015%" y="207.50"></text></g><g><title>std::panicking::try (11 samples, 0.10%)</title><rect x="99.7616%" y="181" width="0.1009%" height="15" fill="rgb(211,154,13)" fg:x="10878" fg:w="11"/><text x="100.0116%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.10%)</title><rect x="99.7616%" y="165" width="0.1009%" height="15" fill="rgb(225,148,7)" fg:x="10878" fg:w="11"/><text x="100.0116%" y="175.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.10%)</title><rect x="99.7616%" y="149" width="0.1009%" height="15" fill="rgb(220,160,43)" fg:x="10878" fg:w="11"/><text x="100.0116%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="99.7616%" y="133" width="0.1009%" height="15" fill="rgb(213,52,39)" fg:x="10878" fg:w="11"/><text x="100.0116%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.10%)</title><rect x="99.7616%" y="117" width="0.1009%" height="15" fill="rgb(243,137,7)" fg:x="10878" fg:w="11"/><text x="100.0116%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="99.7707%" y="101" width="0.0917%" height="15" fill="rgb(230,79,13)" fg:x="10879" fg:w="10"/><text x="100.0207%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.11%)</title><rect x="99.8624%" y="165" width="0.1101%" height="15" fill="rgb(247,105,23)" fg:x="10889" fg:w="12"/><text x="100.1124%" y="175.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.11%)</title><rect x="99.8624%" y="149" width="0.1101%" height="15" fill="rgb(223,179,41)" fg:x="10889" fg:w="12"/><text x="100.1124%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.11%)</title><rect x="99.8624%" y="133" width="0.1101%" height="15" fill="rgb(218,9,34)" fg:x="10889" fg:w="12"/><text x="100.1124%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.11%)</title><rect x="99.8624%" y="117" width="0.1101%" height="15" fill="rgb(222,106,8)" fg:x="10889" fg:w="12"/><text x="100.1124%" y="127.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.09%)</title><rect x="99.8808%" y="101" width="0.0917%" height="15" fill="rgb(211,220,0)" fg:x="10891" fg:w="10"/><text x="100.1308%" y="111.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (104 samples, 0.95%)</title><rect x="99.0371%" y="325" width="0.9538%" height="15" fill="rgb(229,52,16)" fg:x="10799" fg:w="104"/><text x="99.2871%" y="335.50"></text></g><g><title>std::panicking::try (89 samples, 0.82%)</title><rect x="99.1746%" y="309" width="0.8162%" height="15" fill="rgb(212,155,18)" fg:x="10814" fg:w="89"/><text x="99.4246%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (86 samples, 0.79%)</title><rect x="99.2021%" y="293" width="0.7887%" height="15" fill="rgb(242,21,14)" fg:x="10817" fg:w="86"/><text x="99.4521%" y="303.50"></text></g><g><title>rayon_core::registry::in_worker (85 samples, 0.78%)</title><rect x="99.2113%" y="277" width="0.7795%" height="15" fill="rgb(222,19,48)" fg:x="10818" fg:w="85"/><text x="99.4613%" y="287.50"></text></g><g><title>std::panicking::try (38 samples, 0.35%)</title><rect x="99.6423%" y="261" width="0.3485%" height="15" fill="rgb(232,45,27)" fg:x="10865" fg:w="38"/><text x="99.8923%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.35%)</title><rect x="99.6423%" y="245" width="0.3485%" height="15" fill="rgb(249,103,42)" fg:x="10865" fg:w="38"/><text x="99.8923%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (37 samples, 0.34%)</title><rect x="99.6515%" y="229" width="0.3393%" height="15" fill="rgb(246,81,33)" fg:x="10866" fg:w="37"/><text x="99.9015%" y="239.50"></text></g><g><title>std::panicking::try (14 samples, 0.13%)</title><rect x="99.8624%" y="213" width="0.1284%" height="15" fill="rgb(252,33,42)" fg:x="10889" fg:w="14"/><text x="100.1124%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.13%)</title><rect x="99.8624%" y="197" width="0.1284%" height="15" fill="rgb(209,212,41)" fg:x="10889" fg:w="14"/><text x="100.1124%" y="207.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.13%)</title><rect x="99.8624%" y="181" width="0.1284%" height="15" fill="rgb(207,154,6)" fg:x="10889" fg:w="14"/><text x="100.1124%" y="191.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="99.9725%" y="165" width="0.0183%" height="15" fill="rgb(223,64,47)" fg:x="10901" fg:w="2"/><text x="100.2225%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.02%)</title><rect x="99.9725%" y="149" width="0.0183%" height="15" fill="rgb(211,161,38)" fg:x="10901" fg:w="2"/><text x="100.2225%" y="159.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.02%)</title><rect x="99.9725%" y="133" width="0.0183%" height="15" fill="rgb(219,138,40)" fg:x="10901" fg:w="2"/><text x="100.2225%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="99.9725%" y="117" width="0.0183%" height="15" fill="rgb(241,228,46)" fg:x="10901" fg:w="2"/><text x="100.2225%" y="127.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (2 samples, 0.02%)</title><rect x="99.9725%" y="101" width="0.0183%" height="15" fill="rgb(223,209,38)" fg:x="10901" fg:w="2"/><text x="100.2225%" y="111.50"></text></g><g><title>all (10,904 samples, 100%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(236,164,45)" fg:x="0" fg:w="10904"/><text x="0.2500%" y="511.50"></text></g><g><title>aoc_benchmark-4 (10,904 samples, 100.00%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(231,15,5)" fg:x="0" fg:w="10904"/><text x="0.2500%" y="495.50">aoc_benchmark-4</text></g><g><title>clone (105 samples, 0.96%)</title><rect x="99.0371%" y="469" width="0.9629%" height="15" fill="rgb(252,35,15)" fg:x="10799" fg:w="105"/><text x="99.2871%" y="479.50"></text></g><g><title>start_thread (105 samples, 0.96%)</title><rect x="99.0371%" y="453" width="0.9629%" height="15" fill="rgb(248,181,18)" fg:x="10799" fg:w="105"/><text x="99.2871%" y="463.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (105 samples, 0.96%)</title><rect x="99.0371%" y="437" width="0.9629%" height="15" fill="rgb(233,39,42)" fg:x="10799" fg:w="105"/><text x="99.2871%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (105 samples, 0.96%)</title><rect x="99.0371%" y="421" width="0.9629%" height="15" fill="rgb(238,110,33)" fg:x="10799" fg:w="105"/><text x="99.2871%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (105 samples, 0.96%)</title><rect x="99.0371%" y="405" width="0.9629%" height="15" fill="rgb(233,195,10)" fg:x="10799" fg:w="105"/><text x="99.2871%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (105 samples, 0.96%)</title><rect x="99.0371%" y="389" width="0.9629%" height="15" fill="rgb(254,105,3)" fg:x="10799" fg:w="105"/><text x="99.2871%" y="399.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (105 samples, 0.96%)</title><rect x="99.0371%" y="373" width="0.9629%" height="15" fill="rgb(221,225,9)" fg:x="10799" fg:w="105"/><text x="99.2871%" y="383.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (105 samples, 0.96%)</title><rect x="99.0371%" y="357" width="0.9629%" height="15" fill="rgb(224,227,45)" fg:x="10799" fg:w="105"/><text x="99.2871%" y="367.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (105 samples, 0.96%)</title><rect x="99.0371%" y="341" width="0.9629%" height="15" fill="rgb(229,198,43)" fg:x="10799" fg:w="105"/><text x="99.2871%" y="351.50"></text></g></svg></svg>